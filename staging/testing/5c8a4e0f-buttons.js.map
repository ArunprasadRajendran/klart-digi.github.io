{"version":3,"sources":["webpack:///./node_modules/@syncfusion/ej2-navigations/src/treeview/treeview.js"],"names":["_extendStatics","__extends","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","this","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","ROOT","COLLAPSIBLE","EXPANDABLE","LISTITEM","LISTTEXT","PARENTITEM","HOVER","ACTIVE","LOAD","PROCESS","ICON","TEXTWRAP","SIBLING","DROPNEXT","FULLROW","SELECTED","CHECK","CHECKBOXWRAP","FOCUS","treeAriaAttr","treeRole","itemRole","listRole","itemText","wrapperRole","FieldsSettings","_super","apply","ActionSettings","NodeAnimationSettings","effect","duration","easing","TreeView","options","element","_this","call","isRefreshed","preventExpand","checkedElement","disableNode","validArr","expandChildren","isFieldChange","changeDataSource","isBlazorExpandedNodes","mouseDownStatus","TreeView_1","getModuleName","preRender","isBlazorPlatform","isServerRendered","checkActionNodes","parentNodeCheck","dragStartAction","isAnimate","keyConfigs","escape","end","enter","f2","home","moveDown","moveLeft","moveRight","moveUp","ctrlDown","ctrlUp","ctrlEnter","ctrlHome","ctrlEnd","ctrlA","shiftDown","shiftUp","shiftEnter","shiftHome","shiftEnd","csDown","csUp","csEnter","csHome","csEnd","space","listBaseOption","expandCollapse","showIcon","expandIconClass","ariaAttributes","expandIconPosition","itemCreated","e","beforeNodeCreate","enableHtmlSanitizer","itemNavigable","fullRowNavigable","updateListProp","fields","aniObj","treeList","isLoaded","isInitalExpand","index","setTouchClass","selectedNodes","setProperties","checkedNodes","expandedNodes","getPersistData","addOnPersist","render","initialRender","blazorInitialRender","initialize","setDataBinding","setDisabledMode","setExpandOnType","disabled","setRipple","wireEditingEvents","allowEditing","setDragAndDrop","allowDragAndDrop","wireEvents","renderComplete","setAttribute","id","setCssClass","cssClass","setEnableRtl","setFullRow","fullRowSelect","nodeTemplateFn","templateComplier","nodeTemplate","classList","add","remove","enableRtl","rippleModel","selector","ignore","rippleFn","iconModel","isCenterRipple","rippleIconFn","isEnabled","setMultiSelect","firstUl","removeAttribute","template","document","querySelectorAll","querySelector","innerHTML","trim","push","dataSource","isOffline","offline","ready","then","pop","treeData","result","isNumberTypeId","getType","setRootData","renderItems","finalize","catch","trigger","error","executeQuery","getQuery","rootData","JSON","parse","stringify","mapper","value","query","columns","clone","prop","getActualProperties","_i","_a","keys","col","indexOf","select","from","tableName","addSorting","sortOrder","text","parentID","where","parseFloat","dataType","getDataType","groupedData","getGroupedData","rootItems","getChildNodes","undefined","isSorted","adaptorName","level","sortedData","getSortedData","ulElement","createList","createElement","appendChild","rootNodes","loadOnDemand","renderChildNodes","finalizeNode","updateTemplateForBlazor","parentCheckData","updateCheckedStateFromDS","autoCheck","showCheckBox","updateParentCheckState","isStringTemplate","updateBlazorTemplate","resultData","executeLocal","isChecked","resultId","toString","hasChildren","id_1","childData","child","childId","mapper_1","checkState","getCheckedNodeDetails","checkIndeterminateState","checkedData","checkedId","fieldId","childItems","updateChildCheckState","checkNodes","count","parentEle","changeState","childNodes","preElement","childCheckedElement","indeterminate","node","nodeId","getAttribute","j","nodeCheck","data","checkedParent","checkedChild","subChildItems","len","checkboxEle","touchClass","icon","item","insertBefore","checkValue","curData","addCheck","frame","frameMouseHandler","createFullRow","allowMultiSelection","contains","addActionClass","selected","expanded","textEle","dataId","renderNodeTemplate","eventArgs","nodeData","rippleSpan","parentElement","action","actionValue","ds","groupBy","cusQuery","group","getDataSource","grpItem","itemObj","items","list","iNodes","k","sNodes","selectNode","cNodes","disableExpandAttr","eNodes","updateList","updateCheckedProp","nodes","concat","ensureIndeterminate","liElement","ensureParentCheckState","ensureChildCheckState","indeterminateNodes","checkBoxEle","getElementsByClassName","parentUL","currentParent","childElement","checkBoxes","parentCheck","childCheck","checkedState","currentLoadData","isNodeChecked","splice","ele","doCheckBoxAction","doCheck","updateFieldChecked","liEle","getElement","setValidCheckedNode","dynamicCheckState","updateField","checkBox","validateCheckNode","checkbox","currLi","getNodeData","parent_1","check","updateIndeterminate","subChild","updateChildIndeterminate","parent","indeterminateData","getTreeData","subId","childElementCheck","innerChild","wrapper","state","isPrevent","isAdd","nodeCheckAction","getCheckEvent","observedArgs","cancel","ariaState","frameSpan","removeCheck","ensureStateChange","allowServerDataBinding","updateServerProperties","checked","isInteracted","firstNode","updateIdAttr","renderReactTemplates","hasPid","doExpandAction","eUids","expandGivenNodes","eNode","expandAction","afterFinalized","arr","proxy","expandCallback","eUid","callback","doSelectionAction","setCheckedNodes","updateInstance","sUids","sNode","selectGivenNodes","clickHandler","event","originalEvent","preventContextMenu","li","which","rippleElement","rippleIcons","removeHover","setFocusElement","checkWrapper","checkElement","triggerClickEvent","collapseNode","toggleSelect","nodeCheckedEvent","isCheck","expandNode","loaded","hideSpinner","start_1","end_1","proxy_1","ul_1","liEle_1","setHeight","activeElement_1","animate","name","animation","expand","timingFunction","begin","args","style","overflow","HTMLElement","offsetHeight","progress","display","animateHeight","expandedNode","ul","height","addExpand","expandArgs","getExpandEvent","colArgs","nodeCollapseAction","start","activeElement","collapse","collapsedNode","removeExpand","toRemove","visibility","currentHeight","timeStamp","parentLi","expandChild","eicon","showSpinner","parents","mapper_2","getChildFields","loadChild","setSelectionForChildNodes","ensureCheckNode","disableTreeNodes","renderSubChild","getNodeObject","doDisableAction","getFields","nodeLevel","dataLevel","getChildMapper","obj","parentId","isRoot","getChildGroup","objlen","cIcons","curLi","multiSelect","ctrlKey","isActive","unselectNode","getSelectEvent","nodeSelectAction","removeSelectAll","shiftKey","startNode","startIndex","liList","endIndex","temp","currNode","addSelect","nodeUnselectAction","removeSelect","focusedNode","getFocusedNode","selectedLI","selectedLI_1","expandOnType","expandOn","isDevice","expandHandler","expandCollapseAction","nodeExpandAction","nodeName","liEles","getId","icon_1","keyActionHandler","inpEle","blur","focus","oldText","preventDefault","checkNode","openNode","shiftKeySelect","navigateNode","navigateRootNode","createTextbox","navigateToFocus","isUp","focusNode","pos","getBoundingClientRect","getScrollParent","parentPos","bottom","scrollTop","top","isVisibleInViewport","scrollIntoView","txtWrap","left","window","innerHeight","documentElement","clientHeight","right","innerWidth","clientWidth","scrollHeight","isTowards","nextNode","getNextNode","getPrevNode","checkWrap","nodeCheckingAction","allCheckNode","parentIndex","getChildItems","childStateChange","childIsCheck","newCheck","validateCheck","length_1","childId_1","toBeOpened","focusNextNode","setFocus","isBackwards","rootNode","getRootNode","getEndNode","selectedItem","fNode","firstElementChild","lastChild","previousSibling","nextSibling","prevNode","endNode","preNode","focusIn","focusOut","onMouseOver","currentLi","setHover","onMouseLeave","hoveredNode","fromDS","getText","pNode","parentNode","pid","nodeFields","textContent","tempArr","slice","destroyTemplate","clearTemplate","reRenderNodes","removeChild","oldClass","newClass","split","editingHandler","oldInpEle","updateOldText","innerEle","className","attrs","getEditEvent","outerHTML","offsetWidth","innerHtml","inputObj","createInput","properties","container","inputEle","setSelectionRange","wireInputEvents","editData","editFields","inputFocusOut","newText","txtEle","crudOperation","appendNewText","isInput","updateText","triggerEvent","newData","innerText","getChildNodeObject","newList","toBind","initializeDrag","destroyDrag","virtualEle","dragObj","enableTailMode","enableAutoScroll","dragArea","dragTarget","helper","sender","dragRoot","dragWrap","dragLi","nextElementSibling","isSameNode","cloneEle","cloneNode","children","DRAGITEM","nLen","cNode","body","cursor","dragData","dragStart","listItem","parseInt","getDragEvent","draggedNode","intDestroy","dragCancelAction","bindEvents","dragElement","drag","cursorAt","targetTouches","dragAction","dragStop","removeVirtualEle","dropTarget","dropRoot","isHelperElement","preventTargetExpand","dragParent","draggedParentNode","dropAction","dropObj","out","over","drop","dropWrap","dropLi","isDescendant","offsetY","offsetX","virEle","renderVirtualEle","dropIndicator","isBlazorDrop","dragInstance","draggable","ej2_instances","droppedElement","appendNode","draggedElement","dropAsChildNode","dropAsSiblingNode","pre","dropUl","dragParentUl","dragParentLi","closest","moveData","updateElement","updateAriaLevel","dropParentUl","expandParent","childLi","dropParentLi","removedData","updateChildField","refId","getDataPos","currPid","removeChildNodes","addChildData","dropIcon","generateIcon","generateUL","childElementCount","dragIcon","updateChildAriaLevel","sibEle","destroy","dragNode","dropData","draggedNodeData","newParent","dragLiParent","targetParent","indexValue","iconCss","iconClass","position","dropTar","parent_2","parent_3","hasAttribute","clonedNode","droppedNode","droppedNodeData","dropIndex","dropLevel","addFullRow","toAdd","rowDiv","addMultiSelect","liEles_1","liEles_2","collapseByLevel","excludeHiddenNodes","getVisibleNodes","collapseAllNodes","expandByLevel","expandAllNodes","eIcons","vNodes","removeNode","removeData","updateSelectedNodes","updateExpandedNodes","a","dm","newId","currId","doGivenAction","toExpand","addGivenNodes","isRemote","dropEle","updateMapper","createListItemFromJson","refNode","url","navigateUrl","updated","childObj","validNodes","nodeType","validID","checkValidId","doEnableAction","strNodes","filter","filterNestedChild","updatePersistProp","removeField","sleNodes","l","slelen","enodes","nodelen","cnodes","m","names","field","getMapperProp","fieldName","clientUpdateInitial","proxy_2","touchEditObj","tap","isDoubleTapped","tapCount","wireClickEvent","proxy_3","touchClickObj","wireExpandOnEvent","proxy_4","touchExpandObj","mouseDownHandler","keyboardModule","keyAction","bind","eventName","unWireEvents","matched","el","secondTap","firstTap","width","uncheckAll","setIndeterminate","checkAll","setChildCheckState","parent_4","updatePosition","isRefreshChild","childValue","updateChildPosition","currID","found","dynamicState","operation","newNode","prevent","crud","matchedArr","changes","addedRecords","deletedRecords","changedRecords","nodesID","fromTable","saveChanges","deleteSuccess","dmFailure","update","editSucess","insert","addSuccess","updatePreviousText","onPropertyChanged","newProp","oldProp","collapseAll","onLoaded","addNodes","beginEdit","disableNodes","enableNodes","ensureVisible","expandAll","setTimeout","getAllCheckedNodes","getDisabledNodes","getNode","moveNodes","sourceNodes","refreshNode","updatedChildValue","newNodeData","parentData","refreshData","newliEle","newTextEle","newIcon","fullEle","tooltip","htmlAttributes","attr","class","removeNodes","updateNode"],"mappings":"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","file":"5c8a4e0f-buttons.js","sourcesContent":["var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { Component, isUndefined, Browser, compile, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Property, NotifyPropertyChanges, ChildProperty, Complex } from '@syncfusion/ej2-base';\nimport { Event, EventHandler, KeyboardEvents } from '@syncfusion/ej2-base';\nimport { rippleEffect, Animation, remove } from '@syncfusion/ej2-base';\nimport { Draggable, Droppable } from '@syncfusion/ej2-base';\nimport { updateBlazorTemplate, resetBlazorTemplate, isBlazor, getElement } from '@syncfusion/ej2-base';\nimport { addClass, removeClass, closest, matches, detach, select, selectAll, isVisible, append } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport { isNullOrUndefined as isNOU, Touch, getValue, setValue, extend, merge, attributes } from '@syncfusion/ej2-base';\nimport { ListBase } from '@syncfusion/ej2-lists';\nimport { createCheckBox, rippleMouseHandler } from '@syncfusion/ej2-buttons';\nimport { Input } from '@syncfusion/ej2-inputs';\nimport { createSpinner, showSpinner, hideSpinner } from '@syncfusion/ej2-popups';\nvar ROOT = 'e-treeview';\nvar CONTROL = 'e-control';\nvar COLLAPSIBLE = 'e-icon-collapsible';\nvar EXPANDABLE = 'e-icon-expandable';\nvar LISTITEM = 'e-list-item';\nvar LISTTEXT = 'e-list-text';\nvar PARENTITEM = 'e-list-parent';\nvar HOVER = 'e-hover';\nvar ACTIVE = 'e-active';\nvar LOAD = 'e-icons-spinner';\nvar PROCESS = 'e-process';\nvar ICON = 'e-icons';\nvar TEXTWRAP = 'e-text-content';\nvar INPUT = 'e-input';\nvar INPUTGROUP = 'e-input-group';\nvar TREEINPUT = 'e-tree-input';\nvar EDITING = 'e-editing';\nvar RTL = 'e-rtl';\nvar INTERACTION = 'e-interaction';\nvar DRAGITEM = 'e-drag-item';\nvar DROPPABLE = 'e-droppable';\nvar DRAGGING = 'e-dragging';\nvar SIBLING = 'e-sibling';\nvar DROPIN = 'e-drop-in';\nvar DROPNEXT = 'e-drop-next';\nvar DROPOUT = 'e-drop-out';\nvar NODROP = 'e-no-drop';\nvar FULLROWWRAP = 'e-fullrow-wrap';\nvar FULLROW = 'e-fullrow';\nvar SELECTED = 'e-selected';\nvar EXPANDED = 'e-expanded';\nvar NODECOLLAPSED = 'e-node-collapsed';\nvar DISABLE = 'e-disable';\nvar DROPCOUNT = 'e-drop-count';\nvar CHECK = 'e-check';\nvar INDETERMINATE = 'e-stop';\nvar CHECKBOXWRAP = 'e-checkbox-wrapper';\nvar CHECKBOXFRAME = 'e-frame';\nvar CHECKBOXRIPPLE = 'e-ripple-container';\nvar RIPPLE = 'e-ripple';\nvar RIPPLEELMENT = 'e-ripple-element';\nvar FOCUS = 'e-node-focus';\nvar IMAGE = 'e-list-img';\nvar BIGGER = 'e-bigger';\nvar SMALL = 'e-small';\nvar CHILD = 'e-has-child';\nvar ITEM_ANIMATION_ACTIVE = 'e-animation-active';\nvar DISABLED = 'e-disabled';\nvar treeAriaAttr = {\n  treeRole: 'tree',\n  itemRole: 'treeitem',\n  listRole: 'group',\n  itemText: '',\n  wrapperRole: ''\n};\n/**\n * Configures the fields to bind to the properties of node in the TreeView component.\n */\n\nvar FieldsSettings =\n/** @class */\nfunction (_super) {\n  __extends(FieldsSettings, _super);\n\n  function FieldsSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Property('child')], FieldsSettings.prototype, \"child\", void 0);\n\n  __decorate([Property([])], FieldsSettings.prototype, \"dataSource\", void 0);\n\n  __decorate([Property('expanded')], FieldsSettings.prototype, \"expanded\", void 0);\n\n  __decorate([Property('hasChildren')], FieldsSettings.prototype, \"hasChildren\", void 0);\n\n  __decorate([Property('htmlAttributes')], FieldsSettings.prototype, \"htmlAttributes\", void 0);\n\n  __decorate([Property('iconCss')], FieldsSettings.prototype, \"iconCss\", void 0);\n\n  __decorate([Property('id')], FieldsSettings.prototype, \"id\", void 0);\n\n  __decorate([Property('imageUrl')], FieldsSettings.prototype, \"imageUrl\", void 0);\n\n  __decorate([Property('isChecked')], FieldsSettings.prototype, \"isChecked\", void 0);\n\n  __decorate([Property('parentID')], FieldsSettings.prototype, \"parentID\", void 0);\n\n  __decorate([Property(null)], FieldsSettings.prototype, \"query\", void 0);\n\n  __decorate([Property('selected')], FieldsSettings.prototype, \"selected\", void 0);\n\n  __decorate([Property(null)], FieldsSettings.prototype, \"tableName\", void 0);\n\n  __decorate([Property('text')], FieldsSettings.prototype, \"text\", void 0);\n\n  __decorate([Property('tooltip')], FieldsSettings.prototype, \"tooltip\", void 0);\n\n  __decorate([Property('navigateUrl')], FieldsSettings.prototype, \"navigateUrl\", void 0);\n\n  return FieldsSettings;\n}(ChildProperty);\n\nexport { FieldsSettings };\n/**\n * Configures animation settings for the TreeView component.\n */\n\nvar ActionSettings =\n/** @class */\nfunction (_super) {\n  __extends(ActionSettings, _super);\n\n  function ActionSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Property('SlideDown')], ActionSettings.prototype, \"effect\", void 0);\n\n  __decorate([Property(400)], ActionSettings.prototype, \"duration\", void 0);\n\n  __decorate([Property('linear')], ActionSettings.prototype, \"easing\", void 0);\n\n  return ActionSettings;\n}(ChildProperty);\n\nexport { ActionSettings };\n/**\n * Configures the animation settings for expanding and collapsing nodes in TreeView.\n */\n\nvar NodeAnimationSettings =\n/** @class */\nfunction (_super) {\n  __extends(NodeAnimationSettings, _super);\n\n  function NodeAnimationSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Complex({\n    effect: 'SlideUp',\n    duration: 400,\n    easing: 'linear'\n  }, ActionSettings)], NodeAnimationSettings.prototype, \"collapse\", void 0);\n\n  __decorate([Complex({\n    effect: 'SlideDown',\n    duration: 400,\n    easing: 'linear'\n  }, ActionSettings)], NodeAnimationSettings.prototype, \"expand\", void 0);\n\n  return NodeAnimationSettings;\n}(ChildProperty);\n\nexport { NodeAnimationSettings };\n/**\n * The TreeView component is used to represent hierarchical data in a tree like structure with advanced\n * functions to perform edit, drag and drop, selection with check-box, and more.\n * ```html\n *  <div id=\"tree\"></div>\n * ```\n * ```typescript\n *  let treeObj: TreeView = new TreeView();\n *  treeObj.appendTo('#tree');\n * ```\n */\n\nvar TreeView =\n/** @class */\nfunction (_super) {\n  __extends(TreeView, _super);\n\n  function TreeView(options, element) {\n    var _this = _super.call(this, options, element) || this;\n\n    _this.isRefreshed = false;\n    _this.preventExpand = false;\n    _this.checkedElement = [];\n    _this.disableNode = []; // eslint-disable-next-line\n\n    _this.validArr = [];\n    _this.expandChildren = [];\n    _this.isFieldChange = false;\n    _this.changeDataSource = false;\n    _this.isBlazorExpandedNodes = [];\n    _this.mouseDownStatus = false;\n    return _this;\n  }\n\n  TreeView_1 = TreeView;\n  /**\n   * Get component name.\n   *\n   * @returns {string} - returns module name.\n   * @private\n   */\n\n  TreeView.prototype.getModuleName = function () {\n    return 'treeview';\n  };\n  /**\n   * Initialize the event handler\n   *\n   * @returns {void}\n   */\n\n\n  TreeView.prototype.preRender = function () {\n    var _this = this;\n\n    this.isBlazorPlatform = isBlazor() && this.isServerRendered;\n    this.checkActionNodes = [];\n    this.parentNodeCheck = [];\n    this.dragStartAction = false;\n    this.isAnimate = false;\n    this.keyConfigs = {\n      escape: 'escape',\n      end: 'end',\n      enter: 'enter',\n      f2: 'f2',\n      home: 'home',\n      moveDown: 'downarrow',\n      moveLeft: 'leftarrow',\n      moveRight: 'rightarrow',\n      moveUp: 'uparrow',\n      ctrlDown: 'ctrl+downarrow',\n      ctrlUp: 'ctrl+uparrow',\n      ctrlEnter: 'ctrl+enter',\n      ctrlHome: 'ctrl+home',\n      ctrlEnd: 'ctrl+end',\n      ctrlA: 'ctrl+A',\n      shiftDown: 'shift+downarrow',\n      shiftUp: 'shift+uparrow',\n      shiftEnter: 'shift+enter',\n      shiftHome: 'shift+home',\n      shiftEnd: 'shift+end',\n      csDown: 'ctrl+shift+downarrow',\n      csUp: 'ctrl+shift+uparrow',\n      csEnter: 'ctrl+shift+enter',\n      csHome: 'ctrl+shift+home',\n      csEnd: 'ctrl+shift+end',\n      space: 'space'\n    };\n    this.listBaseOption = {\n      expandCollapse: true,\n      showIcon: true,\n      expandIconClass: EXPANDABLE,\n      ariaAttributes: treeAriaAttr,\n      expandIconPosition: 'Left',\n      itemCreated: function itemCreated(e) {\n        _this.beforeNodeCreate(e);\n      },\n      enableHtmlSanitizer: this.enableHtmlSanitizer,\n      itemNavigable: this.fullRowNavigable\n    };\n    this.updateListProp(this.fields);\n    this.aniObj = new Animation({});\n    this.treeList = [];\n    this.isLoaded = false;\n    this.isInitalExpand = false;\n    this.expandChildren = [];\n    this.index = 0;\n    this.setTouchClass();\n\n    if (isNOU(this.selectedNodes)) {\n      this.setProperties({\n        selectedNodes: []\n      }, true);\n    }\n\n    if (isNOU(this.checkedNodes)) {\n      this.setProperties({\n        checkedNodes: []\n      }, true);\n    }\n\n    if (isNOU(this.expandedNodes)) {\n      this.setProperties({\n        expandedNodes: []\n      }, true);\n    } else {\n      this.isInitalExpand = true;\n    }\n  };\n  /**\n   * Get the properties to be maintained in the persisted state.\n   *\n   * @returns {string} - returns the persisted data\n   * @hidden\n   */\n\n\n  TreeView.prototype.getPersistData = function () {\n    var keyEntity = ['selectedNodes', 'checkedNodes', 'expandedNodes'];\n    return this.addOnPersist(keyEntity);\n  };\n  /**\n   * To Initialize the control rendering\n   *\n   * @private\n   * @returns {void}\n   */\n\n\n  TreeView.prototype.render = function () {\n    this.initialRender = true;\n    this.blazorInitialRender = false;\n    this.initialize();\n    this.setDataBinding(false);\n    this.setDisabledMode();\n    this.setExpandOnType();\n\n    if (!this.disabled) {\n      this.setRipple();\n    }\n\n    this.wireEditingEvents(this.allowEditing);\n    this.setDragAndDrop(this.allowDragAndDrop);\n\n    if (!this.disabled) {\n      this.wireEvents();\n    }\n\n    if (!this.isBlazorPlatform) {\n      this.initialRender = false;\n    }\n\n    this.renderComplete();\n  };\n\n  TreeView.prototype.initialize = function () {\n    if (!this.isBlazorPlatform) {\n      this.element.setAttribute('role', 'tree');\n      this.element.setAttribute('tabindex', '0');\n      this.element.setAttribute('aria-activedescendant', this.element.id + '_active');\n      this.setCssClass(null, this.cssClass);\n      this.setEnableRtl();\n      this.setFullRow(this.fullRowSelect);\n    }\n\n    this.nodeTemplateFn = this.templateComplier(this.nodeTemplate);\n  };\n\n  TreeView.prototype.setDisabledMode = function () {\n    if (this.disabled) {\n      this.element.classList.add(DISABLED);\n    } else {\n      this.element.classList.remove(DISABLED);\n    }\n  };\n\n  TreeView.prototype.setEnableRtl = function () {\n    (this.enableRtl ? addClass : removeClass)([this.element], RTL);\n  };\n\n  TreeView.prototype.setRipple = function () {\n    var tempStr = '.' + FULLROW + ',.' + TEXTWRAP;\n    var rippleModel = {\n      selector: tempStr,\n      ignore: '.' + TEXTWRAP + ' > .' + ICON + ',.' + INPUTGROUP + ',.' + INPUT + ', .' + CHECKBOXWRAP\n    };\n    this.rippleFn = rippleEffect(this.element, rippleModel);\n    var iconModel = {\n      selector: '.' + TEXTWRAP + ' > .' + ICON,\n      isCenterRipple: true\n    };\n    this.rippleIconFn = rippleEffect(this.element, iconModel);\n  };\n\n  TreeView.prototype.setFullRow = function (isEnabled) {\n    (isEnabled ? addClass : removeClass)([this.element], FULLROWWRAP);\n  };\n\n  TreeView.prototype.setMultiSelect = function (isEnabled) {\n    var firstUl = select('.' + PARENTITEM, this.element);\n\n    if (isEnabled) {\n      firstUl.setAttribute('aria-multiselectable', 'true');\n    } else {\n      firstUl.removeAttribute('aria-multiselectable');\n    }\n  }; // eslint-disable-next-line\n\n\n  TreeView.prototype.templateComplier = function (template) {\n    if (template) {\n      // eslint-disable-next-line\n      var e = void 0;\n      this.element.classList.add(INTERACTION);\n\n      try {\n        if (document.querySelectorAll(template).length) {\n          return compile(document.querySelector(template).innerHTML.trim());\n        }\n      } catch (e) {\n        return compile(template);\n      }\n    }\n\n    this.element.classList.remove(INTERACTION);\n    return undefined;\n  };\n\n  TreeView.prototype.setDataBinding = function (changeDataSource) {\n    var _this = this;\n\n    this.treeList.push('false');\n\n    if (this.fields.dataSource instanceof DataManager) {\n      /* eslint-disable */\n      this.isOffline = this.isBlazorPlatform ? this.fields.dataSource.offline : this.fields.dataSource.dataSource.offline;\n\n      if (this.fields.dataSource.ready) {\n        this.fields.dataSource.ready.then(function (e) {\n          /* eslint-disable */\n          _this.isOffline = _this.isBlazorPlatform ? _this.fields.dataSource.offline : _this.fields.dataSource.dataSource.offline;\n\n          if (_this.fields.dataSource instanceof DataManager && _this.isOffline) {\n            _this.treeList.pop();\n\n            _this.treeData = e.result;\n            _this.isNumberTypeId = _this.getType();\n\n            _this.setRootData();\n\n            _this.renderItems(true);\n\n            if (_this.treeList.length === 0 && !_this.isLoaded) {\n              _this.finalize();\n            }\n          }\n        }).catch(function (e) {\n          _this.trigger('actionFailure', {\n            error: e\n          });\n        });\n      } else {\n        this.fields.dataSource.executeQuery(this.getQuery(this.fields)).then(function (e) {\n          _this.treeList.pop();\n\n          _this.treeData = e.result;\n          _this.isNumberTypeId = _this.getType();\n\n          _this.setRootData();\n\n          if (changeDataSource) {\n            _this.changeDataSource = true;\n          }\n\n          _this.renderItems(true);\n\n          _this.changeDataSource = false;\n\n          if (_this.treeList.length === 0 && !_this.isLoaded) {\n            _this.finalize();\n          }\n        }).catch(function (e) {\n          _this.trigger('actionFailure', {\n            error: e\n          });\n        });\n      }\n    } else {\n      this.treeList.pop();\n\n      if (isNOU(this.fields.dataSource)) {\n        this.rootData = this.treeData = [];\n      } else {\n        this.treeData = JSON.parse(JSON.stringify(this.fields.dataSource));\n        this.setRootData();\n      }\n\n      this.isNumberTypeId = this.getType();\n      this.renderItems(false);\n    }\n\n    if (this.treeList.length === 0 && !this.isLoaded) {\n      this.finalize();\n    }\n  };\n\n  TreeView.prototype.getQuery = function (mapper, value) {\n    if (value === void 0) {\n      value = null;\n    }\n\n    var columns = [];\n    var query;\n\n    if (!mapper.query) {\n      query = new Query();\n      var prop = this.getActualProperties(mapper);\n\n      for (var _i = 0, _a = Object.keys(prop); _i < _a.length; _i++) {\n        var col = _a[_i];\n\n        if (col !== 'dataSource' && col !== 'tableName' && col !== 'child' && !!mapper[col] && col !== 'url' && columns.indexOf(mapper[col]) === -1) {\n          columns.push(mapper[col]);\n        }\n      }\n\n      query.select(columns);\n\n      if (prop.hasOwnProperty('tableName')) {\n        query.from(mapper.tableName);\n      }\n    } else {\n      query = mapper.query.clone();\n    }\n\n    ListBase.addSorting(this.sortOrder, mapper.text, query);\n\n    if (!isNOU(value) && !isNOU(mapper.parentID)) {\n      query.where(mapper.parentID, 'equal', this.isNumberTypeId ? parseFloat(value) : value);\n    }\n\n    return query;\n  };\n\n  TreeView.prototype.getType = function () {\n    return this.treeData[0] ? typeof getValue(this.fields.id, this.treeData[0]) === 'number' ? true : false : false;\n  };\n\n  TreeView.prototype.setRootData = function () {\n    this.dataType = this.getDataType(this.treeData, this.fields);\n\n    if (this.dataType === 1) {\n      this.groupedData = this.getGroupedData(this.treeData, this.fields.parentID);\n      var rootItems = this.getChildNodes(this.treeData, undefined, true);\n\n      if (isNOU(rootItems)) {\n        this.rootData = [];\n      } else {\n        this.rootData = rootItems;\n      }\n    } else {\n      this.rootData = this.treeData;\n    }\n  };\n\n  TreeView.prototype.renderItems = function (isSorted) {\n    /* eslint-disable */\n    if (!this.isBlazorPlatform || this.isBlazorPlatform && this.fields.dataSource instanceof DataManager && this.fields.dataSource.adaptorName !== 'BlazorAdaptor' || this.changeDataSource) {\n      this.listBaseOption.ariaAttributes.level = 1;\n      var sortedData = this.getSortedData(this.rootData);\n      this.ulElement = ListBase.createList(this.createElement, isSorted ? this.rootData : sortedData, this.listBaseOption);\n      this.element.appendChild(this.ulElement);\n      var rootNodes = this.ulElement.querySelectorAll('.e-list-item');\n\n      if (this.loadOnDemand === false) {\n        var i = 0;\n\n        while (i < rootNodes.length) {\n          this.renderChildNodes(rootNodes[i], true, null, true);\n          i++;\n        }\n      }\n\n      var parentEle = selectAll('.' + PARENTITEM, this.element);\n\n      if (parentEle.length === 1 && rootNodes && rootNodes.length !== 0 || this.loadOnDemand) {\n        this.finalizeNode(this.element);\n      }\n    }\n\n    this.updateTemplateForBlazor();\n    this.parentNodeCheck = [];\n    this.parentCheckData = [];\n    this.updateCheckedStateFromDS();\n\n    if (this.autoCheck && this.showCheckBox && !this.isLoaded) {\n      this.updateParentCheckState();\n    }\n  };\n\n  TreeView.prototype.updateTemplateForBlazor = function () {\n    if (this.nodeTemplate && this.isBlazorPlatform && !this.isStringTemplate) {\n      this.updateBlazorTemplate();\n    }\n  };\n  /**\n   * Update the checkedNodes from datasource at initial rendering\n   */\n\n\n  TreeView.prototype.updateCheckedStateFromDS = function (id) {\n    if (this.treeData && this.showCheckBox) {\n      if (this.dataType === 1) {\n        var mapper = this.fields;\n        var resultData = new DataManager(this.treeData).executeLocal(new Query().where(mapper.isChecked, 'equal', true, false));\n\n        for (var i = 0; i < resultData.length; i++) {\n          var resultId = resultData[i][this.fields.id] ? resultData[i][this.fields.id].toString() : null;\n          var resultPId = resultData[i][this.fields.parentID] ? resultData[i][this.fields.parentID].toString() : null;\n\n          if (this.checkedNodes.indexOf(resultId) === -1 && !this.isLoaded) {\n            this.checkedNodes.push(resultId);\n          }\n\n          if (resultData[i][this.fields.hasChildren]) {\n            var id_1 = resultData[i][this.fields.id];\n            var childData = new DataManager(this.treeData).executeLocal(new Query().where(mapper.parentID, 'equal', id_1, false));\n\n            for (var child = 0; child < childData.length; child++) {\n              var childId = childData[child][this.fields.id] ? childData[child][this.fields.id].toString() : null;\n\n              if (this.checkedNodes.indexOf(childId) === -1 && this.autoCheck) {\n                this.checkedNodes.push(childId);\n              }\n            }\n          }\n        }\n\n        for (var i = 0; i < this.checkedNodes.length; i++) {\n          var mapper_1 = this.fields;\n          var checkState = new DataManager(this.treeData).executeLocal(new Query().where(mapper_1.id, 'equal', this.checkedNodes[i], true));\n\n          if (checkState[0] && this.autoCheck) {\n            this.getCheckedNodeDetails(mapper_1, checkState);\n            this.checkIndeterminateState(checkState[0]);\n          }\n\n          var checkedData = new DataManager(this.treeData).executeLocal(new Query().where(mapper_1.parentID, 'equal', this.checkedNodes[i], true));\n\n          for (var index = 0; index < checkedData.length; index++) {\n            var checkedId = checkedData[index][this.fields.id] ? checkedData[index][this.fields.id].toString() : null;\n\n            if (this.checkedNodes.indexOf(checkedId) === -1 && this.autoCheck) {\n              this.checkedNodes.push(checkedId);\n            }\n          }\n        }\n      } else if (this.dataType === 2 || this.fields.dataSource instanceof DataManager && this.isOffline) {\n        for (var index = 0; index < this.treeData.length; index++) {\n          var fieldId = this.treeData[index][this.fields.id] ? this.treeData[index][this.fields.id].toString() : '';\n\n          if (this.treeData[index][this.fields.isChecked] && !this.isLoaded && this.checkedNodes.indexOf(fieldId) === -1) {\n            this.checkedNodes.push(fieldId);\n          }\n\n          var childItems = getValue(this.fields.child.toString(), this.treeData[index]);\n\n          if (childItems) {\n            this.updateChildCheckState(childItems, this.treeData[index]);\n          }\n        }\n      }\n    }\n  };\n  /**\n   * To check whether the list data has sub child and to change the parent check state accordingly\n   */\n\n\n  TreeView.prototype.getCheckedNodeDetails = function (mapper, checkNodes) {\n    var id = checkNodes[0][this.fields.parentID] ? checkNodes[0][this.fields.parentID].toString() : null;\n    var count = 0;\n    var element = this.element.querySelector('[data-uid=\"' + checkNodes[0][this.fields.id] + '\"]');\n    var parentEle = this.element.querySelector('[data-uid=\"' + checkNodes[0][this.fields.parentID] + '\"]');\n\n    if (!element && !parentEle) {\n      var len = this.parentNodeCheck.length;\n\n      if (this.parentNodeCheck.indexOf(id) === -1) {\n        this.parentNodeCheck.push(id);\n      }\n\n      var childNodes = this.getChildNodes(this.treeData, id);\n\n      for (var i = 0; i < childNodes.length; i++) {\n        var childId = childNodes[i][this.fields.id] ? childNodes[i][this.fields.id].toString() : null;\n\n        if (this.checkedNodes.indexOf(childId) !== -1) {\n          count++;\n        }\n\n        if (count === childNodes.length && this.checkedNodes.indexOf(id) === -1) {\n          this.checkedNodes.push(id);\n        }\n      }\n\n      var preElement = new DataManager(this.treeData).executeLocal(new Query().where(mapper.id, 'equal', id, true));\n      this.getCheckedNodeDetails(mapper, preElement);\n    } else if (parentEle) {\n      var check = select('.' + CHECK, parentEle);\n\n      if (!check) {\n        this.changeState(parentEle, 'indeterminate', null, true, true);\n      }\n    }\n  };\n  /**\n   * Update the checkedNodes and parent state when all the child Nodes are in checkedstate at initial rendering\n   */\n\n\n  TreeView.prototype.updateParentCheckState = function () {\n    var indeterminate = selectAll('.' + INDETERMINATE, this.element);\n    var childCheckedElement;\n\n    for (var i = 0; i < indeterminate.length; i++) {\n      var node = closest(indeterminate[i], '.' + LISTITEM);\n      var nodeId = node.getAttribute('data-uid').toString();\n\n      if (this.dataType === 1) {\n        childCheckedElement = new DataManager(this.treeData).executeLocal(new Query().where(this.fields.parentID, 'equal', nodeId, true));\n      } else {\n        childCheckedElement = this.getChildNodes(this.treeData, nodeId);\n      }\n\n      var count = 0;\n\n      if (childCheckedElement) {\n        for (var j = 0; j < childCheckedElement.length; j++) {\n          var childId = childCheckedElement[j][this.fields.id].toString();\n\n          if (this.checkedNodes.indexOf(childId) !== -1) {\n            count++;\n          }\n        }\n\n        if (count === childCheckedElement.length) {\n          var nodeCheck = node.getAttribute('data-uid');\n\n          if (this.checkedNodes.indexOf(nodeCheck) === -1) {\n            this.checkedNodes.push(nodeCheck);\n          }\n\n          this.changeState(node, 'check', null, true, true);\n        } else if (count === 0 && this.checkedNodes.length === 0) {\n          this.changeState(node, 'uncheck', null, true, true);\n        }\n      }\n    }\n  };\n  /**\n   * Change the parent to indeterminate state whenever the child is in checked state which is not rendered in DOM\n   */\n\n\n  TreeView.prototype.checkIndeterminateState = function (data) {\n    var element;\n\n    if (this.dataType === 1) {\n      element = this.element.querySelector('[data-uid=\"' + data[this.fields.parentID] + '\"]');\n    } else {\n      element = this.element.querySelector('[data-uid=\"' + data[this.fields.id] + '\"]');\n    }\n\n    if (element) {\n      var ariaChecked = element.querySelector('.' + CHECKBOXWRAP).getAttribute('aria-checked');\n\n      if (ariaChecked !== 'true') {\n        this.changeState(element, 'indeterminate', null, true, true);\n      }\n    } else if (this.dataType === 2) {\n      var len = this.parentNodeCheck.length;\n\n      if (this.parentNodeCheck.indexOf(data[this.fields.id].toString()) === -1) {\n        this.parentNodeCheck.push(data[this.fields.id].toString());\n      }\n    }\n  };\n  /**\n   * Update the checkedNodes for child and subchild from datasource (hierarchical datasource) at initial rendering\n   */\n\n\n  TreeView.prototype.updateChildCheckState = function (childItems, treeData) {\n    var count = 0;\n    var checkedParent = treeData[this.fields.id] ? treeData[this.fields.id].toString() : '';\n\n    for (var index = 0; index < childItems.length; index++) {\n      var checkedChild = childItems[index][this.fields.id] ? childItems[index][this.fields.id].toString() : '';\n\n      if (childItems[index][this.fields.isChecked] && !this.isLoaded && this.checkedNodes.indexOf(checkedChild) === -1) {\n        this.checkedNodes.push(checkedChild);\n      }\n\n      if (this.checkedNodes.indexOf(checkedParent) !== -1 && this.checkedNodes.indexOf(checkedChild) === -1 && this.autoCheck) {\n        this.checkedNodes.push(checkedChild);\n      }\n\n      if (this.checkedNodes.indexOf(checkedChild) !== -1 && this.autoCheck) {\n        count++;\n      }\n\n      var subChildItems = getValue(this.fields.child.toString(), childItems[index]);\n\n      if (subChildItems) {\n        this.parentCheckData.push(treeData);\n        this.updateChildCheckState(subChildItems, childItems[index]);\n      }\n\n      if (count === childItems.length && this.autoCheck && this.checkedNodes.indexOf(checkedParent) === -1) {\n        this.checkedNodes.push(checkedParent);\n      }\n    }\n\n    if (count !== 0 && this.autoCheck) {\n      this.checkIndeterminateState(treeData);\n\n      for (var len = 0; len < this.parentCheckData.length; len++) {\n        if (treeData !== this.parentCheckData[len] && this.parentCheckData[len]) {\n          this.checkIndeterminateState(this.parentCheckData[len]);\n        }\n      }\n    }\n\n    this.parentCheckData = [];\n  };\n\n  TreeView.prototype.beforeNodeCreate = function (e) {\n    if (this.showCheckBox) {\n      var checkboxEle = createCheckBox(this.createElement, true, {\n        cssClass: this.touchClass\n      });\n      checkboxEle.setAttribute('role', 'checkbox');\n      var icon = select('div.' + ICON, e.item);\n      var id = e.item.getAttribute('data-uid');\n      e.item.childNodes[0].insertBefore(checkboxEle, e.item.childNodes[0].childNodes[isNOU(icon) ? 0 : 1]);\n      var checkValue = getValue(e.fields.isChecked, e.curData);\n\n      if (this.checkedNodes.indexOf(id) > -1) {\n        select('.' + CHECKBOXFRAME, checkboxEle).classList.add(CHECK);\n        checkboxEle.setAttribute('aria-checked', 'true');\n        this.addCheck(e.item);\n      } else if (!isNOU(checkValue) && checkValue.toString() === 'true') {\n        select('.' + CHECKBOXFRAME, checkboxEle).classList.add(CHECK);\n        checkboxEle.setAttribute('aria-checked', 'true');\n        this.addCheck(e.item);\n      } else {\n        checkboxEle.setAttribute('aria-checked', 'false');\n      }\n\n      var frame = select('.' + CHECKBOXFRAME, checkboxEle);\n      EventHandler.add(frame, 'mousedown', this.frameMouseHandler, this);\n      EventHandler.add(frame, 'mouseup', this.frameMouseHandler, this);\n    }\n\n    if (this.fullRowSelect) {\n      this.createFullRow(e.item);\n    }\n\n    if (this.allowMultiSelection && !e.item.classList.contains(SELECTED)) {\n      e.item.setAttribute('aria-selected', 'false');\n    }\n\n    var fields = e.fields;\n    this.addActionClass(e, fields.selected, SELECTED);\n    this.addActionClass(e, fields.expanded, EXPANDED);\n\n    if (!isNOU(this.nodeTemplateFn)) {\n      var textEle = e.item.querySelector('.' + LISTTEXT);\n      var dataId = e.item.getAttribute('data-uid');\n      textEle.innerHTML = '';\n      this.renderNodeTemplate(e.curData, textEle, dataId);\n    }\n\n    var eventArgs = {\n      node: e.item,\n      nodeData: e.curData,\n      text: e.text\n    };\n\n    if (!this.isRefreshed) {\n      this.trigger('drawNode', eventArgs);\n    }\n  };\n\n  TreeView.prototype.frameMouseHandler = function (e) {\n    var rippleSpan = select('.' + CHECKBOXRIPPLE, e.target.parentElement);\n    rippleMouseHandler(e, rippleSpan);\n  };\n\n  TreeView.prototype.addActionClass = function (e, action, cssClass) {\n    var data = e.curData;\n    var actionValue = getValue(action, data);\n\n    if (!isNOU(actionValue) && actionValue.toString() !== 'false') {\n      e.item.classList.add(cssClass);\n    }\n  };\n\n  TreeView.prototype.getDataType = function (ds, mapper) {\n    if (this.fields.dataSource instanceof DataManager && this.fields.dataSource.adaptorName !== 'BlazorAdaptor') {\n      for (var i = 0; i < ds.length; i++) {\n        if (this.isOffline) {\n          if (typeof mapper.child === 'string' && isNOU(getValue(mapper.child, ds[i])) && !isNOU(getValue(mapper.parentID, ds[i]))) {\n            return 1;\n          }\n        } else if (typeof mapper.child === 'string' && isNOU(getValue(mapper.child, ds[i]))) {\n          return 1;\n        }\n      }\n\n      return 2;\n    }\n\n    for (var i = 0, len = ds.length; i < len; i++) {\n      if (typeof mapper.child === 'string' && !isNOU(getValue(mapper.child, ds[i]))) {\n        return 2;\n      }\n\n      if (!isNOU(getValue(mapper.parentID, ds[i])) || !isNOU(getValue(mapper.hasChildren, ds[i]))) {\n        return 1;\n      }\n    }\n\n    return 1;\n  };\n\n  TreeView.prototype.getGroupedData = function (dataSource, groupBy) {\n    var cusQuery = new Query().group(groupBy);\n    var ds = ListBase.getDataSource(dataSource, cusQuery);\n    var grpItem = [];\n\n    for (var j = 0; j < ds.length; j++) {\n      var itemObj = ds[j].items;\n      grpItem.push(itemObj);\n    }\n\n    return grpItem;\n  };\n\n  TreeView.prototype.getSortedData = function (list) {\n    if (list && this.sortOrder !== 'None') {\n      list = ListBase.getDataSource(list, ListBase.addSorting(this.sortOrder, this.fields.text));\n    }\n\n    return list;\n  };\n\n  TreeView.prototype.finalizeNode = function (element) {\n    var iNodes = selectAll('.' + IMAGE, element);\n\n    for (var k = 0; k < iNodes.length; k++) {\n      iNodes[k].setAttribute('alt', IMAGE);\n    }\n\n    if (this.isLoaded) {\n      var sNodes = selectAll('.' + SELECTED, element);\n\n      for (var i = 0; i < sNodes.length; i++) {\n        this.selectNode(sNodes[i], null);\n        break;\n      }\n\n      removeClass(sNodes, SELECTED);\n    }\n\n    var cNodes = selectAll('.' + LISTITEM + ':not(.' + EXPANDED + ')', element);\n\n    for (var j = 0; j < cNodes.length; j++) {\n      var icon = select('div.' + ICON, cNodes[j]);\n\n      if (icon && icon.classList.contains(EXPANDABLE)) {\n        this.disableExpandAttr(cNodes[j]);\n      }\n    }\n\n    var eNodes = selectAll('.' + EXPANDED, element);\n\n    if (!this.isInitalExpand) {\n      for (var i = 0; i < eNodes.length; i++) {\n        this.renderChildNodes(eNodes[i]);\n      }\n    }\n\n    removeClass(eNodes, EXPANDED);\n    this.updateList();\n\n    if (this.isLoaded) {\n      this.updateCheckedProp();\n    }\n  };\n\n  TreeView.prototype.updateCheckedProp = function () {\n    if (this.showCheckBox) {\n      var nodes = [].concat([], this.checkedNodes);\n      this.setProperties({\n        checkedNodes: nodes\n      }, true);\n    }\n  };\n\n  TreeView.prototype.ensureIndeterminate = function () {\n    if (this.autoCheck) {\n      var liElement = selectAll('li', this.element);\n      var ulElement = void 0;\n\n      for (var i = 0; i < liElement.length; i++) {\n        if (liElement[i].classList.contains(LISTITEM)) {\n          ulElement = select('.' + PARENTITEM, liElement[i]);\n\n          if (ulElement) {\n            this.ensureParentCheckState(liElement[i]);\n          } else {\n            this.ensureChildCheckState(liElement[i]);\n          }\n        }\n      }\n    } else {\n      var indeterminate = selectAll('.' + INDETERMINATE, this.element);\n\n      for (var i = 0; i < indeterminate.length; i++) {\n        indeterminate[i].classList.remove(INDETERMINATE);\n      }\n    }\n  };\n\n  TreeView.prototype.ensureParentCheckState = function (element) {\n    if (!isNOU(element)) {\n      if (element.classList.contains(ROOT)) {\n        return;\n      }\n\n      var ulElement = element;\n\n      if (element.classList.contains(LISTITEM)) {\n        ulElement = select('.' + PARENTITEM, element);\n      }\n\n      var checkedNodes = selectAll('.' + CHECK, ulElement);\n      var indeterminateNodes = selectAll('.' + INDETERMINATE, ulElement);\n      var nodes = selectAll('.' + LISTITEM, ulElement);\n      var checkBoxEle = element.getElementsByClassName(CHECKBOXWRAP)[0];\n\n      if (nodes.length === checkedNodes.length) {\n        this.changeState(checkBoxEle, 'check', null, true, true);\n      } else if (checkedNodes.length > 0 || indeterminateNodes.length > 0) {\n        this.changeState(checkBoxEle, 'indeterminate', null, true, true);\n      } else if (checkedNodes.length === 0) {\n        this.changeState(checkBoxEle, 'uncheck', null, true, true);\n      }\n\n      var parentUL = closest(element, '.' + PARENTITEM);\n\n      if (!isNOU(parentUL)) {\n        var currentParent = closest(parentUL, '.' + LISTITEM);\n        this.ensureParentCheckState(currentParent);\n      }\n    }\n  };\n\n  TreeView.prototype.ensureChildCheckState = function (element, e) {\n    if (!isNOU(element)) {\n      var childElement = select('.' + PARENTITEM, element);\n      var checkBoxes = void 0;\n\n      if (!isNOU(childElement)) {\n        checkBoxes = selectAll('.' + CHECKBOXWRAP, childElement);\n        var isChecked = element.getElementsByClassName(CHECKBOXFRAME)[0].classList.contains(CHECK);\n        var parentCheck = element.getElementsByClassName(CHECKBOXFRAME)[0].classList.contains(INDETERMINATE);\n        var childCheck = childElement.querySelectorAll('li');\n        var expandState = childElement.parentElement.getAttribute('aria-expanded');\n        var checkedState = void 0;\n\n        for (var index = 0; index < checkBoxes.length; index++) {\n          var childId = childCheck[index].getAttribute('data-uid');\n\n          if (!isNOU(this.currentLoadData) && !isNOU(getValue(this.fields.isChecked, this.currentLoadData[index]))) {\n            checkedState = getValue(this.fields.isChecked, this.currentLoadData[index]) ? 'check' : 'uncheck';\n\n            if (this.ele !== -1) {\n              checkedState = isChecked ? 'check' : 'uncheck';\n            }\n\n            if (checkedState === 'uncheck' && !isUndefined(this.parentNodeCheck) && this.autoCheck && this.parentNodeCheck.indexOf(childId) !== -1) {\n              this.parentNodeCheck.splice(this.parentNodeCheck.indexOf(childId), 1);\n              checkedState = 'indeterminate';\n            }\n          } else {\n            var isNodeChecked = checkBoxes[index].getElementsByClassName(CHECKBOXFRAME)[0].classList.contains(CHECK);\n\n            if (isChecked) {\n              checkedState = 'check';\n            } else if (isNodeChecked && !this.isLoaded) {\n              checkedState = 'check';\n            } else if (this.checkedNodes.indexOf(childId) !== -1 && this.isLoaded && (parentCheck || isChecked)) {\n              checkedState = 'check';\n            } else if (childCheck[index].classList.contains(CHILD) && !isUndefined(this.parentNodeCheck) && this.autoCheck && (isChecked || parentCheck) && this.parentNodeCheck.indexOf(childId) !== -1) {\n              checkedState = 'indeterminate';\n              this.parentNodeCheck.splice(this.parentNodeCheck.indexOf(childId), 1);\n            } else if (this.dataType === 1 && !isUndefined(this.parentNodeCheck) && this.autoCheck && (isChecked || parentCheck) && this.parentNodeCheck.indexOf(childId) !== -1) {\n              checkedState = 'indeterminate';\n              this.parentNodeCheck.splice(this.parentNodeCheck.indexOf(childId), 1);\n            } else {\n              checkedState = 'uncheck';\n            }\n          }\n\n          this.changeState(checkBoxes[index], checkedState, e, true, true);\n        }\n      }\n\n      if (this.autoCheck && this.isLoaded) {\n        this.updateParentCheckState();\n      }\n    }\n  };\n\n  TreeView.prototype.doCheckBoxAction = function (nodes, doCheck) {\n    var li = selectAll('.' + LISTITEM, this.element);\n\n    if (!isNOU(nodes)) {\n      for (var len = nodes.length; len >= 0; len--) {\n        var liEle = void 0;\n\n        if (nodes.length === 1) {\n          liEle = this.getElement(nodes[len - 1]);\n        } else {\n          liEle = this.getElement(nodes[len]);\n        }\n\n        if (isNOU(liEle)) {\n          var node = void 0;\n          node = nodes[len - nodes.length] ? nodes[len - nodes.length].toString() : nodes[len] ? nodes[len].toString() : null;\n\n          if (node !== '' && doCheck && node) {\n            this.setValidCheckedNode(node);\n            this.dynamicCheckState(node, doCheck);\n          } else if (this.checkedNodes.indexOf(node) !== -1 && node !== '' && !doCheck) {\n            this.checkedNodes.splice(this.checkedNodes.indexOf(node), 1);\n            var childItems = this.getChildNodes(this.treeData, node);\n\n            if (childItems) {\n              for (var i = 0; i < childItems.length; i++) {\n                var id = childItems[i][this.fields.id] ? childItems[i][this.fields.id].toString() : null;\n\n                if (this.checkedNodes.indexOf(id) !== -1) {\n                  this.checkedNodes.splice(this.checkedNodes.indexOf(id), 1);\n                }\n              }\n\n              if (this.parentNodeCheck.indexOf(node) !== -1) {\n                this.parentNodeCheck.splice(this.parentNodeCheck.indexOf(node), 1);\n              }\n            }\n\n            if (node) {\n              this.dynamicCheckState(node, doCheck);\n            }\n\n            this.updateField(this.treeData, this.fields, node, 'isChecked', null);\n          }\n\n          continue;\n        }\n\n        var checkBox = select('.' + PARENTITEM + ' .' + CHECKBOXWRAP, liEle);\n        this.validateCheckNode(checkBox, !doCheck, liEle, null);\n      }\n    } else {\n      var checkBoxes = selectAll('.' + CHECKBOXWRAP, this.element);\n\n      if (this.loadOnDemand) {\n        for (var index = 0; index < checkBoxes.length; index++) {\n          this.updateFieldChecked(checkBoxes[index], doCheck);\n          this.changeState(checkBoxes[index], doCheck ? 'check' : 'uncheck', null, null, null, doCheck);\n        }\n      } else {\n        for (var index = 0; index < checkBoxes.length; index++) {\n          this.updateFieldChecked(checkBoxes[index], doCheck);\n          this.changeState(checkBoxes[index], doCheck ? 'check' : 'uncheck');\n        }\n      }\n    }\n\n    if (nodes) {\n      for (var j = 0; j < nodes.length; j++) {\n        var node = nodes[j] ? nodes[j].toString() : '';\n\n        if (!doCheck) {\n          this.updateField(this.treeData, this.fields, node, 'isChecked', null);\n        }\n      }\n    }\n\n    if (this.autoCheck) {\n      this.updateParentCheckState();\n    }\n  };\n\n  TreeView.prototype.updateFieldChecked = function (checkbox, doCheck) {\n    var currLi = closest(checkbox, '.' + LISTITEM);\n    var id = currLi.getAttribute('data-uid');\n    var nodeDetails = this.getNodeData(currLi);\n\n    if (nodeDetails.isChecked === 'true' && !doCheck) {\n      this.updateField(this.treeData, this.fields, id, 'isChecked', null);\n    }\n  };\n  /**\n   * Changes the parent and child  check state while changing the checkedNodes via setmodel\n   */\n\n\n  TreeView.prototype.dynamicCheckState = function (node, doCheck) {\n    if (this.dataType === 1) {\n      var count = 0;\n      var resultId = new DataManager(this.treeData).executeLocal(new Query().where(this.fields.id, 'equal', node, true));\n\n      if (resultId[0]) {\n        var id = resultId[0][this.fields.id] ? resultId[0][this.fields.id].toString() : null;\n        var parent_1 = resultId[0][this.fields.parentID] ? resultId[0][this.fields.parentID].toString() : null;\n        var parentElement = this.element.querySelector('[data-uid=\"' + parent_1 + '\"]');\n        var indeterminate = parentElement ? select('.' + INDETERMINATE, parentElement) : null;\n        var check = parentElement ? select('.' + CHECK, parentElement) : null;\n        var element = this.element.querySelector('[data-uid=\"' + id + '\"]');\n        var childNodes = this.getChildNodes(this.treeData, parent_1);\n\n        if (childNodes) {\n          for (var i = 0; i < childNodes.length; i++) {\n            var childId = childNodes[i][this.fields.id] ? childNodes[i][this.fields.id].toString() : null;\n\n            if (this.checkedNodes.indexOf(childId) !== -1) {\n              count++;\n            }\n          }\n        }\n\n        if (this.checkedNodes.indexOf(node) !== -1 && parentElement && id === node && this.autoCheck) {\n          this.changeState(parentElement, 'indeterminate', null);\n        } else if (this.checkedNodes.indexOf(node) === -1 && element && id === node && !doCheck) {\n          this.changeState(element, 'uncheck', null);\n        } else if (this.checkedNodes.indexOf(node) !== -1 && element && id === node && doCheck) {\n          this.changeState(element, 'check', null);\n        } else if (this.checkedNodes.indexOf(node) === -1 && !element && parentElement && id === node && this.autoCheck && count !== 0) {\n          this.changeState(parentElement, 'indeterminate', null);\n        } else if (this.checkedNodes.indexOf(node) === -1 && !element && parentElement && id === node && this.autoCheck && count === 0) {\n          this.changeState(parentElement, 'uncheck', null);\n        } else if (!element && !parentElement && id === node && this.autoCheck) {\n          this.updateIndeterminate(node, doCheck);\n        }\n      }\n    } else if (this.dataType === 2 || this.fields.dataSource instanceof DataManager && this.isOffline) {\n      var id = void 0;\n      var parentElement = void 0;\n      var check = void 0;\n\n      for (var i = 0; i < this.treeData.length; i++) {\n        id = this.treeData[i][this.fields.id] ? this.treeData[i][this.fields.id].toString() : '';\n        parentElement = this.element.querySelector('[data-uid=\"' + id + '\"]');\n        check = parentElement ? select('.' + CHECK, parentElement) : null;\n\n        if (this.checkedNodes.indexOf(id) === -1 && parentElement && check && !doCheck) {\n          this.changeState(parentElement, 'uncheck', null);\n        }\n\n        var subChild = getValue(this.fields.child.toString(), this.treeData[i]);\n\n        if (subChild) {\n          this.updateChildIndeterminate(subChild, id, node, doCheck, id);\n        }\n      }\n    }\n  };\n  /**\n   * updates the parent and child  check state while changing the checkedNodes via setmodel for listData\n   */\n\n\n  TreeView.prototype.updateIndeterminate = function (node, doCheck) {\n    var indeterminateData = this.getTreeData(node);\n    var count = 0;\n    var parent;\n\n    if (this.dataType === 1) {\n      parent = indeterminateData[0][this.fields.parentID] ? indeterminateData[0][this.fields.parentID].toString() : null;\n    }\n\n    var childNodes = this.getChildNodes(this.treeData, parent);\n\n    if (childNodes) {\n      for (var i = 0; i < childNodes.length; i++) {\n        var childId = childNodes[i][this.fields.id] ? childNodes[i][this.fields.id].toString() : null;\n\n        if (this.checkedNodes.indexOf(childId) !== -1) {\n          count++;\n        }\n      }\n    }\n\n    var parentElement = this.element.querySelector('[data-uid=\"' + parent + '\"]');\n\n    if (parentElement && doCheck) {\n      this.changeState(parentElement, 'indeterminate', null);\n    } else if (!doCheck && parentElement && this.parentNodeCheck.indexOf(parent) === -1 && count !== 0) {\n      this.changeState(parentElement, 'indeterminate', null);\n    } else if (!doCheck && parentElement && this.parentNodeCheck.indexOf(parent) === -1 && count === 0) {\n      this.changeState(parentElement, 'uncheck', null);\n    } else if (!parentElement) {\n      if (!doCheck && this.checkedNodes.indexOf(parent) === -1 && this.parentNodeCheck.indexOf(parent) !== -1) {\n        this.parentNodeCheck.splice(this.parentNodeCheck.indexOf(parent), 1);\n      } else if (doCheck && this.checkedNodes.indexOf(parent) === -1 && this.parentNodeCheck.indexOf(parent) === -1) {\n        this.parentNodeCheck.push(parent);\n      } else if (!doCheck && this.checkedNodes.indexOf(parent) !== -1 && this.parentNodeCheck.indexOf(parent) === -1 && count !== 0) {\n        this.parentNodeCheck.push(parent);\n      }\n\n      this.updateIndeterminate(parent, doCheck);\n\n      if (this.checkedNodes.indexOf(parent) !== -1 && !doCheck) {\n        this.checkedNodes.splice(this.checkedNodes.indexOf(parent), 1);\n      }\n    }\n  };\n  /**\n   * updates the parent and child  check state while changing the checkedNodes via setmodel for hierarchical data\n   */\n\n\n  TreeView.prototype.updateChildIndeterminate = function (subChild, parent, node, doCheck, child) {\n    var count = 0;\n\n    for (var j = 0; j < subChild.length; j++) {\n      var subId = subChild[j][this.fields.id] ? subChild[j][this.fields.id].toString() : '';\n\n      if (this.checkedNodes.indexOf(subId) !== -1) {\n        count++;\n      }\n\n      var parentElement = this.element.querySelector('[data-uid=\"' + parent + '\"]');\n      var indeterminate = parentElement ? select('.' + INDETERMINATE, parentElement) : null;\n      var check = parentElement ? select('.' + CHECK, parentElement) : null;\n      var element = this.element.querySelector('[data-uid=\"' + subId + '\"]');\n      var childElementCheck = element ? select('.' + CHECK, element) : null;\n\n      if (this.checkedNodes.indexOf(node) !== -1 && parentElement && subId === node && this.autoCheck) {\n        this.changeState(parentElement, 'indeterminate', null);\n      } else if (this.checkedNodes.indexOf(node) === -1 && parentElement && !element && subId === node && !doCheck) {\n        if (this.autoCheck) {\n          this.changeState(parentElement, 'uncheck', null);\n        } else {\n          if (count !== 0) {\n            this.changeState(parentElement, 'indeterminate', null);\n          } else {\n            this.changeState(parentElement, 'uncheck', null);\n          }\n        }\n      } else if (this.checkedNodes.indexOf(node) === -1 && element && subId === node && !doCheck) {\n        this.changeState(element, 'uncheck', null);\n      } else if (this.checkedNodes.indexOf(node) === -1 && indeterminate && subId === node && this.autoCheck && count === 0 && !doCheck) {\n        indeterminate.classList.remove(INDETERMINATE);\n      } else if (this.checkedNodes.indexOf(node) === -1 && !element && check && subId === node && count === 0) {\n        this.changeState(parentElement, 'uncheck', null);\n      } else if (this.checkedNodes.indexOf(subId) === -1 && element && childElementCheck && count === 0) {\n        this.changeState(element, 'uncheck', null);\n      } else if (!element && !parentElement && subId === node || this.parentNodeCheck.indexOf(parent) !== -1 && this.autoCheck) {\n        var childElement = this.element.querySelector('[data-uid=\"' + child + '\"]');\n\n        if (doCheck && count !== 0) {\n          this.changeState(childElement, 'indeterminate', null);\n        } else if (doCheck && count === subChild.length && this.checkedNodes.indexOf(parent) === -1) {\n          this.checkedNodes.push(parent);\n        } else if (!doCheck && count === 0 && this.parentNodeCheck.indexOf(parent) !== -1) {\n          this.parentNodeCheck.splice(this.parentNodeCheck.indexOf(parent));\n        }\n\n        if (this.parentNodeCheck.indexOf(parent) === -1) {\n          this.parentNodeCheck.push(parent);\n        }\n      }\n\n      var innerChild = getValue(this.fields.child.toString(), subChild[j]);\n\n      if (innerChild) {\n        this.updateChildIndeterminate(innerChild, subId, node, doCheck, child);\n      }\n    }\n  };\n\n  TreeView.prototype.changeState = function (wrapper, state, e, isPrevent, isAdd, doCheck) {\n    var _this = this;\n\n    var eventArgs;\n    var currLi = closest(wrapper, '.' + LISTITEM);\n\n    if (!isPrevent) {\n      this.checkActionNodes = [];\n      eventArgs = this.getCheckEvent(currLi, state, e);\n      this.trigger('nodeChecking', eventArgs, function (observedArgs) {\n        if (!observedArgs.cancel) {\n          _this.nodeCheckAction(wrapper, state, currLi, observedArgs, e, isPrevent, isAdd, doCheck);\n        }\n      });\n    } else {\n      this.nodeCheckAction(wrapper, state, currLi, eventArgs, e, isPrevent, isAdd, doCheck);\n    }\n  };\n\n  TreeView.prototype.nodeCheckAction = function (wrapper, state, currLi, eventArgs, e, isPrevent, isAdd, doCheck) {\n    var ariaState;\n    var frameSpan = wrapper.getElementsByClassName(CHECKBOXFRAME)[0];\n\n    if (state === 'check' && !frameSpan.classList.contains(CHECK)) {\n      frameSpan.classList.remove(INDETERMINATE);\n      frameSpan.classList.add(CHECK);\n      this.addCheck(currLi);\n      ariaState = 'true';\n    } else if (state === 'uncheck' && (frameSpan.classList.contains(CHECK) || frameSpan.classList.contains(INDETERMINATE))) {\n      removeClass([frameSpan], [CHECK, INDETERMINATE]);\n      this.removeCheck(currLi);\n      ariaState = 'false';\n    } else if (state === 'indeterminate' && this.autoCheck) {\n      frameSpan.classList.remove(CHECK);\n      frameSpan.classList.add(INDETERMINATE);\n      this.removeCheck(currLi);\n      ariaState = 'mixed';\n    }\n\n    ariaState = state === 'check' ? 'true' : state === 'uncheck' ? 'false' : ariaState;\n\n    if (!isNOU(ariaState)) {\n      wrapper.setAttribute('aria-checked', ariaState);\n    }\n\n    if (isAdd) {\n      var data = [].concat([], this.checkActionNodes);\n      eventArgs = this.getCheckEvent(currLi, state, e);\n\n      if (isUndefined(isPrevent)) {\n        eventArgs.data = data;\n      }\n    }\n\n    if (doCheck !== undefined) {\n      this.ensureStateChange(currLi, doCheck);\n    }\n\n    if (!isPrevent) {\n      if (!isNOU(ariaState)) {\n        wrapper.setAttribute('aria-checked', ariaState);\n        this.allowServerDataBinding = true;\n        this.updateServerProperties(\"check\");\n        this.allowServerDataBinding = false;\n        eventArgs.data[0].checked = ariaState;\n        this.trigger('nodeChecked', eventArgs);\n        this.checkActionNodes = [];\n      }\n    }\n  };\n\n  TreeView.prototype.addCheck = function (liEle) {\n    var id = liEle.getAttribute('data-uid');\n\n    if (!isNOU(id) && this.checkedNodes.indexOf(id) === -1) {\n      this.checkedNodes.push(id);\n    }\n  };\n\n  TreeView.prototype.removeCheck = function (liEle) {\n    var index = this.checkedNodes.indexOf(liEle.getAttribute('data-uid'));\n\n    if (index > -1) {\n      this.checkedNodes.splice(index, 1);\n    }\n  };\n\n  TreeView.prototype.getCheckEvent = function (currLi, action, e) {\n    this.checkActionNodes.push(this.getNodeData(currLi));\n    var nodeData = this.checkActionNodes;\n    return {\n      action: action,\n      cancel: false,\n      isInteracted: isNOU(e) ? false : true,\n      node: currLi,\n      data: nodeData\n    };\n  };\n\n  TreeView.prototype.finalize = function () {\n    var firstUl = select('.' + PARENTITEM, this.element);\n\n    if (!isNullOrUndefined(firstUl)) {\n      firstUl.setAttribute('role', treeAriaAttr.treeRole);\n      this.setMultiSelect(this.allowMultiSelection);\n      var firstNode = select('.' + LISTITEM, this.element);\n\n      if (firstNode) {\n        addClass([firstNode], FOCUS);\n        this.updateIdAttr(null, firstNode);\n      }\n\n      this.renderReactTemplates();\n      this.hasPid = this.rootData[0] ? this.rootData[0].hasOwnProperty(this.fields.parentID) : false;\n      this.doExpandAction();\n    }\n  };\n\n  TreeView.prototype.doExpandAction = function () {\n    var eUids = this.expandedNodes;\n\n    if (this.isInitalExpand && eUids.length > 0) {\n      this.setProperties({\n        expandedNodes: []\n      }, true);\n\n      if (this.isBlazorPlatform && !this.initialRender) {\n        return;\n      }\n      /* eslint-disable */\n\n\n      if (this.fields.dataSource instanceof DataManager && this.fields.dataSource.adaptorName !== 'BlazorAdaptor') {\n        this.expandGivenNodes(eUids);\n      } else {\n        for (var i = 0; i < eUids.length; i++) {\n          var eNode = select('[data-uid=\"' + eUids[i] + '\"]', this.element);\n\n          if (!isNOU(eNode)) {\n            var icon = select('.' + EXPANDABLE, select('.' + TEXTWRAP, eNode));\n\n            if (!isNOU(icon)) {\n              this.expandAction(eNode, icon, null);\n            }\n          } else {\n            if (eUids[i] && this.expandChildren.indexOf(eUids[i]) === -1) {\n              this.expandChildren.push(eUids[i].toString());\n            }\n\n            continue;\n          }\n        }\n\n        this.afterFinalized();\n      }\n    } else {\n      this.afterFinalized();\n    }\n  };\n\n  TreeView.prototype.expandGivenNodes = function (arr) {\n    var proxy = this;\n    this.expandCallback(arr[this.index], function () {\n      proxy.index++;\n\n      if (proxy.index < arr.length) {\n        proxy.expandGivenNodes(arr);\n      } else {\n        proxy.afterFinalized();\n      }\n    });\n  };\n\n  TreeView.prototype.expandCallback = function (eUid, callback) {\n    var eNode = select('[data-uid=\"' + eUid + '\"]', this.element);\n\n    if (!isNOU(eNode)) {\n      var icon = select('.' + EXPANDABLE, select('.' + TEXTWRAP, eNode));\n\n      if (!isNOU(icon)) {\n        this.expandAction(eNode, icon, null, false, callback);\n      } else {\n        callback();\n      }\n    } else {\n      callback();\n    }\n  };\n\n  TreeView.prototype.afterFinalized = function () {\n    if (!this.isBlazorPlatform || this.isBlazorPlatform && !this.initialRender) {\n      this.doSelectionAction();\n    }\n\n    this.updateCheckedProp();\n\n    if (this.isBlazorPlatform) {\n      if (this.initialRender) {\n        this.setCheckedNodes(this.checkedNodes);\n      }\n\n      this.updateInstance();\n      this.initialRender = false;\n    }\n\n    this.isAnimate = true;\n    this.isInitalExpand = false;\n\n    if (!this.isLoaded || this.isFieldChange) {\n      var eventArgs = {\n        data: this.treeData\n      };\n      this.trigger('dataBound', eventArgs);\n    }\n\n    this.isLoaded = true;\n  };\n\n  TreeView.prototype.doSelectionAction = function () {\n    var sNodes = selectAll('.' + SELECTED, this.element);\n    var sUids = this.selectedNodes;\n\n    if (sUids.length > 0) {\n      this.setProperties({\n        selectedNodes: []\n      }, true);\n\n      for (var i = 0; i < sUids.length; i++) {\n        var sNode = select('[data-uid=\"' + sUids[i] + '\"]', this.element);\n\n        if (sNode && !sNode.classList.contains('e-active')) {\n          this.selectNode(sNode, null, true);\n        } else {\n          this.selectedNodes.push(sUids[i]);\n        }\n\n        if (!this.allowMultiSelection) {\n          break;\n        }\n      }\n    } else {\n      this.selectGivenNodes(sNodes);\n    }\n\n    removeClass(sNodes, SELECTED);\n  };\n\n  TreeView.prototype.selectGivenNodes = function (sNodes) {\n    for (var i = 0; i < sNodes.length; i++) {\n      if (!sNodes[i].classList.contains('e-disable')) {\n        this.selectNode(sNodes[i], null, true);\n      }\n\n      if (!this.allowMultiSelection) {\n        break;\n      }\n    }\n  };\n\n  TreeView.prototype.clickHandler = function (event) {\n    var target = event.originalEvent.target;\n    EventHandler.remove(this.element, 'contextmenu', this.preventContextMenu);\n\n    if (!target || this.dragStartAction) {\n      return;\n    } else {\n      var classList = target.classList;\n      var li = closest(target, '.' + LISTITEM);\n\n      if (!li) {\n        return;\n      } else if (event.originalEvent.which !== 3) {\n        var rippleElement = select('.' + RIPPLEELMENT, li);\n        var rippleIcons = select('.' + ICON, li);\n        this.removeHover();\n        this.setFocusElement(li);\n\n        if (this.showCheckBox && !li.classList.contains('e-disable')) {\n          var checkWrapper = closest(target, '.' + CHECKBOXWRAP);\n\n          if (!isNOU(checkWrapper)) {\n            var checkElement = select('.' + CHECKBOXFRAME, checkWrapper);\n            this.validateCheckNode(checkWrapper, checkElement.classList.contains(CHECK), li, event.originalEvent);\n            this.triggerClickEvent(event.originalEvent, li);\n            return;\n          }\n        }\n\n        if (classList.contains(EXPANDABLE)) {\n          this.expandAction(li, target, event);\n        } else if (classList.contains(COLLAPSIBLE)) {\n          this.collapseNode(li, target, event);\n        } else if (rippleElement && rippleIcons) {\n          if (rippleIcons.classList.contains(RIPPLE) && rippleIcons.classList.contains(EXPANDABLE)) {\n            this.expandAction(li, rippleIcons, event);\n          } else if (rippleIcons.classList.contains(RIPPLE) && rippleIcons.classList.contains(COLLAPSIBLE)) {\n            this.collapseNode(li, rippleIcons, event);\n          } else if (!classList.contains(PARENTITEM) && !classList.contains(LISTITEM)) {\n            this.toggleSelect(li, event.originalEvent, false);\n          }\n        } else {\n          if (!classList.contains(PARENTITEM) && !classList.contains(LISTITEM)) {\n            this.toggleSelect(li, event.originalEvent, false);\n          }\n        }\n      }\n\n      this.triggerClickEvent(event.originalEvent, li);\n    }\n  };\n\n  TreeView.prototype.nodeCheckedEvent = function (wrapper, isCheck, e) {\n    var currLi = closest(wrapper, '.' + LISTITEM);\n    var eventArgs = this.getCheckEvent(wrapper, isCheck ? 'uncheck' : 'check', e);\n    eventArgs.data = eventArgs.data.splice(0, eventArgs.data.length - 1);\n    this.trigger('nodeChecked', eventArgs);\n  };\n\n  TreeView.prototype.triggerClickEvent = function (e, li) {\n    var eventArgs = {\n      event: e,\n      node: li\n    };\n    this.trigger('nodeClicked', eventArgs);\n  };\n\n  TreeView.prototype.expandNode = function (currLi, icon, loaded) {\n    var _this = this;\n\n    this.renderReactTemplates();\n\n    if (icon.classList.contains(LOAD)) {\n      this.hideSpinner(icon);\n    }\n\n    if (!this.initialRender) {\n      icon.classList.add('interaction');\n    }\n\n    if (loaded !== true || loaded === true && currLi.classList.contains('e-expanded')) {\n      if (this.preventExpand !== true) {\n        removeClass([icon], EXPANDABLE);\n        addClass([icon], COLLAPSIBLE);\n        var start_1 = 0;\n        var end_1 = 0;\n        var proxy_1 = this;\n        var ul_1 = select('.' + PARENTITEM, currLi);\n        var liEle_1 = currLi;\n        this.setHeight(liEle_1, ul_1);\n        var activeElement_1 = select('.' + LISTITEM + '.' + ACTIVE, currLi);\n\n        if (this.isAnimate && !this.isRefreshed) {\n          this.aniObj.animate(ul_1, {\n            name: this.animation.expand.effect,\n            duration: this.animation.expand.duration,\n            timingFunction: this.animation.expand.easing,\n            begin: function begin(args) {\n              liEle_1.style.overflow = 'hidden';\n\n              if (!isNullOrUndefined(activeElement_1) && activeElement_1 instanceof HTMLElement) {\n                activeElement_1.classList.add(ITEM_ANIMATION_ACTIVE);\n              }\n\n              start_1 = liEle_1.offsetHeight;\n              end_1 = select('.' + TEXTWRAP, currLi).offsetHeight;\n            },\n            progress: function progress(args) {\n              args.element.style.display = 'block';\n              proxy_1.animateHeight(args, start_1, end_1);\n            },\n            end: function end(args) {\n              args.element.style.display = 'block';\n\n              if (!isNullOrUndefined(activeElement_1) && activeElement_1 instanceof HTMLElement) {\n                activeElement_1.classList.remove(ITEM_ANIMATION_ACTIVE);\n              }\n\n              _this.expandedNode(liEle_1, ul_1, icon);\n            }\n          });\n        } else {\n          this.expandedNode(liEle_1, ul_1, icon);\n        }\n      }\n    } else {\n      var ul = select('.' + PARENTITEM, currLi);\n      ul.style.display = 'none';\n\n      if (this.fields.dataSource instanceof DataManager === true) {\n        this.preventExpand = false;\n      }\n    }\n\n    if (this.initialRender) {\n      icon.classList.add('interaction');\n    }\n  };\n\n  TreeView.prototype.expandedNode = function (currLi, ul, icon) {\n    ul.style.display = 'block';\n    currLi.style.display = 'block';\n    currLi.style.overflow = '';\n    currLi.style.height = '';\n    removeClass([icon], PROCESS);\n    this.addExpand(currLi);\n    this.allowServerDataBinding = true;\n    this.updateServerProperties(\"expand\");\n    this.allowServerDataBinding = false;\n\n    if (this.isLoaded && this.expandArgs && !this.isRefreshed) {\n      this.expandArgs = this.getExpandEvent(currLi, null);\n      this.trigger('nodeExpanded', this.expandArgs);\n    }\n  };\n\n  TreeView.prototype.addExpand = function (liEle) {\n    liEle.setAttribute('aria-expanded', 'true');\n    removeClass([liEle], NODECOLLAPSED);\n    var id = liEle.getAttribute('data-uid');\n\n    if (!isNOU(id) && this.expandedNodes.indexOf(id) === -1) {\n      this.expandedNodes.push(id);\n    }\n  };\n\n  TreeView.prototype.collapseNode = function (currLi, icon, e) {\n    var _this = this;\n\n    if (icon.classList.contains(PROCESS)) {\n      return;\n    } else {\n      addClass([icon], PROCESS);\n    }\n\n    var colArgs;\n\n    if (this.isLoaded) {\n      colArgs = this.getExpandEvent(currLi, e);\n      this.trigger('nodeCollapsing', colArgs, function (observedArgs) {\n        if (observedArgs.cancel) {\n          removeClass([icon], PROCESS);\n        } else {\n          _this.nodeCollapseAction(currLi, icon, observedArgs);\n        }\n      });\n    } else {\n      this.nodeCollapseAction(currLi, icon, colArgs);\n    }\n  };\n\n  TreeView.prototype.nodeCollapseAction = function (currLi, icon, colArgs) {\n    var _this = this;\n\n    removeClass([icon], COLLAPSIBLE);\n    addClass([icon], EXPANDABLE);\n    var start = 0;\n    var end = 0;\n    var proxy = this;\n    var ul = select('.' + PARENTITEM, currLi);\n    var liEle = currLi;\n    var activeElement = select('.' + LISTITEM + '.' + ACTIVE, currLi);\n\n    if (this.isAnimate) {\n      this.aniObj.animate(ul, {\n        name: this.animation.collapse.effect,\n        duration: this.animation.collapse.duration,\n        timingFunction: this.animation.collapse.easing,\n        begin: function begin(args) {\n          liEle.style.overflow = 'hidden';\n\n          if (!isNullOrUndefined(activeElement) && activeElement instanceof HTMLElement) {\n            activeElement.classList.add(ITEM_ANIMATION_ACTIVE);\n          }\n\n          start = select('.' + TEXTWRAP, currLi).offsetHeight;\n          end = liEle.offsetHeight;\n        },\n        progress: function progress(args) {\n          proxy.animateHeight(args, start, end);\n        },\n        end: function end(args) {\n          args.element.style.display = 'none';\n\n          if (!isNullOrUndefined(activeElement) && activeElement instanceof HTMLElement) {\n            activeElement.classList.remove(ITEM_ANIMATION_ACTIVE);\n          }\n\n          _this.collapsedNode(liEle, ul, icon, colArgs);\n        }\n      });\n    } else {\n      this.collapsedNode(liEle, ul, icon, colArgs);\n    }\n  };\n\n  TreeView.prototype.collapsedNode = function (liEle, ul, icon, colArgs) {\n    ul.style.display = 'none';\n    liEle.style.overflow = '';\n    liEle.style.height = '';\n    removeClass([icon], PROCESS);\n    this.allowServerDataBinding = true;\n    this.updateServerProperties(\"expand\");\n    this.allowServerDataBinding = false;\n    this.removeExpand(liEle);\n\n    if (this.isLoaded) {\n      colArgs = this.getExpandEvent(liEle, null);\n      this.trigger('nodeCollapsed', colArgs);\n    }\n  };\n\n  TreeView.prototype.removeExpand = function (liEle, toRemove) {\n    if (toRemove) {\n      liEle.removeAttribute('aria-expanded');\n    } else {\n      this.disableExpandAttr(liEle);\n    }\n\n    var index = this.expandedNodes.indexOf(liEle.getAttribute('data-uid'));\n\n    if (index > -1) {\n      this.expandedNodes.splice(index, 1);\n    }\n  };\n\n  TreeView.prototype.disableExpandAttr = function (liEle) {\n    liEle.setAttribute('aria-expanded', 'false');\n    addClass([liEle], NODECOLLAPSED);\n  };\n\n  TreeView.prototype.setHeight = function (currLi, ul) {\n    ul.style.display = 'block';\n    ul.style.visibility = 'hidden';\n    currLi.style.height = currLi.offsetHeight + 'px';\n    ul.style.display = 'none';\n    ul.style.visibility = '';\n  };\n\n  TreeView.prototype.animateHeight = function (args, start, end) {\n    var remaining = (args.duration - args.timeStamp) / args.duration;\n    var currentHeight = (end - start) * remaining + start;\n    args.element.parentElement.style.height = currentHeight + 'px';\n  };\n\n  TreeView.prototype.renderChildNodes = function (parentLi, expandChild, callback, loaded) {\n    var _this = this;\n\n    var eicon = select('div.' + ICON, parentLi);\n\n    if (isNOU(eicon)) {\n      return;\n    }\n\n    this.showSpinner(eicon);\n    var childItems;\n    /* eslint-disable */\n\n    if (this.fields.dataSource instanceof DataManager && this.fields.dataSource.adaptorName !== 'BlazorAdaptor') {\n      var level = this.parents(parentLi, '.' + PARENTITEM).length;\n      var mapper_2 = this.getChildFields(this.fields, level, 1);\n\n      if (isNOU(mapper_2) || isNOU(mapper_2.dataSource)) {\n        detach(eicon);\n        this.removeExpand(parentLi, true);\n        return;\n      }\n\n      this.treeList.push('false');\n\n      if (this.fields.dataSource instanceof DataManager && this.isOffline) {\n        this.treeList.pop();\n        childItems = this.getChildNodes(this.treeData, parentLi.getAttribute('data-uid'));\n        this.loadChild(childItems, mapper_2, eicon, parentLi, expandChild, callback, loaded);\n        this.updateTemplateForBlazor();\n      } else {\n        mapper_2.dataSource.executeQuery(this.getQuery(mapper_2, parentLi.getAttribute('data-uid'))).then(function (e) {\n          _this.treeList.pop();\n\n          childItems = e.result;\n\n          if (_this.dataType === 1) {\n            _this.dataType = 2;\n          }\n\n          _this.loadChild(childItems, mapper_2, eicon, parentLi, expandChild, callback, loaded);\n\n          _this.updateTemplateForBlazor();\n        }).catch(function (e) {\n          _this.trigger('actionFailure', {\n            error: e\n          });\n        });\n      }\n    } else {\n      childItems = this.getChildNodes(this.treeData, parentLi.getAttribute('data-uid'));\n      this.currentLoadData = this.getSortedData(childItems);\n\n      if (isNOU(childItems) || childItems.length === 0) {\n        detach(eicon);\n        this.removeExpand(parentLi, true);\n        return;\n      } else {\n        if (!this.isBlazorPlatform || !this.initialRender) {\n          this.listBaseOption.ariaAttributes.level = parseFloat(parentLi.getAttribute('aria-level')) + 1;\n          parentLi.appendChild(ListBase.createList(this.createElement, this.currentLoadData, this.listBaseOption));\n        }\n\n        this.expandNode(parentLi, eicon, loaded);\n        this.setSelectionForChildNodes(childItems);\n        this.ensureCheckNode(parentLi);\n        this.finalizeNode(parentLi);\n\n        if (this.loadOnDemand && this.nodeTemplate && this.isBlazorPlatform && !this.isStringTemplate) {\n          this.updateBlazorTemplate();\n        }\n\n        this.disableTreeNodes(childItems);\n        this.renderSubChild(parentLi, expandChild, loaded);\n      }\n    }\n  };\n\n  TreeView.prototype.loadChild = function (childItems, mapper, eicon, parentLi, expandChild, callback, loaded) {\n    this.currentLoadData = childItems;\n\n    if (isNOU(childItems) || childItems.length === 0) {\n      detach(eicon);\n      this.removeExpand(parentLi, true);\n    } else {\n      this.updateListProp(mapper);\n\n      if (this.fields.dataSource instanceof DataManager && !this.isOffline) {\n        var id = parentLi.getAttribute('data-uid');\n        var nodeData = this.getNodeObject(id);\n        setValue('child', childItems, nodeData);\n      }\n\n      this.listBaseOption.ariaAttributes.level = parseFloat(parentLi.getAttribute('aria-level')) + 1;\n      parentLi.appendChild(ListBase.createList(this.createElement, childItems, this.listBaseOption));\n      this.expandNode(parentLi, eicon, loaded);\n      this.setSelectionForChildNodes(childItems);\n      this.ensureCheckNode(parentLi);\n      this.finalizeNode(parentLi);\n      this.disableTreeNodes(childItems);\n      this.renderSubChild(parentLi, expandChild, loaded);\n    }\n\n    if (callback) {\n      callback();\n    }\n\n    if (this.treeList.length === 0 && !this.isLoaded) {\n      this.finalize();\n    }\n  };\n\n  TreeView.prototype.disableTreeNodes = function (childItems) {\n    var i = 0;\n\n    while (i < childItems.length) {\n      var id = childItems[i][this.fields.id] ? childItems[i][this.fields.id].toString() : null;\n\n      if (this.disableNode !== undefined && this.disableNode.indexOf(id) !== -1) {\n        this.doDisableAction([id]);\n      }\n\n      i++;\n    }\n  };\n  /**\n   * Sets the child Item in selectedState while rendering the child node\n   */\n\n\n  TreeView.prototype.setSelectionForChildNodes = function (nodes) {\n    var i;\n\n    for (i = 0; i < nodes.length; i++) {\n      var id = nodes[i][this.fields.id] ? nodes[i][this.fields.id].toString() : null;\n\n      if (this.selectedNodes !== undefined && this.selectedNodes.indexOf(id) !== -1) {\n        this.doSelectionAction();\n      }\n    }\n  };\n\n  TreeView.prototype.ensureCheckNode = function (element) {\n    if (this.showCheckBox) {\n      this.ele = this.checkedElement ? this.checkedElement.indexOf(element.getAttribute('data-uid')) : null;\n\n      if (this.autoCheck) {\n        this.ensureChildCheckState(element);\n        this.ensureParentCheckState(element);\n      }\n    }\n\n    this.currentLoadData = null;\n  };\n\n  TreeView.prototype.getFields = function (mapper, nodeLevel, dataLevel) {\n    if (nodeLevel === dataLevel) {\n      return mapper;\n    } else {\n      return this.getFields(this.getChildMapper(mapper), nodeLevel, dataLevel + 1);\n    }\n  };\n\n  TreeView.prototype.getChildFields = function (mapper, nodeLevel, dataLevel) {\n    var childData;\n\n    if (nodeLevel === dataLevel) {\n      return this.getChildMapper(mapper);\n    } else {\n      return this.getChildFields(this.getChildMapper(mapper), nodeLevel, dataLevel + 1);\n    }\n  };\n\n  TreeView.prototype.getChildMapper = function (mapper) {\n    return typeof mapper.child === 'string' || isNOU(mapper.child) ? mapper : mapper.child;\n  };\n\n  TreeView.prototype.getChildNodes = function (obj, parentId, isRoot) {\n    if (isRoot === void 0) {\n      isRoot = false;\n    }\n\n    var childNodes;\n\n    if (isNOU(obj)) {\n      return childNodes;\n    } else if (this.dataType === 1) {\n      return this.getChildGroup(this.groupedData, parentId, isRoot);\n    } else {\n      if (typeof this.fields.child === 'string') {\n        for (var i = 0, objlen = obj.length; i < objlen; i++) {\n          var dataId = getValue(this.fields.id, obj[i]);\n\n          if (dataId && dataId.toString() === parentId) {\n            return getValue(this.fields.child, obj[i]);\n          } else if (!isNOU(getValue(this.fields.child, obj[i]))) {\n            childNodes = this.getChildNodes(getValue(this.fields.child, obj[i]), parentId);\n\n            if (childNodes !== undefined) {\n              break;\n            }\n          }\n        }\n      }\n    }\n\n    return childNodes;\n  };\n\n  TreeView.prototype.getChildGroup = function (data, parentId, isRoot) {\n    var childNodes;\n\n    if (isNOU(data)) {\n      return childNodes;\n    }\n\n    for (var i = 0, objlen = data.length; i < objlen; i++) {\n      if (!isNOU(data[i][0]) && !isNOU(getValue(this.fields.parentID, data[i][0]))) {\n        if (getValue(this.fields.parentID, data[i][0]).toString() === parentId) {\n          return data[i];\n        }\n      } else if (isRoot) {\n        return data[i];\n      } else {\n        return [];\n      }\n    }\n\n    return childNodes;\n  };\n\n  TreeView.prototype.renderSubChild = function (element, expandChild, loaded) {\n    if (expandChild) {\n      var cIcons = selectAll('.' + EXPANDABLE, element);\n\n      for (var i = 0, len = cIcons.length; i < len; i++) {\n        var icon = cIcons[i];\n\n        if (element.querySelector('.e-icons') !== cIcons[i]) {\n          var curLi = closest(icon, '.' + LISTITEM);\n          this.expandArgs = this.getExpandEvent(curLi, null);\n\n          if (loaded !== true) {\n            this.trigger('nodeExpanding', this.expandArgs);\n          }\n\n          this.renderChildNodes(curLi, expandChild, null, loaded);\n        }\n      }\n    }\n  };\n\n  TreeView.prototype.toggleSelect = function (li, e, multiSelect) {\n    if (!li.classList.contains('e-disable')) {\n      if (this.allowMultiSelection && (e && e.ctrlKey || multiSelect) && this.isActive(li)) {\n        this.unselectNode(li, e);\n      } else {\n        this.selectNode(li, e, multiSelect);\n      }\n    }\n  };\n\n  TreeView.prototype.isActive = function (li) {\n    return li.classList.contains(ACTIVE) ? true : false;\n  };\n\n  TreeView.prototype.selectNode = function (li, e, multiSelect) {\n    var _this = this;\n\n    if (isNOU(li) || !this.allowMultiSelection && this.isActive(li) && !isNOU(e)) {\n      this.setFocusElement(li);\n      return;\n    }\n\n    var eventArgs;\n\n    if (this.isLoaded) {\n      eventArgs = this.getSelectEvent(li, 'select', e);\n      this.trigger('nodeSelecting', eventArgs, function (observedArgs) {\n        if (!observedArgs.cancel) {\n          _this.nodeSelectAction(li, e, observedArgs, multiSelect);\n        }\n      });\n    } else {\n      this.nodeSelectAction(li, e, eventArgs, multiSelect);\n    }\n  };\n\n  TreeView.prototype.nodeSelectAction = function (li, e, eventArgs, multiSelect) {\n    if (!this.allowMultiSelection || !multiSelect && (!e || e && !e.ctrlKey)) {\n      this.removeSelectAll();\n    }\n\n    if (this.allowMultiSelection && e && e.shiftKey) {\n      if (!this.startNode) {\n        this.startNode = li;\n      }\n\n      var startIndex = this.liList.indexOf(this.startNode);\n      var endIndex = this.liList.indexOf(li);\n\n      if (startIndex > endIndex) {\n        var temp = startIndex;\n        startIndex = endIndex;\n        endIndex = temp;\n      }\n\n      for (var i = startIndex; i <= endIndex; i++) {\n        var currNode = this.liList[i];\n\n        if (isVisible(currNode) && !currNode.classList.contains('e-disable')) {\n          this.addSelect(currNode);\n        }\n      }\n    } else {\n      this.startNode = li;\n      this.addSelect(li);\n    }\n\n    this.setFocusElement(li);\n\n    if (this.isLoaded) {\n      this.allowServerDataBinding = true;\n      this.updateServerProperties(\"select\");\n      this.allowServerDataBinding = false;\n      eventArgs.nodeData = this.getNodeData(li);\n      this.trigger('nodeSelected', eventArgs);\n    }\n  };\n\n  TreeView.prototype.unselectNode = function (li, e) {\n    var _this = this;\n\n    var eventArgs;\n\n    if (this.isLoaded) {\n      eventArgs = this.getSelectEvent(li, 'un-select', e);\n      this.trigger('nodeSelecting', eventArgs, function (observedArgs) {\n        if (!observedArgs.cancel) {\n          _this.allowServerDataBinding = true;\n\n          _this.updateServerProperties(\"select\");\n\n          _this.allowServerDataBinding = false;\n\n          _this.nodeUnselectAction(li, observedArgs);\n        }\n      });\n    } else {\n      this.nodeUnselectAction(li, eventArgs);\n    }\n  };\n\n  TreeView.prototype.nodeUnselectAction = function (li, eventArgs) {\n    this.removeSelect(li);\n    this.setFocusElement(li);\n\n    if (this.isLoaded) {\n      this.allowServerDataBinding = true;\n      this.updateServerProperties(\"select\");\n      this.allowServerDataBinding = false;\n      eventArgs.nodeData = this.getNodeData(li);\n      this.trigger('nodeSelected', eventArgs);\n    }\n  };\n\n  TreeView.prototype.setFocusElement = function (li) {\n    if (!isNOU(li)) {\n      var focusedNode = this.getFocusedNode();\n\n      if (focusedNode) {\n        removeClass([focusedNode], FOCUS);\n      }\n\n      addClass([li], FOCUS);\n      this.updateIdAttr(focusedNode, li);\n    }\n  };\n\n  TreeView.prototype.addSelect = function (liEle) {\n    liEle.setAttribute('aria-selected', 'true');\n    addClass([liEle], ACTIVE);\n    var id = liEle.getAttribute('data-uid');\n\n    if (!isNOU(id) && this.selectedNodes.indexOf(id) === -1) {\n      this.selectedNodes.push(id);\n    }\n  };\n\n  TreeView.prototype.removeSelect = function (liEle) {\n    if (this.allowMultiSelection) {\n      liEle.setAttribute('aria-selected', 'false');\n    } else {\n      liEle.removeAttribute('aria-selected');\n    }\n\n    removeClass([liEle], ACTIVE);\n    var index = this.selectedNodes.indexOf(liEle.getAttribute('data-uid'));\n\n    if (index > -1) {\n      this.selectedNodes.splice(index, 1);\n    }\n  };\n\n  TreeView.prototype.removeSelectAll = function () {\n    var selectedLI = this.element.querySelectorAll('.' + ACTIVE);\n\n    for (var _i = 0, selectedLI_1 = selectedLI; _i < selectedLI_1.length; _i++) {\n      var ele = selectedLI_1[_i];\n\n      if (this.allowMultiSelection) {\n        ele.setAttribute('aria-selected', 'false');\n      } else {\n        ele.removeAttribute('aria-selected');\n      }\n    }\n\n    removeClass(selectedLI, ACTIVE);\n    this.setProperties({\n      selectedNodes: []\n    }, true);\n  };\n\n  TreeView.prototype.getSelectEvent = function (currLi, action, e) {\n    var nodeData = this.getNodeData(currLi);\n    return {\n      action: action,\n      cancel: false,\n      isInteracted: isNOU(e) ? false : true,\n      node: currLi,\n      nodeData: nodeData\n    };\n  };\n\n  TreeView.prototype.setExpandOnType = function () {\n    this.expandOnType = this.expandOn === 'Auto' ? Browser.isDevice ? 'Click' : 'DblClick' : this.expandOn;\n  };\n\n  TreeView.prototype.expandHandler = function (e) {\n    var target = e.originalEvent.target;\n\n    if (!target || target.classList.contains(INPUT) || target.classList.contains(ROOT) || target.classList.contains(PARENTITEM) || target.classList.contains(LISTITEM) || target.classList.contains(ICON) || this.showCheckBox && closest(target, '.' + CHECKBOXWRAP)) {\n      return;\n    } else {\n      this.expandCollapseAction(closest(target, '.' + LISTITEM), e);\n    }\n  };\n\n  TreeView.prototype.expandCollapseAction = function (currLi, e) {\n    var icon = select('div.' + ICON, currLi);\n\n    if (!icon || icon.classList.contains(PROCESS)) {\n      return;\n    } else {\n      var classList = icon.classList;\n\n      if (classList.contains(EXPANDABLE)) {\n        this.expandAction(currLi, icon, e);\n      } else if (classList.contains(COLLAPSIBLE)) {\n        this.collapseNode(currLi, icon, e);\n      }\n    }\n  };\n\n  TreeView.prototype.expandAction = function (currLi, icon, e, expandChild, callback) {\n    var _this = this;\n\n    if (icon.classList.contains(PROCESS)) {\n      return;\n    } else {\n      addClass([icon], PROCESS);\n    }\n\n    if (this.isLoaded && !this.isRefreshed) {\n      this.expandArgs = this.getExpandEvent(currLi, e);\n      this.trigger('nodeExpanding', this.expandArgs, function (observedArgs) {\n        if (observedArgs.cancel) {\n          removeClass([icon], PROCESS);\n        } else {\n          _this.nodeExpandAction(currLi, icon, expandChild, callback);\n        }\n      });\n    } else {\n      this.nodeExpandAction(currLi, icon, expandChild, callback);\n    }\n  };\n\n  TreeView.prototype.nodeExpandAction = function (currLi, icon, expandChild, callback) {\n    var ul = select('.' + PARENTITEM, currLi);\n\n    if (ul && ul.nodeName === 'UL') {\n      this.expandNode(currLi, icon);\n    } else {\n      this.renderChildNodes(currLi, expandChild, callback);\n      var liEles = selectAll('.' + LISTITEM, currLi);\n\n      for (var i = 0; i < liEles.length; i++) {\n        var id = this.getId(liEles[i]);\n\n        if (this.expandChildren.indexOf(id) !== -1 && this.expandChildren !== undefined) {\n          var icon_1 = select('.' + EXPANDABLE, select('.' + TEXTWRAP, liEles[i]));\n\n          if (!isNOU(icon_1)) {\n            this.expandAction(liEles[i], icon_1, null);\n          }\n\n          this.expandChildren.splice(this.expandChildren.indexOf(id), 1);\n        }\n      }\n    }\n  };\n\n  TreeView.prototype.keyActionHandler = function (e) {\n    var _this = this;\n\n    var target = e.target;\n    var focusedNode = this.getFocusedNode();\n\n    if (target && target.classList.contains(INPUT)) {\n      var inpEle = target;\n\n      if (e.action === 'enter') {\n        inpEle.blur();\n        this.element.focus();\n        addClass([focusedNode], HOVER);\n      } else if (e.action === 'escape') {\n        inpEle.value = this.oldText;\n        inpEle.blur();\n        this.element.focus();\n        addClass([focusedNode], HOVER);\n      }\n\n      return;\n    }\n\n    e.preventDefault();\n    var eventArgs = {\n      cancel: false,\n      event: e,\n      node: focusedNode\n    };\n    this.trigger('keyPress', eventArgs, function (observedArgs) {\n      if (!observedArgs.cancel) {\n        switch (e.action) {\n          case 'space':\n            if (_this.showCheckBox) {\n              _this.checkNode(e);\n            }\n\n            break;\n\n          case 'moveRight':\n            _this.openNode(_this.enableRtl ? false : true, e);\n\n            break;\n\n          case 'moveLeft':\n            _this.openNode(_this.enableRtl ? true : false, e);\n\n            break;\n\n          case 'shiftDown':\n            _this.shiftKeySelect(true, e);\n\n            break;\n\n          case 'moveDown':\n          case 'ctrlDown':\n          case 'csDown':\n            _this.navigateNode(true);\n\n            break;\n\n          case 'shiftUp':\n            _this.shiftKeySelect(false, e);\n\n            break;\n\n          case 'moveUp':\n          case 'ctrlUp':\n          case 'csUp':\n            _this.navigateNode(false);\n\n            break;\n\n          case 'home':\n          case 'shiftHome':\n          case 'ctrlHome':\n          case 'csHome':\n            _this.navigateRootNode(true);\n\n            break;\n\n          case 'end':\n          case 'shiftEnd':\n          case 'ctrlEnd':\n          case 'csEnd':\n            _this.navigateRootNode(false);\n\n            break;\n\n          case 'enter':\n          case 'ctrlEnter':\n          case 'shiftEnter':\n          case 'csEnter':\n            _this.toggleSelect(focusedNode, e);\n\n            break;\n\n          case 'f2':\n            if (_this.allowEditing && !focusedNode.classList.contains('e-disable')) {\n              _this.createTextbox(focusedNode, e);\n            }\n\n            break;\n\n          case 'ctrlA':\n            if (_this.allowMultiSelection) {\n              var sNodes = selectAll('.' + LISTITEM + ':not(.' + ACTIVE + ')', _this.element);\n\n              _this.selectGivenNodes(sNodes);\n            }\n\n            break;\n        }\n      }\n    });\n  };\n\n  TreeView.prototype.navigateToFocus = function (isUp) {\n    var focusNode = this.getFocusedNode().querySelector('.' + TEXTWRAP);\n    var pos = focusNode.getBoundingClientRect();\n    var parent = this.getScrollParent(this.element);\n\n    if (!isNOU(parent)) {\n      var parentPos = parent.getBoundingClientRect();\n\n      if (pos.bottom > parentPos.bottom) {\n        parent.scrollTop += pos.bottom - parentPos.bottom;\n      } else if (pos.top < parentPos.top) {\n        parent.scrollTop -= parentPos.top - pos.top;\n      }\n    }\n\n    var isVisible = this.isVisibleInViewport(focusNode);\n\n    if (!isVisible) {\n      focusNode.scrollIntoView(isUp);\n    }\n  };\n\n  TreeView.prototype.isVisibleInViewport = function (txtWrap) {\n    var pos = txtWrap.getBoundingClientRect();\n    return pos.top >= 0 && pos.left >= 0 && pos.bottom <= (window.innerHeight || document.documentElement.clientHeight) && pos.right <= (window.innerWidth || document.documentElement.clientWidth);\n  };\n\n  TreeView.prototype.getScrollParent = function (node) {\n    if (isNOU(node)) {\n      return null;\n    }\n\n    return node.scrollHeight > node.clientHeight ? node : this.getScrollParent(node.parentElement);\n  };\n\n  TreeView.prototype.shiftKeySelect = function (isTowards, e) {\n    if (this.allowMultiSelection) {\n      var focusedNode = this.getFocusedNode();\n      var nextNode = isTowards ? this.getNextNode(focusedNode) : this.getPrevNode(focusedNode);\n      this.removeHover();\n      this.setFocusElement(nextNode);\n      this.toggleSelect(nextNode, e, false);\n      this.navigateToFocus(!isTowards);\n    } else {\n      this.navigateNode(isTowards);\n    }\n  };\n\n  TreeView.prototype.checkNode = function (e) {\n    var focusedNode = this.getFocusedNode();\n    var checkWrap = select('.' + CHECKBOXWRAP, focusedNode);\n    var isChecked = select(' .' + CHECKBOXFRAME, checkWrap).classList.contains(CHECK);\n\n    if (!focusedNode.classList.contains('e-disable')) {\n      if (focusedNode.getElementsByClassName(\"e-checkbox-disabled\").length == 0) {\n        this.validateCheckNode(checkWrap, isChecked, focusedNode, e);\n      }\n    }\n  };\n\n  TreeView.prototype.validateCheckNode = function (checkWrap, isCheck, li, e) {\n    var _this = this;\n\n    var currLi = closest(checkWrap, '.' + LISTITEM);\n    this.checkActionNodes = [];\n    var ariaState = !isCheck ? 'true' : 'false';\n\n    if (!isNOU(ariaState)) {\n      checkWrap.setAttribute('aria-checked', ariaState);\n    }\n\n    var eventArgs = this.getCheckEvent(currLi, isCheck ? 'uncheck' : 'check', e);\n    this.trigger('nodeChecking', eventArgs, function (observedArgs) {\n      if (!observedArgs.cancel) {\n        _this.nodeCheckingAction(checkWrap, isCheck, li, observedArgs, e);\n      }\n    });\n  };\n\n  TreeView.prototype.nodeCheckingAction = function (checkWrap, isCheck, li, eventArgs, e) {\n    if (this.checkedElement.indexOf(li.getAttribute('data-uid')) === -1) {\n      this.checkedElement.push(li.getAttribute('data-uid'));\n      var child = this.getChildNodes(this.treeData, li.getAttribute('data-uid'));\n      child !== null ? this.allCheckNode(child, this.checkedElement, null, null, false) : child = null;\n    }\n\n    this.changeState(checkWrap, isCheck ? 'uncheck' : 'check', e, true);\n\n    if (this.autoCheck) {\n      this.ensureChildCheckState(li);\n      this.ensureParentCheckState(closest(closest(li, '.' + PARENTITEM), '.' + LISTITEM));\n      var doCheck = void 0;\n\n      if (eventArgs.action === 'check') {\n        doCheck = true;\n      } else if (eventArgs.action === 'uncheck') {\n        doCheck = false;\n      }\n\n      this.ensureStateChange(li, doCheck);\n    }\n\n    this.allowServerDataBinding = true;\n    this.updateServerProperties(\"check\");\n    this.allowServerDataBinding = false;\n    this.nodeCheckedEvent(checkWrap, isCheck, e);\n  };\n  /**\n   * Update checkedNodes when UI interaction happens before the child node renders in DOM\n   */\n\n\n  TreeView.prototype.ensureStateChange = function (li, doCheck) {\n    var childElement = select('.' + PARENTITEM, li);\n    var parentIndex = li.getAttribute('data-uid');\n    var mapper = this.fields;\n\n    if (this.dataType === 1 && this.autoCheck) {\n      var resultData = new DataManager(this.treeData).executeLocal(new Query().where(mapper.parentID, 'equal', parentIndex, true));\n\n      for (var i = 0; i < resultData.length; i++) {\n        var resultId = resultData[i][this.fields.id] ? resultData[i][this.fields.id].toString() : null;\n        var isCheck = resultData[i][this.fields.isChecked] ? resultData[i][this.fields.isChecked].toString() : null;\n\n        if (this.checkedNodes.indexOf(parentIndex) !== -1 && this.checkedNodes.indexOf(resultId) === -1) {\n          this.checkedNodes.push(resultId);\n          var childItems = this.getChildNodes(this.treeData, resultId);\n          this.getChildItems(childItems, doCheck);\n\n          if (this.parentNodeCheck.indexOf(resultId) !== -1) {\n            this.parentNodeCheck.splice(this.parentNodeCheck.indexOf(resultId), 1);\n          }\n        } else if (this.checkedNodes.indexOf(parentIndex) === -1 && childElement === null && this.checkedNodes.indexOf(resultId) !== -1) {\n          this.checkedNodes.splice(this.checkedNodes.indexOf(resultId), 1);\n\n          if (isCheck === 'true') {\n            this.updateField(this.treeData, this.fields, resultId, 'isChecked', null);\n          }\n\n          if (this.checkedNodes.indexOf(parentIndex) === -1 && childElement === null || this.parentNodeCheck.indexOf(resultId) !== -1) {\n            var childNodes = this.getChildNodes(this.treeData, resultId);\n            this.getChildItems(childNodes, doCheck);\n\n            if (this.parentNodeCheck.indexOf(resultId) !== -1) {\n              this.parentNodeCheck.splice(this.parentNodeCheck.indexOf(resultId), 1);\n            }\n          }\n        } else {\n          var childItems = this.getChildNodes(this.treeData, resultId);\n          this.getChildItems(childItems, doCheck);\n        }\n      }\n    } else if (this.dataType === 1 && !this.autoCheck) {\n      if (!doCheck) {\n        var checkedData = new DataManager(this.treeData).executeLocal(new Query().where(mapper.isChecked, 'equal', true, false));\n\n        for (var i = 0; i < checkedData.length; i++) {\n          var id = checkedData[i][this.fields.id] ? checkedData[i][this.fields.id].toString() : null;\n\n          if (this.checkedNodes.indexOf(id) !== -1) {\n            this.checkedNodes.splice(this.checkedNodes.indexOf(id), 1);\n          }\n\n          this.updateField(this.treeData, this.fields, id, 'isChecked', null);\n        }\n\n        this.checkedNodes = [];\n      } else {\n        for (var i = 0; i < this.treeData.length; i++) {\n          var checkedId = this.treeData[i][this.fields.id] ? this.treeData[i][this.fields.id].toString() : null;\n\n          if (this.checkedNodes.indexOf(checkedId) === -1) {\n            this.checkedNodes.push(checkedId);\n          }\n        }\n      }\n    } else {\n      var childItems = this.getChildNodes(this.treeData, parentIndex);\n\n      if (childItems) {\n        this.childStateChange(childItems, parentIndex, childElement, doCheck);\n      }\n    }\n  };\n\n  TreeView.prototype.getChildItems = function (childItems, doCheck) {\n    for (var i = 0; i < childItems.length; i++) {\n      var childId = childItems[i][this.fields.id] ? childItems[i][this.fields.id].toString() : null;\n      var childIsCheck = childItems[i][this.fields.isChecked] ? childItems[i][this.fields.isChecked].toString() : null;\n\n      if (this.checkedNodes.indexOf(childId) !== -1 && !doCheck) {\n        this.checkedNodes.splice(this.checkedNodes.indexOf(childId), 1);\n      }\n\n      if (this.checkedNodes.indexOf(childId) === -1 && doCheck) {\n        this.checkedNodes.push(childId);\n      }\n\n      if (childIsCheck === 'true' && !doCheck) {\n        this.updateField(this.treeData, this.fields, childId, 'isChecked', null);\n      }\n\n      var subChildItems = this.getChildNodes(this.treeData, childId);\n\n      if (subChildItems.length > 0) {\n        this.getChildItems(subChildItems, doCheck);\n      }\n    }\n  };\n  /**\n   * Update checkedNodes when UI interaction happens before the child node renders in DOM for hierarchical DS\n   */\n\n\n  TreeView.prototype.childStateChange = function (childItems, parent, childElement, doCheck) {\n    for (var i = 0; i < childItems.length; i++) {\n      var checkedChild = childItems[i][this.fields.id] ? childItems[i][this.fields.id].toString() : '';\n      var isCheck = childItems[i][this.fields.isChecked] ? childItems[i][this.fields.isChecked].toString() : null;\n\n      if (this.autoCheck) {\n        if (this.checkedNodes.indexOf(parent) !== -1 && this.checkedNodes.indexOf(checkedChild) === -1) {\n          this.checkedNodes.push(checkedChild);\n\n          if (this.parentNodeCheck.indexOf(checkedChild) !== -1) {\n            this.parentNodeCheck.splice(this.parentNodeCheck.indexOf(checkedChild), 1);\n          }\n        } else if (this.checkedNodes.indexOf(parent) === -1 && this.checkedNodes.indexOf(checkedChild) !== -1 && !doCheck) {\n          this.checkedNodes.splice(this.checkedNodes.indexOf(checkedChild), 1);\n\n          if (isCheck === 'true') {\n            this.updateField(this.treeData, this.fields, checkedChild, 'isChecked', null);\n          }\n        }\n      } else if (!this.autoCheck) {\n        if (!doCheck) {\n          if (this.checkedNodes.indexOf(checkedChild) !== -1) {\n            this.checkedNodes.splice(this.checkedNodes.indexOf(checkedChild), 1);\n          }\n\n          this.updateField(this.treeData, this.fields, checkedChild, 'isChecked', null);\n          this.checkedNodes = [];\n        } else {\n          if (this.checkedNodes.indexOf(checkedChild) === -1) {\n            this.checkedNodes.push(checkedChild);\n          }\n        }\n      }\n\n      var subChild = this.getChildNodes([childItems[i]], checkedChild);\n\n      if (subChild) {\n        this.childStateChange(subChild, parent, childElement, doCheck);\n      }\n    }\n  }; //This method can be used to get all child nodes of a parent by passing the children of a parent along with 'validateCheck' set to false\n\n\n  TreeView.prototype.allCheckNode = function (child, newCheck, checked, childCheck, validateCheck) {\n    if (child) {\n      for (var length_1 = 0; length_1 < child.length; length_1++) {\n        var childId = getValue(this.fields.id, child[length_1]);\n        var check = this.element.querySelector('[data-uid=\"' + childId + '\"]'); //Validates isChecked case while no UI interaction has been performed on the node or it's parent\n\n        if (validateCheck !== false && this.checkedElement.indexOf(childId.toString()) === -1) {\n          if (check === null && !isNOU(child[length_1][this.fields.isChecked]) && newCheck.indexOf(childId.toString()) === -1 || childCheck === 0 || checked === 2) {\n            child[length_1][this.fields.isChecked] !== false || checked === 2 ? newCheck.push(childId.toString()) : childCheck = null;\n            childCheck = child[length_1][this.fields.isChecked] !== false || checked === 2 ? 0 : null;\n          }\n        } //Pushes child checked node done thro' UI interaction\n\n\n        if (newCheck.indexOf(childId.toString()) === -1 && isNOU(checked)) {\n          newCheck.push(childId.toString());\n        } //Gets if any next level children are available for child nodes\n\n\n        if (getValue(this.fields.hasChildren, child[length_1]) === true || getValue(this.fields.child.toString(), child[length_1])) {\n          var id = getValue(this.fields.id, child[length_1]);\n          var childId_1 = this.getChildNodes(this.treeData, id.toString());\n\n          if (childId_1) {\n            isNOU(validateCheck) ? this.allCheckNode(childId_1, newCheck, checked, childCheck) : this.allCheckNode(childId_1, newCheck, checked, childCheck, validateCheck);\n            childCheck = null;\n          }\n        }\n\n        childCheck = null;\n      }\n    }\n  };\n\n  TreeView.prototype.openNode = function (toBeOpened, e) {\n    var focusedNode = this.getFocusedNode();\n    var icon = select('div.' + ICON, focusedNode);\n\n    if (toBeOpened) {\n      if (!icon) {\n        return;\n      } else if (icon.classList.contains(EXPANDABLE)) {\n        this.expandAction(focusedNode, icon, e);\n      } else {\n        this.focusNextNode(focusedNode, true);\n      }\n    } else {\n      if (icon && icon.classList.contains(COLLAPSIBLE)) {\n        this.collapseNode(focusedNode, icon, e);\n      } else {\n        var parentLi = closest(closest(focusedNode, '.' + PARENTITEM), '.' + LISTITEM);\n\n        if (!parentLi) {\n          return;\n        } else {\n          if (!parentLi.classList.contains('e-disable')) {\n            this.setFocus(focusedNode, parentLi);\n            this.navigateToFocus(true);\n          }\n        }\n      }\n    }\n  };\n\n  TreeView.prototype.navigateNode = function (isTowards) {\n    var focusedNode = this.getFocusedNode();\n    this.focusNextNode(focusedNode, isTowards);\n  };\n\n  TreeView.prototype.navigateRootNode = function (isBackwards) {\n    var focusedNode = this.getFocusedNode();\n    var rootNode = isBackwards ? this.getRootNode() : this.getEndNode();\n\n    if (!rootNode.classList.contains('e-disable')) {\n      this.setFocus(focusedNode, rootNode);\n      this.navigateToFocus(isBackwards);\n    }\n  };\n\n  TreeView.prototype.getFocusedNode = function () {\n    var selectedItem;\n    var fNode = select('.' + LISTITEM + '.' + FOCUS, this.element);\n\n    if (isNOU(fNode)) {\n      selectedItem = select('.' + LISTITEM, this.element);\n    }\n\n    return isNOU(fNode) ? isNOU(selectedItem) ? this.element.firstElementChild : selectedItem : fNode;\n  };\n\n  TreeView.prototype.focusNextNode = function (li, isTowards) {\n    var nextNode = isTowards ? this.getNextNode(li) : this.getPrevNode(li);\n    this.setFocus(li, nextNode);\n    this.navigateToFocus(!isTowards);\n\n    if (nextNode.classList.contains('e-disable')) {\n      var lastChild = nextNode.lastChild;\n\n      if (nextNode.previousSibling == null && nextNode.classList.contains('e-level-1')) {\n        this.focusNextNode(nextNode, true);\n      } else if (nextNode.nextSibling == null && nextNode.classList.contains('e-node-collapsed')) {\n        this.focusNextNode(nextNode, false);\n      } else if (nextNode.nextSibling == null && lastChild.classList.contains(TEXTWRAP)) {\n        this.focusNextNode(nextNode, false);\n      } else {\n        this.focusNextNode(nextNode, isTowards);\n      }\n    }\n  };\n\n  TreeView.prototype.getNextNode = function (li) {\n    var index = this.liList.indexOf(li);\n    var nextNode;\n\n    do {\n      index++;\n      nextNode = this.liList[index];\n\n      if (isNOU(nextNode)) {\n        return li;\n      }\n    } while (!isVisible(nextNode));\n\n    return nextNode;\n  };\n\n  TreeView.prototype.getPrevNode = function (li) {\n    var index = this.liList.indexOf(li);\n    var prevNode;\n\n    do {\n      index--;\n      prevNode = this.liList[index];\n\n      if (isNOU(prevNode)) {\n        return li;\n      }\n    } while (!isVisible(prevNode));\n\n    return prevNode;\n  };\n\n  TreeView.prototype.getRootNode = function () {\n    var index = 0;\n    var rootNode;\n\n    do {\n      rootNode = this.liList[index];\n      index++;\n    } while (!isVisible(rootNode));\n\n    return rootNode;\n  };\n\n  TreeView.prototype.getEndNode = function () {\n    var index = this.liList.length - 1;\n    var endNode;\n\n    do {\n      endNode = this.liList[index];\n      index--;\n    } while (!isVisible(endNode));\n\n    return endNode;\n  };\n\n  TreeView.prototype.setFocus = function (preNode, nextNode) {\n    removeClass([preNode], [HOVER, FOCUS]);\n\n    if (!nextNode.classList.contains('e-disable')) {\n      addClass([nextNode], [HOVER, FOCUS]);\n      this.updateIdAttr(preNode, nextNode);\n    }\n  };\n\n  TreeView.prototype.updateIdAttr = function (preNode, nextNode) {\n    this.element.removeAttribute('aria-activedescendant');\n\n    if (preNode) {\n      preNode.removeAttribute('id');\n    }\n\n    nextNode.setAttribute('id', this.element.id + '_active');\n    this.element.setAttribute('aria-activedescendant', this.element.id + '_active');\n  };\n\n  TreeView.prototype.focusIn = function () {\n    if (!this.mouseDownStatus) {\n      addClass([this.getFocusedNode()], HOVER);\n    }\n\n    this.mouseDownStatus = false;\n  };\n\n  TreeView.prototype.focusOut = function () {\n    removeClass([this.getFocusedNode()], HOVER);\n  };\n\n  TreeView.prototype.onMouseOver = function (e) {\n    var target = e.target;\n    var classList = target.classList;\n    var currentLi = closest(target, '.' + LISTITEM);\n\n    if (!currentLi || classList.contains(PARENTITEM) || classList.contains(LISTITEM)) {\n      this.removeHover();\n      return;\n    } else {\n      if (currentLi && !currentLi.classList.contains('e-disable')) {\n        this.setHover(currentLi);\n      }\n    }\n  };\n\n  TreeView.prototype.setHover = function (li) {\n    if (!li.classList.contains(HOVER)) {\n      this.removeHover();\n      addClass([li], HOVER);\n    }\n  };\n\n  ;\n\n  TreeView.prototype.onMouseLeave = function (e) {\n    this.removeHover();\n  };\n\n  TreeView.prototype.removeHover = function () {\n    var hoveredNode = selectAll('.' + HOVER, this.element);\n\n    if (hoveredNode && hoveredNode.length) {\n      removeClass(hoveredNode, HOVER);\n    }\n  };\n\n  ;\n\n  TreeView.prototype.getNodeData = function (currLi, fromDS) {\n    if (!isNOU(currLi) && currLi.classList.contains(LISTITEM) && !isNOU(closest(currLi, '.' + CONTROL)) && closest(currLi, '.' + CONTROL).classList.contains(ROOT)) {\n      var id = currLi.getAttribute('data-uid');\n      var text = this.getText(currLi, fromDS);\n      var pNode = closest(currLi.parentNode, '.' + LISTITEM);\n      var pid = pNode ? pNode.getAttribute('data-uid') : null;\n      var selected = currLi.classList.contains(ACTIVE);\n      var expanded = currLi.getAttribute('aria-expanded') === 'true' ? true : false;\n      var hasChildren = currLi.getAttribute('aria-expanded') === null ? false : true;\n\n      if (this.isBlazorPlatform) {\n        hasChildren = currLi.getAttribute('aria-expanded') === 'true' ? true : (currLi.querySelector('.e-icon-expandable') || currLi.querySelector('.e-icon-collapsible')) != null ? true : false;\n      }\n\n      var checked = null;\n\n      if (this.showCheckBox) {\n        checked = select('.' + CHECKBOXWRAP, currLi).getAttribute('aria-checked');\n      }\n\n      return {\n        id: id,\n        text: text,\n        parentID: pid,\n        selected: selected,\n        expanded: expanded,\n        isChecked: checked,\n        hasChildren: hasChildren\n      };\n    }\n\n    return {\n      id: '',\n      text: '',\n      parentID: '',\n      selected: false,\n      expanded: false,\n      isChecked: '',\n      hasChildren: false\n    };\n  };\n\n  TreeView.prototype.getText = function (currLi, fromDS) {\n    if (fromDS) {\n      var nodeData = this.getNodeObject(currLi.getAttribute('data-uid'));\n      var level = parseFloat(currLi.getAttribute('aria-level'));\n      var nodeFields = this.getFields(this.fields, level, 1);\n      return getValue(nodeFields.text, nodeData);\n    }\n\n    return select('.' + LISTTEXT, currLi).textContent;\n  };\n\n  TreeView.prototype.getExpandEvent = function (currLi, e) {\n    var nodeData = this.getNodeData(currLi);\n    return {\n      cancel: false,\n      isInteracted: isNOU(e) ? false : true,\n      node: currLi,\n      nodeData: nodeData,\n      event: e\n    };\n  };\n\n  TreeView.prototype.renderNodeTemplate = function (data, textEle, dataId) {\n    var tempArr = this.nodeTemplateFn(data, this, 'nodeTemplate' + dataId, this.element.id + 'nodeTemplate', this.isStringTemplate, undefined, textEle);\n\n    if (tempArr) {\n      tempArr = Array.prototype.slice.call(tempArr);\n      append(tempArr, textEle);\n    }\n  };\n\n  TreeView.prototype.destroyTemplate = function (liEle) {\n    this.clearTemplate(['nodeTemplate' + liEle.getAttribute('data-uid')]);\n  };\n\n  TreeView.prototype.reRenderNodes = function () {\n    this.updateListProp(this.fields);\n    resetBlazorTemplate(this.element.id + 'nodeTemplate', 'NodeTemplate');\n\n    if (this.isBlazorPlatform) {\n      this.ulElement = this.element.querySelector('.e-list-parent.e-ul');\n      this.ulElement.parentElement.removeChild(this.ulElement);\n    } else {\n      this.element.innerHTML = '';\n    }\n\n    if (!isNOU(this.nodeTemplateFn)) {\n      this.clearTemplate();\n    }\n\n    this.setTouchClass();\n    this.setProperties({\n      selectedNodes: [],\n      checkedNodes: [],\n      expandedNodes: []\n    }, true);\n    this.checkedElement = [];\n    this.isLoaded = false;\n    this.setDataBinding(true);\n  };\n\n  TreeView.prototype.setCssClass = function (oldClass, newClass) {\n    if (!isNOU(oldClass) && oldClass !== '') {\n      removeClass([this.element], oldClass.split(' '));\n    }\n\n    if (!isNOU(newClass) && newClass !== '') {\n      addClass([this.element], newClass.split(' '));\n    }\n  };\n\n  TreeView.prototype.editingHandler = function (e) {\n    var target = e.target;\n\n    if (!target || target.classList.contains(ROOT) || target.classList.contains(PARENTITEM) || target.classList.contains(LISTITEM) || target.classList.contains(ICON) || target.classList.contains(INPUT) || target.classList.contains(INPUTGROUP)) {\n      return;\n    } else {\n      var liEle = closest(target, '.' + LISTITEM);\n      this.createTextbox(liEle, e);\n    }\n  };\n\n  TreeView.prototype.createTextbox = function (liEle, e) {\n    var _this = this;\n\n    var oldInpEle = select('.' + TREEINPUT, this.element);\n\n    if (oldInpEle) {\n      oldInpEle.blur();\n    }\n\n    var textEle = select('.' + LISTTEXT, liEle);\n    this.updateOldText(liEle);\n    var innerEle = this.createElement('input', {\n      className: TREEINPUT,\n      attrs: {\n        value: this.oldText\n      }\n    });\n    var eventArgs = this.getEditEvent(liEle, null, innerEle.outerHTML);\n    this.trigger('nodeEditing', eventArgs, function (observedArgs) {\n      if (!observedArgs.cancel) {\n        var inpWidth = textEle.offsetWidth + 5;\n        var style = 'width:' + inpWidth + 'px';\n        addClass([liEle], EDITING);\n\n        if (!isNOU(_this.nodeTemplateFn)) {\n          _this.destroyTemplate(liEle);\n        }\n\n        textEle.innerHTML = eventArgs.innerHtml;\n        var inpEle = select('.' + TREEINPUT, textEle);\n        _this.inputObj = Input.createInput({\n          element: inpEle,\n          properties: {\n            enableRtl: _this.enableRtl\n          }\n        }, _this.createElement);\n\n        _this.inputObj.container.setAttribute('style', style);\n\n        inpEle.focus();\n        var inputEle = inpEle;\n        inputEle.setSelectionRange(0, inputEle.value.length);\n\n        _this.wireInputEvents(inpEle);\n      }\n    });\n  };\n\n  TreeView.prototype.updateOldText = function (liEle) {\n    var id = liEle.getAttribute('data-uid');\n    this.editData = this.getNodeObject(id);\n    var level = parseFloat(liEle.getAttribute('aria-level'));\n    this.editFields = this.getFields(this.fields, level, 1);\n    this.oldText = getValue(this.editFields.text, this.editData);\n  };\n\n  TreeView.prototype.inputFocusOut = function (e) {\n    if (!select('.' + TREEINPUT, this.element)) {\n      return;\n    }\n\n    var target = e.target;\n    var newText = target.value;\n    var txtEle = closest(target, '.' + LISTTEXT);\n    var liEle = closest(target, '.' + LISTITEM);\n    detach(this.inputObj.container);\n\n    if (this.fields.dataSource instanceof DataManager && !this.isOffline && this.fields.dataSource.adaptorName !== 'BlazorAdaptor') {\n      this.crudOperation('update', null, liEle, newText, null, null, true);\n    } else {\n      this.appendNewText(liEle, txtEle, newText, true);\n    }\n  };\n\n  TreeView.prototype.appendNewText = function (liEle, txtEle, newText, isInput) {\n    var _this = this;\n\n    var eventArgs = this.getEditEvent(liEle, newText, null);\n    this.trigger('nodeEdited', eventArgs, function (observedArgs) {\n      newText = observedArgs.cancel ? observedArgs.oldText : observedArgs.newText;\n\n      _this.updateText(liEle, txtEle, newText, isInput);\n\n      if (observedArgs.oldText !== newText) {\n        _this.triggerEvent();\n      }\n    });\n  };\n\n  TreeView.prototype.updateText = function (liEle, txtEle, newText, isInput) {\n    var newData = setValue(this.editFields.text, newText, this.editData);\n\n    if (!isNOU(this.nodeTemplateFn)) {\n      txtEle.innerText = '';\n      var dataId = liEle.getAttribute('data-uid');\n      this.renderNodeTemplate(newData, txtEle, dataId);\n      this.updateBlazorTemplate();\n      this.renderReactTemplates();\n    } else {\n      txtEle.innerText = newText;\n    }\n\n    if (isInput) {\n      removeClass([liEle], EDITING);\n      txtEle.focus();\n    }\n  };\n\n  TreeView.prototype.getElement = function (ele) {\n    if (isNOU(ele)) {\n      return null;\n    } else if (typeof ele === 'string') {\n      return this.element.querySelector('[data-uid=\"' + ele + '\"]');\n    } else if (typeof ele === 'object') {\n      return getElement(ele);\n    } else {\n      return null;\n    }\n  };\n\n  TreeView.prototype.getId = function (ele) {\n    if (isNOU(ele)) {\n      return null;\n    } else if (typeof ele === 'string') {\n      return ele;\n    } else if (typeof ele === 'object') {\n      return getElement(ele).getAttribute('data-uid');\n    } else {\n      return null;\n    }\n  };\n\n  TreeView.prototype.getEditEvent = function (liEle, newText, inpEle) {\n    var data = this.getNodeData(liEle);\n    return {\n      cancel: false,\n      newText: newText,\n      node: liEle,\n      nodeData: data,\n      oldText: this.oldText,\n      innerHtml: inpEle\n    };\n  };\n\n  TreeView.prototype.getNodeObject = function (id) {\n    var childNodes;\n\n    if (isNOU(id)) {\n      return childNodes;\n    } else if (this.dataType === 1) {\n      for (var i = 0, objlen = this.treeData.length; i < objlen; i++) {\n        var dataId = getValue(this.fields.id, this.treeData[i]);\n\n        if (!isNOU(this.treeData[i]) && !isNOU(dataId) && dataId.toString() === id) {\n          return this.treeData[i];\n        }\n      }\n    } else {\n      return this.getChildNodeObject(this.treeData, this.fields, id);\n    }\n\n    return childNodes;\n  };\n\n  TreeView.prototype.getChildNodeObject = function (obj, mapper, id) {\n    var newList;\n\n    if (isNOU(obj)) {\n      return newList;\n    }\n\n    for (var i = 0, objlen = obj.length; i < objlen; i++) {\n      var dataId = getValue(mapper.id, obj[i]);\n\n      if (obj[i] && dataId && dataId.toString() === id) {\n        return obj[i];\n      } else if (typeof mapper.child === 'string' && !isNOU(getValue(mapper.child, obj[i]))) {\n        var childData = getValue(mapper.child, obj[i]);\n        newList = this.getChildNodeObject(childData, this.getChildMapper(mapper), id);\n\n        if (newList !== undefined) {\n          break;\n        }\n      } else if (this.fields.dataSource instanceof DataManager && !isNOU(getValue('child', obj[i]))) {\n        var child = 'child';\n        newList = this.getChildNodeObject(getValue(child, obj[i]), this.getChildMapper(mapper), id);\n\n        if (newList !== undefined) {\n          break;\n        }\n      }\n    }\n\n    return newList;\n  };\n\n  TreeView.prototype.setDragAndDrop = function (toBind) {\n    if (toBind && !this.disabled) {\n      this.initializeDrag();\n    } else {\n      this.destroyDrag();\n    }\n  };\n\n  TreeView.prototype.initializeDrag = function () {\n    var _this = this;\n\n    var virtualEle;\n    var proxy = this;\n    this.dragObj = new Draggable(this.element, {\n      enableTailMode: true,\n      enableAutoScroll: true,\n      dragArea: this.dragArea,\n      dragTarget: '.' + TEXTWRAP,\n      helper: function helper(e) {\n        _this.dragTarget = e.sender.target;\n        var dragRoot = closest(_this.dragTarget, '.' + ROOT);\n        var dragWrap = closest(_this.dragTarget, '.' + TEXTWRAP);\n        _this.dragLi = closest(_this.dragTarget, '.' + LISTITEM);\n\n        if (_this.fullRowSelect && !dragWrap && _this.dragTarget.classList.contains(FULLROW)) {\n          dragWrap = _this.dragTarget.nextElementSibling;\n        }\n\n        if (!_this.dragTarget || !e.element.isSameNode(dragRoot) || !dragWrap || _this.dragTarget.classList.contains(ROOT) || _this.dragTarget.classList.contains(PARENTITEM) || _this.dragTarget.classList.contains(LISTITEM) || _this.dragLi.classList.contains('e-disable')) {\n          return false;\n        }\n\n        var cloneEle = dragWrap.cloneNode(true);\n\n        if (isNOU(select('div.' + ICON, cloneEle))) {\n          var icon = proxy.createElement('div', {\n            className: ICON + ' ' + EXPANDABLE\n          });\n          cloneEle.insertBefore(icon, cloneEle.children[0]);\n        }\n\n        var cssClass = DRAGITEM + ' ' + ROOT + ' ' + _this.cssClass + ' ' + (_this.enableRtl ? RTL : '');\n        virtualEle = proxy.createElement('div', {\n          className: cssClass\n        });\n        virtualEle.appendChild(cloneEle);\n        var nLen = _this.selectedNodes.length;\n\n        if (nLen > 1 && _this.allowMultiSelection && _this.dragLi.classList.contains(ACTIVE)) {\n          var cNode = proxy.createElement('span', {\n            className: DROPCOUNT,\n            innerHTML: '' + nLen\n          });\n          virtualEle.appendChild(cNode);\n        }\n\n        document.body.appendChild(virtualEle);\n        document.body.style.cursor = '';\n        _this.dragData = _this.getNodeData(_this.dragLi);\n        return virtualEle;\n      },\n      dragStart: function dragStart(e) {\n        addClass([_this.element], DRAGGING);\n        var listItem = closest(e.target, '.e-list-item');\n        var level;\n\n        if (listItem) {\n          level = parseInt(listItem.getAttribute('aria-level'), 10);\n        }\n\n        var eventArgs = _this.getDragEvent(e.event, _this, null, e.target, null, virtualEle, level);\n\n        if (eventArgs.draggedNode.classList.contains(EDITING)) {\n          _this.dragObj.intDestroy(e.event);\n\n          _this.dragCancelAction(virtualEle);\n        } else {\n          _this.trigger('nodeDragStart', eventArgs, function (observedArgs) {\n            if (observedArgs.cancel) {\n              _this.dragObj.intDestroy(e.event);\n\n              _this.dragCancelAction(virtualEle);\n            } else {\n              _this.dragStartAction = true;\n            }\n\n            if (isBlazor()) {\n              e.bindEvents(getElement(e.dragElement));\n            }\n          });\n        }\n      },\n      drag: function drag(e) {\n        _this.dragObj.setProperties({\n          cursorAt: {\n            top: !isNOU(e.event.targetTouches) || Browser.isDevice ? 60 : -20\n          }\n        });\n\n        _this.dragAction(e, virtualEle);\n      },\n      dragStop: function dragStop(e) {\n        removeClass([_this.element], DRAGGING);\n\n        _this.removeVirtualEle();\n\n        var dropTarget = e.target;\n        var preventTargetExpand = false;\n        var dropRoot = closest(dropTarget, '.' + DROPPABLE);\n        var isHelperElement = true;\n\n        if (!dropTarget || !dropRoot) {\n          detach(e.helper);\n          document.body.style.cursor = '';\n          isHelperElement = false;\n        }\n\n        var listItem = closest(dropTarget, '.e-list-item');\n        var level;\n\n        if (listItem) {\n          level = parseInt(listItem.getAttribute('aria-level'), 10);\n        }\n\n        var eventArgs = _this.getDragEvent(e.event, _this, dropTarget, dropTarget, null, e.helper, level);\n\n        eventArgs.preventTargetExpand = preventTargetExpand;\n\n        if (_this.isBlazorPlatform && _this.dragStartAction || !_this.isBlazorPlatform) {\n          _this.trigger('nodeDragStop', eventArgs, function (observedArgs) {\n            _this.dragParent = observedArgs.draggedParentNode;\n            _this.preventExpand = observedArgs.preventTargetExpand;\n\n            if (observedArgs.cancel) {\n              if (e.helper.parentNode) {\n                detach(e.helper);\n              }\n\n              document.body.style.cursor = '';\n              isHelperElement = false;\n            }\n\n            _this.dragStartAction = false;\n\n            if (_this.isBlazorPlatform && isHelperElement) {\n              _this.dropAction(e, true);\n            }\n          });\n        }\n      }\n    });\n    this.dropObj = new Droppable(this.element, {\n      out: function out(e) {\n        if (!isNOU(e) && !e.target.classList.contains(SIBLING)) {\n          document.body.style.cursor = 'not-allowed';\n        }\n      },\n      over: function over(e) {\n        document.body.style.cursor = '';\n      },\n      drop: function drop(e) {\n        if (!_this.isBlazorPlatform) {\n          _this.dropAction(e);\n        }\n      }\n    });\n  };\n\n  TreeView.prototype.dragCancelAction = function (virtualEle) {\n    detach(virtualEle);\n    removeClass([this.element], DRAGGING);\n    this.dragStartAction = false;\n  };\n\n  TreeView.prototype.dragAction = function (e, virtualEle) {\n    var dropRoot = closest(e.target, '.' + DROPPABLE);\n    var dropWrap = closest(e.target, '.' + TEXTWRAP);\n    var icon = select('div.' + ICON, virtualEle);\n    removeClass([icon], [DROPIN, DROPNEXT, DROPOUT, NODROP]);\n    this.removeVirtualEle();\n    document.body.style.cursor = '';\n    var classList = e.target.classList;\n\n    if (this.fullRowSelect && !dropWrap && !isNOU(classList) && classList.contains(FULLROW)) {\n      dropWrap = e.target.nextElementSibling;\n    }\n\n    if (dropRoot) {\n      var dropLi = closest(e.target, '.' + LISTITEM);\n      var checkWrapper = closest(e.target, '.' + CHECKBOXWRAP);\n      var collapse = closest(e.target, '.' + COLLAPSIBLE);\n      var expand = closest(e.target, '.' + EXPANDABLE);\n\n      if (!dropRoot.classList.contains(ROOT) || dropWrap && !dropLi.isSameNode(this.dragLi) && !this.isDescendant(this.dragLi, dropLi)) {\n        if (dropLi && e && !expand && !collapse && e.event.offsetY < 7 && !checkWrapper || expand && e.event.offsetY < 5 || collapse && e.event.offsetX < 3) {\n          addClass([icon], DROPNEXT);\n          var virEle = this.createElement('div', {\n            className: SIBLING\n          });\n          var index = this.fullRowSelect ? 1 : 0;\n          dropLi.insertBefore(virEle, dropLi.children[index]);\n        } else if (dropLi && e && !expand && !collapse && e.target.offsetHeight > 0 && e.event.offsetY > e.target.offsetHeight - 10 && !checkWrapper || expand && e.event.offsetY > 19 || collapse && e.event.offsetX > 19) {\n          addClass([icon], DROPNEXT);\n          var virEle = this.createElement('div', {\n            className: SIBLING\n          });\n          var index = this.fullRowSelect ? 2 : 1;\n          dropLi.insertBefore(virEle, dropLi.children[index]);\n        } else {\n          addClass([icon], DROPIN);\n        }\n      } else if (e.target.nodeName === 'LI' && !dropLi.isSameNode(this.dragLi) && !this.isDescendant(this.dragLi, dropLi)) {\n        addClass([icon], DROPNEXT);\n        this.renderVirtualEle(e);\n      } else if (e.target.classList.contains(SIBLING)) {\n        addClass([icon], DROPNEXT);\n      } else {\n        addClass([icon], DROPOUT);\n      }\n    } else {\n      addClass([icon], NODROP);\n      document.body.style.cursor = 'not-allowed';\n    }\n\n    var listItem = closest(e.target, '.e-list-item');\n    var level;\n\n    if (listItem) {\n      level = parseInt(listItem.getAttribute('aria-level'), 10);\n    }\n\n    var eventArgs = this.getDragEvent(e.event, this, e.target, e.target, null, virtualEle, level);\n\n    if (eventArgs.dropIndicator) {\n      removeClass([icon], eventArgs.dropIndicator);\n    }\n\n    this.trigger('nodeDragging', eventArgs);\n\n    if (eventArgs.dropIndicator) {\n      addClass([icon], eventArgs.dropIndicator);\n    }\n  };\n  /* eslint-disable */\n\n\n  TreeView.prototype.dropAction = function (e, isBlazorDrop) {\n    var offsetY = e.event.offsetY;\n    var dropTarget = e.target;\n    var dragObj;\n    var level;\n    var drop = false;\n    var dragInstance;\n\n    if (!isBlazorDrop) {\n      dragInstance = e.dragData.draggable;\n    } else {\n      dragInstance = e.element;\n    }\n\n    for (var i = 0; i < dragInstance.ej2_instances.length; i++) {\n      if (dragInstance.ej2_instances[i] instanceof TreeView_1) {\n        dragObj = dragInstance.ej2_instances[i];\n        break;\n      }\n    }\n\n    if (dragObj && dragObj.dragTarget) {\n      var dragTarget = dragObj.dragTarget;\n      var dragLi = closest(dragTarget, '.' + LISTITEM);\n      var dropLi = closest(dropTarget, '.' + LISTITEM);\n\n      if (dropLi == null && dropTarget.classList.contains(ROOT)) {\n        dropLi = dropTarget.firstElementChild;\n      }\n\n      if (!isBlazorDrop) {\n        detach(e.droppedElement);\n      } else {\n        detach(e.helper);\n      }\n\n      document.body.style.cursor = '';\n\n      if (!dropLi || dropLi.isSameNode(dragLi) || this.isDescendant(dragLi, dropLi)) {\n        if (this.fields.dataSource instanceof DataManager === false) {\n          this.preventExpand = false;\n        }\n\n        return;\n      }\n\n      if (dragObj.allowMultiSelection && dragLi.classList.contains(ACTIVE)) {\n        var sNodes = selectAll('.' + ACTIVE, dragObj.element);\n\n        if (e.target.offsetHeight <= 33 && offsetY > e.target.offsetHeight - 10 && offsetY > 6) {\n          for (var i = sNodes.length - 1; i >= 0; i--) {\n            if (dropLi.isSameNode(sNodes[i]) || this.isDescendant(sNodes[i], dropLi)) {\n              continue;\n            }\n\n            this.appendNode(dropTarget, sNodes[i], dropLi, e, dragObj, offsetY);\n          }\n        } else {\n          for (var i = 0; i < sNodes.length; i++) {\n            if (dropLi.isSameNode(sNodes[i]) || this.isDescendant(sNodes[i], dropLi)) {\n              continue;\n            }\n\n            this.appendNode(dropTarget, sNodes[i], dropLi, e, dragObj, offsetY);\n          }\n        }\n      } else {\n        this.appendNode(dropTarget, dragLi, dropLi, e, dragObj, offsetY);\n      }\n\n      level = parseInt(dragLi.getAttribute('aria-level'), 10);\n      drop = true;\n    }\n\n    if (this.fields.dataSource instanceof DataManager === false) {\n      this.preventExpand = false;\n    }\n\n    if (!isBlazorDrop) {\n      this.trigger('nodeDropped', this.getDragEvent(e.event, dragObj, dropTarget, e.target, e.dragData.draggedElement, null, level, drop));\n    } else {\n      this.trigger('nodeDropped', this.getDragEvent(e.event, dragObj, dropTarget, e.target, e.element, null, level, drop));\n    }\n\n    this.triggerEvent();\n  };\n\n  TreeView.prototype.appendNode = function (dropTarget, dragLi, dropLi, e, dragObj, offsetY) {\n    var checkWrapper = closest(dropTarget, '.' + CHECKBOXWRAP);\n    var collapse = closest(e.target, '.' + COLLAPSIBLE);\n    var expand = closest(e.target, '.' + EXPANDABLE);\n\n    if (!dragLi.classList.contains('e-disable') && !checkWrapper && (expand && e.event.offsetY < 5 || collapse && e.event.offsetX < 3 || expand && e.event.offsetY > 19 || collapse && e.event.offsetX > 19 || !expand && !collapse)) {\n      if (dropTarget.nodeName === 'LI') {\n        this.dropAsSiblingNode(dragLi, dropLi, e, dragObj);\n      } else if (dropTarget.firstElementChild && dropTarget.classList.contains(ROOT)) {\n        if (dropTarget.firstElementChild.nodeName === 'UL') {\n          this.dropAsSiblingNode(dragLi, dropLi, e, dragObj);\n        }\n      } else if (dropTarget.classList.contains('e-icon-collapsible') || dropTarget.classList.contains('e-icon-expandable')) {\n        this.dropAsSiblingNode(dragLi, dropLi, e, dragObj);\n      } else {\n        this.dropAsChildNode(dragLi, dropLi, dragObj, null, e, offsetY);\n      }\n    } else {\n      this.dropAsChildNode(dragLi, dropLi, dragObj, null, e, offsetY, true);\n    }\n  };\n\n  TreeView.prototype.dropAsSiblingNode = function (dragLi, dropLi, e, dragObj) {\n    var dropUl = closest(dropLi, '.' + PARENTITEM);\n    var dragParentUl = closest(dragLi, '.' + PARENTITEM);\n    var dragParentLi = closest(dragParentUl, '.' + LISTITEM);\n    var pre;\n\n    if (e.target.offsetHeight > 0 && e.event.offsetY > e.target.offsetHeight - 2) {\n      pre = false;\n    } else if (e.event.offsetY < 2) {\n      pre = true;\n    } else if (e.target.classList.contains('e-icon-expandable') || e.target.classList.contains('e-icon-collapsible')) {\n      if (e.event.offsetY < 5 || e.event.offsetX < 3) {\n        pre = true;\n      } else if (e.event.offsetY > 15 || e.event.offsetX > 17) {\n        pre = false;\n      }\n    }\n\n    if (e.target.classList.contains('e-icon-expandable') || e.target.classList.contains('e-icon-collapsible')) {\n      var target = e.target.closest('li');\n      dropUl.insertBefore(dragLi, pre ? target : target.nextElementSibling);\n    } else {\n      dropUl.insertBefore(dragLi, pre ? e.target : e.target.nextElementSibling);\n    }\n\n    this.moveData(dragLi, dropLi, dropUl, pre, dragObj);\n    this.updateElement(dragParentUl, dragParentLi);\n    this.updateAriaLevel(dragLi);\n\n    if (dragObj.element.id === this.element.id) {\n      this.updateList();\n    } else {\n      dragObj.updateInstance();\n      this.updateInstance();\n    }\n  };\n\n  TreeView.prototype.dropAsChildNode = function (dragLi, dropLi, dragObj, index, e, pos, isCheck) {\n    var dragParentUl = closest(dragLi, '.' + PARENTITEM);\n    var dragParentLi = closest(dragParentUl, '.' + LISTITEM);\n    var dropParentUl = closest(dropLi, '.' + PARENTITEM);\n\n    if (e && pos < 7 && !isCheck) {\n      dropParentUl.insertBefore(dragLi, dropLi);\n      this.moveData(dragLi, dropLi, dropParentUl, true, dragObj);\n    } else if (e && e.target.offsetHeight > 0 && pos > e.target.offsetHeight - 10 && !isCheck) {\n      dropParentUl.insertBefore(dragLi, dropLi.nextElementSibling);\n      this.moveData(dragLi, dropLi, dropParentUl, false, dragObj);\n    } else {\n      var dropUl = this.expandParent(dropLi);\n      var childLi = dropUl.childNodes[index];\n      dropUl.insertBefore(dragLi, childLi);\n      this.moveData(dragLi, childLi, dropUl, true, dragObj);\n    }\n\n    this.updateElement(dragParentUl, dragParentLi);\n    this.updateAriaLevel(dragLi);\n\n    if (dragObj.element.id === this.element.id) {\n      this.updateList();\n    } else {\n      dragObj.updateInstance();\n      this.updateInstance();\n    }\n  };\n\n  TreeView.prototype.moveData = function (dragLi, dropLi, dropUl, pre, dragObj) {\n    var dropParentLi = closest(dropUl, '.' + LISTITEM);\n    var id = this.getId(dragLi);\n    var removedData = dragObj.updateChildField(dragObj.treeData, dragObj.fields, id, null, null, true);\n    var refId = this.getId(dropLi);\n    var index = this.getDataPos(this.treeData, this.fields, refId);\n    var parentId = this.getId(dropParentLi);\n\n    if (this.dataType === 1) {\n      this.updateField(this.treeData, this.fields, parentId, 'hasChildren', true);\n      var pos = isNOU(index) ? this.treeData.length : pre ? index : index + 1;\n\n      if (isNOU(parentId) && !this.hasPid) {\n        delete removedData[0][this.fields.parentID];\n      } else {\n        var currPid = this.isNumberTypeId ? parseFloat(parentId) : parentId;\n        setValue(this.fields.parentID, currPid, removedData[0]);\n      }\n\n      this.treeData.splice(pos, 0, removedData[0]);\n\n      if (dragObj.element.id !== this.element.id) {\n        var childData = dragObj.removeChildNodes(id);\n        pos++;\n\n        for (var i = 0, len = childData.length; i < len; i++) {\n          this.treeData.splice(pos, 0, childData[i]);\n          pos++;\n        }\n\n        dragObj.groupedData = dragObj.getGroupedData(dragObj.treeData, dragObj.fields.parentID);\n      }\n\n      this.groupedData = this.getGroupedData(this.treeData, this.fields.parentID);\n    } else {\n      this.addChildData(this.treeData, this.fields, parentId, removedData, pre ? index : index + 1);\n    }\n  };\n\n  TreeView.prototype.expandParent = function (dropLi) {\n    var dropIcon = select('div.' + ICON, dropLi);\n\n    if (dropIcon && dropIcon.classList.contains(EXPANDABLE) && this.preventExpand !== true) {\n      this.expandAction(dropLi, dropIcon, null);\n    }\n\n    var dropUl = select('.' + PARENTITEM, dropLi);\n\n    if (this.preventExpand === true && !dropUl && dropIcon) {\n      this.renderChildNodes(dropLi);\n    }\n\n    dropUl = select('.' + PARENTITEM, dropLi);\n\n    if (!isNOU(dropUl) && this.preventExpand === true) {\n      dropUl.style.display = 'none';\n    }\n\n    if (!isNOU(dropUl) && this.preventExpand === false) {\n      dropUl.style.display = 'block';\n    }\n\n    if (isNOU(dropUl) && this.preventExpand === true) {\n      if (isNOU(dropIcon)) {\n        ListBase.generateIcon(this.createElement, dropLi, EXPANDABLE, this.listBaseOption);\n      }\n\n      var icon = select('div.' + ICON, dropLi);\n\n      if (icon) {\n        icon.classList.add('e-icon-expandable');\n      }\n\n      dropUl = ListBase.generateUL(this.createElement, [], null, this.listBaseOption);\n      dropLi.appendChild(dropUl);\n\n      if (icon) {\n        removeClass([icon], COLLAPSIBLE);\n      } else {\n        ListBase.generateIcon(this.createElement, dropLi, EXPANDABLE, this.listBaseOption);\n      }\n\n      dropLi.setAttribute('aria-expanded', 'false');\n      dropUl.style.display = 'none';\n    }\n\n    if (isNOU(dropUl)) {\n      this.trigger('nodeExpanding', this.getExpandEvent(dropLi, null));\n\n      if (isNOU(dropIcon)) {\n        ListBase.generateIcon(this.createElement, dropLi, COLLAPSIBLE, this.listBaseOption);\n      }\n\n      var icon = select('div.' + ICON, dropLi);\n\n      if (icon) {\n        removeClass([icon], EXPANDABLE);\n      } else {\n        ListBase.generateIcon(this.createElement, dropLi, COLLAPSIBLE, this.listBaseOption);\n        icon = select('div.' + ICON, dropLi);\n        removeClass([icon], EXPANDABLE);\n      }\n\n      dropUl = ListBase.generateUL(this.createElement, [], null, this.listBaseOption);\n      dropLi.appendChild(dropUl);\n      this.addExpand(dropLi);\n      this.trigger('nodeExpanded', this.getExpandEvent(dropLi, null));\n    }\n\n    return dropUl;\n  };\n\n  TreeView.prototype.updateElement = function (dragParentUl, dragParentLi) {\n    if (dragParentLi && dragParentUl.childElementCount === 0) {\n      var dragIcon = select('div.' + ICON, dragParentLi);\n      detach(dragParentUl);\n      detach(dragIcon);\n      var parentId = this.getId(dragParentLi);\n      this.updateField(this.treeData, this.fields, parentId, 'hasChildren', false);\n      this.removeExpand(dragParentLi, true);\n    }\n  };\n\n  TreeView.prototype.updateAriaLevel = function (dragLi) {\n    var level = this.parents(dragLi, '.' + PARENTITEM).length;\n    dragLi.setAttribute('aria-level', '' + level);\n    this.updateChildAriaLevel(select('.' + PARENTITEM, dragLi), level + 1);\n  };\n\n  TreeView.prototype.updateChildAriaLevel = function (element, level) {\n    if (!isNOU(element)) {\n      var cNodes = element.childNodes;\n\n      for (var i = 0, len = cNodes.length; i < len; i++) {\n        var liEle = cNodes[i];\n        liEle.setAttribute('aria-level', '' + level);\n        this.updateChildAriaLevel(select('.' + PARENTITEM, liEle), level + 1);\n      }\n    }\n  };\n\n  TreeView.prototype.renderVirtualEle = function (e) {\n    var pre;\n\n    if (e.event.offsetY > e.target.offsetHeight - 2) {\n      pre = false;\n    } else if (e.event.offsetY < 2) {\n      pre = true;\n    }\n\n    var virEle = this.createElement('div', {\n      className: SIBLING\n    });\n    var index = this.fullRowSelect ? pre ? 1 : 2 : pre ? 0 : 1;\n    e.target.insertBefore(virEle, e.target.children[index]);\n  };\n\n  TreeView.prototype.removeVirtualEle = function () {\n    var sibEle = select('.' + SIBLING);\n\n    if (sibEle) {\n      detach(sibEle);\n    }\n  };\n\n  TreeView.prototype.destroyDrag = function () {\n    if (this.dragObj && this.dropObj) {\n      this.dragObj.destroy();\n      this.dropObj.destroy();\n    }\n  };\n\n  TreeView.prototype.getDragEvent = function (event, obj, dropTarget, target, dragNode, cloneEle, level, drop) {\n    var dropLi = dropTarget ? closest(dropTarget, '.' + LISTITEM) : null;\n    var dropData = dropLi ? this.getNodeData(dropLi) : null;\n    var draggedNode = obj ? obj.dragLi : dragNode;\n    var draggedNodeData = obj ? obj.dragData : null;\n    var newParent = dropTarget ? this.parents(dropTarget, '.' + LISTITEM) : null;\n    var dragLiParent = obj.dragLi.parentElement;\n    var dragParent = obj.dragLi ? closest(dragLiParent, '.' + LISTITEM) : null;\n    var targetParent = null;\n    var indexValue = null;\n    var iconCss = [DROPNEXT, DROPIN, DROPOUT, NODROP];\n    var iconClass = null;\n    var node = drop === true ? draggedNode : dropLi;\n    var index = node ? closest(node, '.e-list-parent') : null;\n    var i = 0;\n    var position = null;\n    dragParent = obj.dragLi && dragParent === null ? closest(dragLiParent, '.' + ROOT) : dragParent;\n    dragParent = drop === true ? this.dragParent : dragParent;\n\n    if (cloneEle) {\n      while (i < 4) {\n        if (select('.' + ICON, cloneEle).classList.contains(iconCss[i])) {\n          iconClass = iconCss[i];\n          break;\n        }\n\n        i++;\n      }\n    }\n\n    if (index) {\n      var dropTar = 0;\n\n      for (i = 0; i < index.childElementCount; i++) {\n        dropTar = drop !== true && index.children[i] === draggedNode && dropLi !== draggedNode ? ++dropTar : dropTar;\n\n        if (drop !== true && index.children[i].classList.contains('e-hover')) {\n          indexValue = event.offsetY >= 23 ? i + 1 : i;\n          break;\n        } else if (index.children[i] === node) {\n          indexValue = event.offsetY >= 23 ? i : i;\n          break;\n        }\n      }\n\n      indexValue = dropTar !== 0 ? --indexValue : indexValue;\n      position = iconClass == \"e-drop-in\" ? \"Inside\" : event.offsetY < 7 ? \"Before\" : \"After\";\n    }\n\n    if (dropTarget) {\n      if (newParent.length === 0) {\n        targetParent = null;\n      } else if (dropTarget.classList.contains(LISTITEM)) {\n        targetParent = newParent[0];\n      } else {\n        targetParent = newParent[1];\n      }\n    }\n\n    if (dropLi === draggedNode) {\n      targetParent = dropLi;\n    }\n\n    if (dropTarget && target.offsetHeight <= 33 && event.offsetY < target.offsetHeight - 10 && event.offsetY > 6) {\n      targetParent = dropLi;\n\n      if (drop !== true) {\n        level = ++level;\n        var parent_2 = targetParent ? select('.e-list-parent', targetParent) : null;\n        indexValue = parent_2 ? parent_2.children.length : 0;\n\n        if (!(this.fields.dataSource instanceof DataManager) && parent_2 === null && targetParent) {\n          var parent_3 = targetParent.hasAttribute('data-uid') ? this.getChildNodes(this.fields.dataSource, targetParent.getAttribute('data-uid').toString()) : null;\n          indexValue = parent_3 ? parent_3.length : 0;\n        }\n      }\n    }\n\n    return {\n      cancel: false,\n      clonedNode: cloneEle,\n      event: event,\n      draggedNode: draggedNode,\n      draggedNodeData: draggedNodeData,\n      droppedNode: dropLi,\n      droppedNodeData: dropData,\n      dropIndex: indexValue,\n      dropLevel: level,\n      draggedParentNode: dragParent,\n      dropTarget: targetParent,\n      dropIndicator: iconClass,\n      target: target,\n      position: position\n    };\n  };\n\n  TreeView.prototype.addFullRow = function (toAdd) {\n    var len = this.liList.length;\n\n    if (toAdd) {\n      for (var i = 0; i < len; i++) {\n        this.createFullRow(this.liList[i]);\n      }\n    } else {\n      for (var i = 0; i < len; i++) {\n        var rowDiv = select('.' + FULLROW, this.liList[i]);\n        detach(rowDiv);\n      }\n    }\n  };\n\n  TreeView.prototype.createFullRow = function (item) {\n    var rowDiv = this.createElement('div', {\n      className: FULLROW\n    });\n    item.insertBefore(rowDiv, item.childNodes[0]);\n  };\n\n  TreeView.prototype.addMultiSelect = function (toAdd) {\n    if (toAdd) {\n      var liEles = selectAll('.' + LISTITEM + ':not([aria-selected=\"true\"])', this.element);\n\n      for (var _i = 0, liEles_1 = liEles; _i < liEles_1.length; _i++) {\n        var ele = liEles_1[_i];\n        ele.setAttribute('aria-selected', 'false');\n      }\n    } else {\n      var liEles = selectAll('.' + LISTITEM + '[aria-selected=\"false\"]', this.element);\n\n      for (var _a = 0, liEles_2 = liEles; _a < liEles_2.length; _a++) {\n        var ele = liEles_2[_a];\n        ele.removeAttribute('aria-selected');\n      }\n    }\n  };\n\n  TreeView.prototype.collapseByLevel = function (element, level, excludeHiddenNodes) {\n    if (level > 0 && !isNOU(element)) {\n      var cNodes = this.getVisibleNodes(excludeHiddenNodes, element.childNodes);\n\n      for (var i = 0, len = cNodes.length; i < len; i++) {\n        var liEle = cNodes[i];\n        var icon = select('.' + COLLAPSIBLE, select('.' + TEXTWRAP, liEle));\n\n        if (!isNOU(icon)) {\n          this.collapseNode(liEle, icon, null);\n        }\n\n        this.collapseByLevel(select('.' + PARENTITEM, liEle), level - 1, excludeHiddenNodes);\n      }\n    }\n  };\n\n  TreeView.prototype.collapseAllNodes = function (excludeHiddenNodes) {\n    var cIcons = this.getVisibleNodes(excludeHiddenNodes, selectAll('.' + COLLAPSIBLE, this.element));\n\n    for (var i = 0, len = cIcons.length; i < len; i++) {\n      var icon = cIcons[i];\n      var liEle = closest(icon, '.' + LISTITEM);\n      this.collapseNode(liEle, icon, null);\n    }\n  };\n\n  TreeView.prototype.expandByLevel = function (element, level, excludeHiddenNodes) {\n    if (level > 0 && !isNOU(element)) {\n      var eNodes = this.getVisibleNodes(excludeHiddenNodes, element.childNodes);\n\n      for (var i = 0, len = eNodes.length; i < len; i++) {\n        var liEle = eNodes[i];\n        var icon = select('.' + EXPANDABLE, select('.' + TEXTWRAP, liEle));\n\n        if (!isNOU(icon)) {\n          this.expandAction(liEle, icon, null);\n        }\n\n        this.expandByLevel(select('.' + PARENTITEM, liEle), level - 1, excludeHiddenNodes);\n      }\n    }\n  };\n\n  TreeView.prototype.expandAllNodes = function (excludeHiddenNodes) {\n    var eIcons = this.getVisibleNodes(excludeHiddenNodes, selectAll('.' + EXPANDABLE, this.element));\n\n    for (var i = 0, len = eIcons.length; i < len; i++) {\n      var icon = eIcons[i];\n      var liEle = closest(icon, '.' + LISTITEM);\n      this.expandAction(liEle, icon, null, true);\n    }\n  };\n\n  TreeView.prototype.getVisibleNodes = function (excludeHiddenNodes, nodes) {\n    var vNodes = Array.prototype.slice.call(nodes);\n\n    if (excludeHiddenNodes) {\n      for (var i = 0; i < vNodes.length; i++) {\n        if (!isVisible(vNodes[i])) {\n          vNodes.splice(i, 1);\n          i--;\n        }\n      }\n    }\n\n    return vNodes;\n  };\n\n  TreeView.prototype.removeNode = function (node) {\n    var dragParentUl = closest(node, '.' + PARENTITEM);\n    var dragParentLi = closest(dragParentUl, '.' + LISTITEM);\n\n    if (!isNOU(this.nodeTemplateFn)) {\n      this.destroyTemplate(node);\n    }\n\n    detach(node);\n    this.updateElement(dragParentUl, dragParentLi);\n    this.updateInstance();\n    this.removeData(node);\n  };\n\n  TreeView.prototype.updateInstance = function () {\n    this.updateList();\n    this.updateSelectedNodes();\n    this.updateExpandedNodes();\n    this.allowServerDataBinding = false;\n    this.updateServerProperties(\"expand\");\n    this.updateServerProperties(\"check\");\n    this.updateServerProperties(\"select\");\n    this.allowServerDataBinding = true;\n  };\n\n  TreeView.prototype.updateServerProperties = function (action) {\n    if (this.isBlazorPlatform) {\n      if (action == \"expand\") {\n        this.isBlazorExpandedNodes = this.expandedNodes;\n        this.setProperties({\n          expandedNodes: []\n        }, true);\n      } else if (action == \"check\") {\n        this.setProperties({\n          checkedNodes: this.checkedNodes\n        }, true);\n      } else {\n        this.setProperties({\n          selectedNodes: this.selectedNodes\n        }, true);\n      }\n    }\n  };\n\n  TreeView.prototype.updateList = function () {\n    this.liList = Array.prototype.slice.call(selectAll('.' + LISTITEM, this.element));\n  };\n\n  TreeView.prototype.updateSelectedNodes = function () {\n    if (!this.isBlazorPlatform || this.isBlazorPlatform && !this.initialRender) {\n      this.setProperties({\n        selectedNodes: []\n      }, true);\n      var sNodes = selectAll('.' + ACTIVE, this.element);\n      this.selectGivenNodes(sNodes);\n    } else if (this.isBlazorPlatform && this.initialRender) {\n      var sNodes = selectAll('.' + ACTIVE, this.element);\n\n      for (var a = 0; a < sNodes.length; a++) {\n        var id = sNodes[a].getAttribute(\"data-uid\").toString();\n\n        if (!isNOU(id) && this.selectedNodes.indexOf(id) === -1) {\n          this.selectedNodes.push(id);\n        }\n      }\n    }\n  };\n\n  TreeView.prototype.updateExpandedNodes = function () {\n    if (!this.isBlazorPlatform || this.isBlazorPlatform && !this.initialRender) {\n      this.setProperties({\n        expandedNodes: []\n      }, true);\n      var eNodes = selectAll('[aria-expanded=\"true\"]', this.element);\n\n      for (var i = 0, len = eNodes.length; i < len; i++) {\n        this.addExpand(eNodes[i]);\n      }\n    } else if (this.isBlazorPlatform && this.initialRender) {\n      var eNodes = selectAll('[aria-expanded=\"true\"]', this.element);\n\n      for (var a = 0; a < eNodes.length; a++) {\n        var id = eNodes[a].getAttribute(\"data-uid\").toString();\n\n        if (!isNOU(id) && this.expandedNodes.indexOf(id) === -1) {\n          this.expandedNodes.push(id);\n        }\n      }\n    }\n  };\n\n  TreeView.prototype.removeData = function (node) {\n    if (this.dataType === 1) {\n      var dm = new DataManager(this.treeData);\n      var id = this.getId(node);\n      var data = {};\n      var newId = this.isNumberTypeId ? parseFloat(id) : id;\n      data[this.fields.id] = newId;\n      dm.remove(this.fields.id, data);\n      this.removeChildNodes(id);\n    } else {\n      var id = this.getId(node);\n      this.updateChildField(this.treeData, this.fields, id, null, null, true);\n    }\n  };\n\n  TreeView.prototype.removeChildNodes = function (parentId) {\n    var cNodes = this.getChildGroup(this.groupedData, parentId, false);\n    var childData = [];\n\n    if (cNodes) {\n      for (var i = 0, len = cNodes.length; i < len; i++) {\n        var dm = new DataManager(this.treeData);\n        var id = getValue(this.fields.id, cNodes[i]).toString();\n        var data = {};\n        var currId = this.isNumberTypeId ? parseFloat(id) : id;\n        data[this.fields.id] = currId;\n        var nodeData = dm.remove(this.fields.id, data);\n        childData.push(nodeData[0]);\n        this.removeChildNodes(id);\n      }\n    }\n\n    return childData;\n  };\n\n  TreeView.prototype.doGivenAction = function (nodes, selector, toExpand) {\n    for (var i = 0, len = nodes.length; i < len; i++) {\n      var liEle = this.getElement(nodes[i]);\n\n      if (isNOU(liEle)) {\n        continue;\n      }\n\n      var icon = select('.' + selector, select('.' + TEXTWRAP, liEle));\n\n      if (!isNOU(icon)) {\n        toExpand ? this.expandAction(liEle, icon, null) : this.collapseNode(liEle, icon, null);\n      }\n    }\n  };\n\n  TreeView.prototype.addGivenNodes = function (nodes, dropLi, index, isRemote, dropEle) {\n    if (nodes.length === 0) {\n      return;\n    }\n\n    var sNodes = this.getSortedData(nodes);\n    var level = dropLi ? parseFloat(dropLi.getAttribute('aria-level')) + 1 : 1;\n\n    if (isRemote) {\n      this.updateMapper(level);\n    }\n\n    var li = ListBase.createListItemFromJson(this.createElement, sNodes, this.listBaseOption, level);\n    var dropUl;\n\n    if (!dropEle) {\n      dropUl = dropLi ? this.expandParent(dropLi) : select('.' + PARENTITEM, this.element);\n    } else {\n      dropUl = dropEle;\n    }\n\n    var refNode = dropUl.childNodes[index];\n\n    for (var i = 0; i < li.length; i++) {\n      dropUl.insertBefore(li[i], refNode);\n    }\n\n    if (this.nodeTemplate && this.isBlazorPlatform && !this.isStringTemplate) {\n      this.updateBlazorTemplate();\n    }\n\n    var id = this.getId(dropLi);\n\n    if (this.dataType === 1) {\n      this.updateField(this.treeData, this.fields, id, 'hasChildren', true);\n      var refId = this.getId(refNode);\n      var pos = isNOU(refId) ? this.treeData.length : this.getDataPos(this.treeData, this.fields, refId);\n\n      for (var j = 0; j < nodes.length; j++) {\n        if (!isNOU(id)) {\n          var currId = this.isNumberTypeId ? parseFloat(id) : id;\n          setValue(this.fields.parentID, currId, nodes[j]);\n        }\n\n        this.treeData.splice(pos, 0, nodes[j]);\n        pos++;\n      }\n    } else {\n      this.addChildData(this.treeData, this.fields, id, nodes, index);\n    }\n\n    this.finalizeNode(dropUl);\n  };\n\n  TreeView.prototype.updateMapper = function (level) {\n    var mapper = level === 1 ? this.fields : this.getChildFields(this.fields, level - 1, 1);\n    this.updateListProp(mapper);\n  };\n\n  TreeView.prototype.updateListProp = function (mapper) {\n    var prop = this.getActualProperties(mapper);\n    this.listBaseOption.fields = prop;\n    this.listBaseOption.fields.url = prop.hasOwnProperty('navigateUrl') ? prop.navigateUrl : 'navigateUrl';\n  };\n\n  TreeView.prototype.getDataPos = function (obj, mapper, id) {\n    var pos = null;\n\n    for (var i = 0, objlen = obj.length; i < objlen; i++) {\n      var nodeId = getValue(mapper.id, obj[i]);\n\n      if (obj[i] && nodeId && nodeId.toString() === id) {\n        return i;\n      } else if (typeof mapper.child === 'string' && !isNOU(getValue(mapper.child, obj[i]))) {\n        var data = getValue(mapper.child, obj[i]);\n        pos = this.getDataPos(data, this.getChildMapper(mapper), id);\n\n        if (pos !== null) {\n          break;\n        }\n      } else if (this.fields.dataSource instanceof DataManager && !isNOU(getValue('child', obj[i]))) {\n        var items = getValue('child', obj[i]);\n        pos = this.getDataPos(items, this.getChildMapper(mapper), id);\n\n        if (pos !== null) {\n          break;\n        }\n      }\n    }\n\n    return pos;\n  };\n\n  TreeView.prototype.addChildData = function (obj, mapper, id, data, index) {\n    var updated;\n\n    if (isNOU(id)) {\n      index = isNOU(index) ? obj.length : index;\n\n      for (var k = 0, len = data.length; k < len; k++) {\n        obj.splice(index, 0, data[k]);\n        index++;\n      }\n\n      return updated;\n    }\n\n    for (var i = 0, objlen = obj.length; i < objlen; i++) {\n      var nodeId = getValue(mapper.id, obj[i]);\n\n      if (obj[i] && nodeId && nodeId.toString() === id) {\n        if (typeof mapper.child === 'string' && obj[i].hasOwnProperty(mapper.child) && obj[i][mapper.child] !== null || this.fields.dataSource instanceof DataManager && this.fields.dataSource.adaptorName !== 'BlazorAdaptor' && obj[i].hasOwnProperty('child')) {\n          var key = typeof mapper.child === 'string' ? mapper.child : 'child';\n          var childData = getValue(key, obj[i]);\n\n          if (isNOU(childData)) {\n            childData = [];\n          }\n\n          index = isNOU(index) ? childData.length : index;\n\n          for (var k = 0, len = data.length; k < len; k++) {\n            childData.splice(index, 0, data[k]);\n            index++;\n          }\n        } else {\n          var key = typeof mapper.child === 'string' ? mapper.child : 'child';\n          obj[i][key] = data;\n        }\n\n        return true;\n      } else if (typeof mapper.child === 'string' && !isNOU(getValue(mapper.child, obj[i]))) {\n        var childObj = getValue(mapper.child, obj[i]);\n        updated = this.addChildData(childObj, this.getChildMapper(mapper), id, data, index);\n\n        if (updated !== undefined) {\n          break;\n        }\n      } else if (this.fields.dataSource instanceof DataManager && this.fields.dataSource.adaptorName !== 'BlazorAdaptor' && !isNOU(getValue('child', obj[i]))) {\n        var childData = getValue('child', obj[i]);\n        updated = this.addChildData(childData, this.getChildMapper(mapper), id, data, index);\n\n        if (updated !== undefined) {\n          break;\n        }\n      }\n    }\n\n    return updated;\n  };\n\n  TreeView.prototype.doDisableAction = function (nodes) {\n    var validNodes = this.nodeType(nodes);\n    var validID = this.checkValidId(validNodes);\n    this.validArr = [];\n\n    for (var i = 0, len = validID.length; i < len; i++) {\n      var id = validID[i][this.fields.id].toString();\n\n      if (id && this.disableNode.indexOf(id) === -1) {\n        this.disableNode.push(id);\n      }\n\n      var liEle = this.getElement(id);\n\n      if (liEle) {\n        liEle.setAttribute('aria-disabled', 'true');\n        addClass([liEle], DISABLE);\n      }\n    }\n  };\n\n  TreeView.prototype.doEnableAction = function (nodes) {\n    var strNodes = this.nodeType(nodes);\n\n    for (var i = 0, len = strNodes.length; i < len; i++) {\n      var liEle = this.getElement(strNodes[i]);\n      var id = strNodes[i];\n\n      if (id && this.disableNode.indexOf(id) !== -1) {\n        this.disableNode.splice(this.disableNode.indexOf(id), 1);\n      }\n\n      if (liEle) {\n        liEle.removeAttribute('aria-disabled');\n        removeClass([liEle], DISABLE);\n      }\n    }\n  };\n\n  TreeView.prototype.nodeType = function (nodes) {\n    var validID = [];\n\n    for (var i = 0, len = nodes.length; i < len; i++) {\n      var id = void 0;\n\n      if (typeof nodes[i] == \"string\") {\n        id = nodes[i] ? nodes[i].toString() : null;\n      } else if (typeof nodes[i] === \"object\") {\n        id = nodes[i] ? nodes[i].getAttribute(\"data-uid\").toString() : null;\n      }\n\n      if (validID.indexOf(id) == -1) {\n        validID.push(id);\n      }\n    }\n\n    return validID;\n  };\n\n  TreeView.prototype.checkValidId = function (node) {\n    var _this = this;\n\n    if (this.dataType === 1) {\n      this.validArr = this.treeData.filter(function (data) {\n        return node.indexOf(data[_this.fields.id] ? data[_this.fields.id].toString() : null) !== -1;\n      });\n    } else if (this.dataType === 2) {\n      for (var k = 0; k < this.treeData.length; k++) {\n        var id = this.treeData[k][this.fields.id] ? this.treeData[k][this.fields.id].toString() : null;\n\n        if (node.indexOf(id) !== -1) {\n          this.validArr.push(this.treeData[k]);\n        }\n\n        var childItems = getValue(this.fields.child.toString(), this.treeData[k]);\n\n        if (childItems) {\n          this.filterNestedChild(childItems, node);\n        }\n      }\n    }\n\n    return this.validArr;\n  };\n\n  TreeView.prototype.filterNestedChild = function (treeData, nodes) {\n    for (var k = 0; k < treeData.length; k++) {\n      var id = treeData[k][this.fields.id] ? treeData[k][this.fields.id].toString() : null;\n\n      if (nodes.indexOf(id) !== -1) {\n        this.validArr.push(treeData[k]);\n      }\n\n      var childItems = getValue(this.fields.child.toString(), treeData[k]);\n\n      if (childItems) {\n        this.filterNestedChild(childItems, nodes);\n      }\n    }\n  };\n\n  TreeView.prototype.setTouchClass = function () {\n    var ele = closest(this.element, '.' + BIGGER);\n    this.touchClass = isNOU(ele) ? '' : SMALL;\n  };\n\n  TreeView.prototype.updatePersistProp = function () {\n    this.removeField(this.treeData, this.fields, ['selected', 'expanded']);\n    var sleNodes = this.selectedNodes;\n\n    for (var l = 0, slelen = sleNodes.length; l < slelen; l++) {\n      this.updateField(this.treeData, this.fields, sleNodes[l], 'selected', true);\n    }\n\n    var enodes = this.expandedNodes;\n\n    if (this.isBlazorPlatform) {\n      enodes = this.isBlazorExpandedNodes;\n    }\n\n    for (var k = 0, nodelen = enodes.length; k < nodelen; k++) {\n      this.updateField(this.treeData, this.fields, enodes[k], 'expanded', true);\n    }\n\n    if (this.showCheckBox) {\n      this.removeField(this.treeData, this.fields, ['isChecked']);\n      var cnodes = this.checkedNodes;\n\n      for (var m = 0, nodelen = cnodes.length; m < nodelen; m++) {\n        this.updateField(this.treeData, this.fields, cnodes[m], 'isChecked', true);\n      }\n    }\n  };\n\n  TreeView.prototype.removeField = function (obj, mapper, names) {\n    if (isNOU(obj) || isNOU(mapper)) {\n      return;\n    }\n\n    for (var i = 0, objlen = obj.length; i < objlen; i++) {\n      for (var j = 0; j < names.length; j++) {\n        var field = this.getMapperProp(mapper, names[j]);\n\n        if (!isNOU(obj[i][field])) {\n          delete obj[i][field];\n        }\n      }\n\n      if (typeof mapper.child === 'string' && !isNOU(getValue(mapper.child, obj[i]))) {\n        this.removeField(getValue(mapper.child, obj[i]), this.getChildMapper(mapper), names);\n      } else if (this.fields.dataSource instanceof DataManager && !isNOU(getValue('child', obj[i]))) {\n        this.removeField(getValue('child', obj[i]), this.getChildMapper(mapper), names);\n      }\n    }\n  };\n\n  TreeView.prototype.getMapperProp = function (mapper, fieldName) {\n    switch (fieldName) {\n      case 'selected':\n        return !isNOU(mapper.selected) ? mapper.selected : 'selected';\n\n      case 'expanded':\n        return !isNOU(mapper.expanded) ? mapper.expanded : 'expanded';\n\n      case 'isChecked':\n        return !isNOU(mapper.isChecked) ? mapper.isChecked : 'isChecked';\n\n      case 'hasChildren':\n        return !isNOU(mapper.hasChildren) ? mapper.hasChildren : 'hasChildren';\n\n      default:\n        return fieldName;\n    }\n  };\n\n  TreeView.prototype.updateField = function (obj, mapper, id, key, value) {\n    var childNodes;\n\n    if (isNOU(id)) {\n      return;\n    } else if (this.dataType === 1) {\n      var newId = this.isNumberTypeId ? parseFloat(id) : id;\n      var resultData = new DataManager(this.treeData).executeLocal(new Query().where(mapper.id, 'equal', newId, false));\n      setValue(this.getMapperProp(mapper, key), value, resultData[0]);\n    } else {\n      this.updateChildField(obj, mapper, id, key, value);\n    }\n  };\n\n  TreeView.prototype.updateChildField = function (obj, mapper, id, key, value, remove) {\n    var removedData;\n\n    if (isNOU(obj)) {\n      return removedData;\n    }\n\n    for (var i = 0, objlen = obj.length; i < objlen; i++) {\n      var nodeId = getValue(mapper.id, obj[i]);\n\n      if (obj[i] && nodeId && nodeId.toString() === id) {\n        if (remove) {\n          removedData = obj.splice(i, 1);\n        } else {\n          setValue(this.getMapperProp(mapper, key), value, obj[i]);\n          removedData = [];\n        }\n\n        return removedData;\n      } else if (typeof mapper.child === 'string' && !isNOU(getValue(mapper.child, obj[i]))) {\n        var childData = getValue(mapper.child, obj[i]);\n        removedData = this.updateChildField(childData, this.getChildMapper(mapper), id, key, value, remove);\n\n        if (removedData !== undefined) {\n          break;\n        }\n      } else if (this.fields.dataSource instanceof DataManager && !isNOU(getValue('child', obj[i]))) {\n        var childItems = getValue('child', obj[i]);\n        removedData = this.updateChildField(childItems, this.getChildMapper(mapper), id, key, value, remove);\n\n        if (removedData !== undefined) {\n          break;\n        }\n      }\n    }\n\n    return removedData;\n  };\n\n  TreeView.prototype.triggerEvent = function () {\n    this.updateTemplateForBlazor();\n    this.renderReactTemplates();\n    var eventArgs = {\n      data: this.treeData\n    };\n    this.trigger('dataSourceChanged', eventArgs);\n  };\n\n  TreeView.prototype.updateBlazorTemplate = function () {\n    updateBlazorTemplate(this.element.id + 'nodeTemplate', 'NodeTemplate', this, false);\n  };\n\n  TreeView.prototype.clientUpdateInitial = function () {\n    this.blazorInitialRender = true;\n  };\n\n  TreeView.prototype.wireInputEvents = function (inpEle) {\n    EventHandler.add(inpEle, 'blur', this.inputFocusOut, this);\n  };\n\n  TreeView.prototype.wireEditingEvents = function (toBind) {\n    var _this = this;\n\n    if (toBind && !this.disabled) {\n      var proxy_2 = this;\n      this.touchEditObj = new Touch(this.element, {\n        tap: function tap(e) {\n          if (_this.isDoubleTapped(e) && e.tapCount === 2) {\n            e.originalEvent.preventDefault();\n            proxy_2.editingHandler(e.originalEvent);\n          }\n        }\n      });\n    } else {\n      if (this.touchEditObj) {\n        this.touchEditObj.destroy();\n      }\n    }\n  };\n\n  TreeView.prototype.wireClickEvent = function (toBind) {\n    if (toBind) {\n      var proxy_3 = this;\n      this.touchClickObj = new Touch(this.element, {\n        tap: function tap(e) {\n          proxy_3.clickHandler(e);\n        }\n      });\n    } else {\n      if (this.touchClickObj) {\n        this.touchClickObj.destroy();\n      }\n    }\n  };\n\n  TreeView.prototype.wireExpandOnEvent = function (toBind) {\n    var _this = this;\n\n    if (toBind) {\n      var proxy_4 = this;\n      this.touchExpandObj = new Touch(this.element, {\n        tap: function tap(e) {\n          if ((_this.expandOnType === 'Click' || _this.expandOnType === 'DblClick' && _this.isDoubleTapped(e) && e.tapCount === 2) && e.originalEvent.which !== 3) {\n            proxy_4.expandHandler(e);\n          }\n        }\n      });\n    } else {\n      if (this.touchExpandObj) {\n        this.touchExpandObj.destroy();\n      }\n    }\n  };\n\n  TreeView.prototype.mouseDownHandler = function (e) {\n    this.mouseDownStatus = true;\n\n    if (e.shiftKey || e.ctrlKey) {\n      e.preventDefault();\n    }\n\n    if (e.ctrlKey && this.allowMultiSelection) {\n      EventHandler.add(this.element, 'contextmenu', this.preventContextMenu, this);\n    }\n  };\n\n  ;\n\n  TreeView.prototype.preventContextMenu = function (e) {\n    e.preventDefault();\n  };\n\n  TreeView.prototype.wireEvents = function () {\n    EventHandler.add(this.element, 'mousedown', this.mouseDownHandler, this);\n    this.wireClickEvent(true);\n\n    if (this.expandOnType !== 'None') {\n      this.wireExpandOnEvent(true);\n    }\n\n    EventHandler.add(this.element, 'focus', this.focusIn, this);\n    EventHandler.add(this.element, 'blur', this.focusOut, this);\n    EventHandler.add(this.element, 'mouseover', this.onMouseOver, this);\n    EventHandler.add(this.element, 'mouseout', this.onMouseLeave, this);\n    this.keyboardModule = new KeyboardEvents(this.element, {\n      keyAction: this.keyActionHandler.bind(this),\n      keyConfigs: this.keyConfigs,\n      eventName: 'keydown'\n    });\n  };\n\n  TreeView.prototype.unWireEvents = function () {\n    EventHandler.remove(this.element, 'mousedown', this.mouseDownHandler);\n    this.wireClickEvent(false);\n    this.wireExpandOnEvent(false);\n    EventHandler.remove(this.element, 'focus', this.focusIn);\n    EventHandler.remove(this.element, 'blur', this.focusOut);\n    EventHandler.remove(this.element, 'mouseover', this.onMouseOver);\n    EventHandler.remove(this.element, 'mouseout', this.onMouseLeave);\n\n    if (!this.disabled) {\n      this.keyboardModule.destroy();\n    }\n  };\n\n  TreeView.prototype.parents = function (element, selector) {\n    var matched = [];\n    var el = element.parentNode;\n\n    while (!isNOU(el)) {\n      if (matches(el, selector)) {\n        matched.push(el);\n      }\n\n      el = el.parentNode;\n    }\n\n    return matched;\n  };\n\n  TreeView.prototype.isDoubleTapped = function (e) {\n    var target = e.originalEvent.target;\n    var secondTap;\n\n    if (target && e.tapCount) {\n      if (e.tapCount === 1) {\n        this.firstTap = closest(target, '.' + LISTITEM);\n      } else if (e.tapCount === 2) {\n        secondTap = closest(target, '.' + LISTITEM);\n      }\n    }\n\n    return this.firstTap === secondTap;\n  };\n\n  TreeView.prototype.isDescendant = function (parent, child) {\n    var node = child.parentNode;\n\n    while (!isNOU(node)) {\n      if (node === parent) {\n        return true;\n      }\n\n      node = node.parentNode;\n    }\n\n    return false;\n  };\n\n  TreeView.prototype.showSpinner = function (element) {\n    addClass([element], LOAD);\n    createSpinner({\n      target: element,\n      width: Browser.isDevice ? 16 : 14\n    }, this.createElement);\n    showSpinner(element);\n  };\n\n  TreeView.prototype.hideSpinner = function (element) {\n    hideSpinner(element);\n    element.innerHTML = '';\n    removeClass([element], LOAD);\n  };\n\n  TreeView.prototype.setCheckedNodes = function (nodes) {\n    nodes = JSON.parse(JSON.stringify(nodes));\n    this.uncheckAll(this.checkedNodes);\n    this.setIndeterminate(nodes);\n\n    if (nodes.length > 0) {\n      this.checkAll(nodes);\n    }\n  };\n  /**\n   * Checks whether the checkedNodes entered are valid and sets the valid checkedNodes while changing via setmodel\n   */\n\n\n  TreeView.prototype.setValidCheckedNode = function (node) {\n    if (this.dataType === 1) {\n      var mapper = this.fields;\n      var resultData = new DataManager(this.treeData).executeLocal(new Query().where(mapper.id, 'equal', node, true));\n\n      if (resultData[0]) {\n        this.setChildCheckState(resultData, node, resultData[0]);\n\n        if (this.autoCheck) {\n          var parent_4 = resultData[0][this.fields.parentID] ? resultData[0][this.fields.parentID].toString() : null;\n          var childNodes = this.getChildNodes(this.treeData, parent_4);\n          var count = 0;\n\n          for (var len = 0; len < childNodes.length; len++) {\n            var childId = childNodes[len][this.fields.id].toString();\n\n            if (this.checkedNodes.indexOf(childId) !== -1) {\n              count++;\n            }\n          }\n\n          if (count === childNodes.length && this.checkedNodes.indexOf(parent_4) === -1 && parent_4) {\n            this.checkedNodes.push(parent_4);\n          }\n        }\n      }\n    } else if (this.dataType === 2) {\n      for (var a = 0; a < this.treeData.length; a++) {\n        var index = this.treeData[a][this.fields.id] ? this.treeData[a][this.fields.id].toString() : '';\n\n        if (index === node && this.checkedNodes.indexOf(node) === -1) {\n          this.checkedNodes.push(node);\n          break;\n        }\n\n        var childItems = getValue(this.fields.child.toString(), this.treeData[a]);\n\n        if (childItems) {\n          this.setChildCheckState(childItems, node, this.treeData[a]);\n        }\n      }\n    }\n  };\n  /**\n   * Checks whether the checkedNodes entered are valid and sets the valid checkedNodes while changing via setmodel(for hierarchical DS)\n   */\n\n\n  TreeView.prototype.setChildCheckState = function (childItems, node, treeData) {\n    var checkedParent;\n    var count = 0;\n\n    if (this.dataType === 1) {\n      if (treeData) {\n        checkedParent = treeData[this.fields.id] ? treeData[this.fields.id].toString() : null;\n      }\n\n      for (var index = 0; index < childItems.length; index++) {\n        var checkNode = childItems[index][this.fields.id] ? childItems[index][this.fields.id].toString() : null;\n\n        if (treeData && checkedParent && this.autoCheck) {\n          if (this.checkedNodes.indexOf(checkedParent) !== -1 && this.checkedNodes.indexOf(checkNode) === -1) {\n            this.checkedNodes.push(checkNode);\n          }\n        }\n\n        if (checkNode === node && this.checkedNodes.indexOf(node) === -1) {\n          this.checkedNodes.push(node);\n        }\n\n        var subChildItems = this.getChildNodes(this.treeData, checkNode);\n\n        if (subChildItems) {\n          this.setChildCheckState(subChildItems, node, treeData);\n        }\n      }\n    } else {\n      if (treeData) {\n        checkedParent = treeData[this.fields.id] ? treeData[this.fields.id].toString() : '';\n      }\n\n      for (var index = 0; index < childItems.length; index++) {\n        var checkedChild = childItems[index][this.fields.id] ? childItems[index][this.fields.id].toString() : '';\n\n        if (treeData && checkedParent && this.autoCheck) {\n          if (this.checkedNodes.indexOf(checkedParent) !== -1 && this.checkedNodes.indexOf(checkedChild) === -1) {\n            this.checkedNodes.push(checkedChild);\n          }\n        }\n\n        if (checkedChild === node && this.checkedNodes.indexOf(node) === -1) {\n          this.checkedNodes.push(node);\n        }\n\n        var subChildItems = getValue(this.fields.child.toString(), childItems[index]);\n\n        if (subChildItems) {\n          this.setChildCheckState(subChildItems, node, childItems[index]);\n        }\n\n        if (this.checkedNodes.indexOf(checkedChild) !== -1 && this.autoCheck) {\n          count++;\n        }\n\n        if (count === childItems.length && this.checkedNodes.indexOf(checkedParent) === -1 && this.autoCheck) {\n          this.checkedNodes.push(checkedParent);\n        }\n      }\n    }\n  };\n\n  TreeView.prototype.setIndeterminate = function (nodes) {\n    for (var i = 0; i < nodes.length; i++) {\n      this.setValidCheckedNode(nodes[i]);\n    }\n  };\n\n  TreeView.prototype.updatePosition = function (id, newData, isRefreshChild, childValue) {\n    if (this.dataType === 1) {\n      var pos = this.getDataPos(this.treeData, this.fields, id);\n      this.treeData.splice(pos, 1, newData);\n\n      if (isRefreshChild) {\n        this.removeChildNodes(id);\n\n        for (var j = 0; j < childValue.length; j++) {\n          this.treeData.splice(pos, 0, childValue[j]);\n          pos++;\n        }\n      }\n\n      this.groupedData = this.getGroupedData(this.treeData, this.fields.parentID);\n    } else {\n      this.updateChildPosition(this.treeData, this.fields, id, [newData], undefined);\n    }\n  };\n\n  TreeView.prototype.updateChildPosition = function (treeData, mapper, currID, newData, index) {\n    var found;\n\n    for (var i = 0, objlen = treeData.length; i < objlen; i++) {\n      var nodeId = getValue(mapper.id, treeData[i]);\n\n      if (treeData[i] && nodeId && nodeId.toString() === currID) {\n        treeData[i] = newData[0];\n        return true;\n      } else if (typeof mapper.child === 'string' && !isNOU(getValue(mapper.child, treeData[i]))) {\n        var childObj = getValue(mapper.child, treeData[i]);\n        found = this.updateChildPosition(childObj, this.getChildMapper(mapper), currID, newData, index);\n\n        if (found !== undefined) {\n          break;\n        }\n      } else if (this.fields.dataSource instanceof DataManager && !isNOU(getValue('child', treeData[i]))) {\n        var childData = getValue('child', treeData[i]);\n        found = this.updateChildPosition(childData, this.getChildMapper(mapper), currID, newData, index);\n\n        if (found !== undefined) {\n          break;\n        }\n      }\n    }\n\n    return found;\n  };\n\n  TreeView.prototype.dynamicState = function () {\n    this.setDragAndDrop(this.allowDragAndDrop);\n    this.wireEditingEvents(this.allowEditing);\n\n    if (!this.disabled) {\n      this.wireEvents();\n      this.setRipple();\n    } else {\n      this.unWireEvents();\n      this.rippleFn();\n      this.rippleIconFn();\n    }\n  };\n\n  TreeView.prototype.crudOperation = function (operation, nodes, target, newText, newNode, index, prevent) {\n    var _this = this;\n\n    var data = this.fields.dataSource;\n    var matchedArr = [];\n    var query = this.getQuery(this.fields);\n    var key = this.fields.id;\n    var crud;\n    var changes = {\n      addedRecords: [],\n      deletedRecords: [],\n      changedRecords: []\n    };\n    var nodesID = [];\n\n    if (nodes) {\n      nodesID = this.nodeType(nodes);\n    } else if (target) {\n      if (typeof target == \"string\") {\n        nodesID[0] = target.toString();\n      } else if (typeof target === \"object\") {\n        nodesID[0] = target.getAttribute(\"data-uid\").toString();\n      }\n    }\n\n    for (var i = 0, len = nodesID.length; i < len; i++) {\n      var liEle = this.getElement(nodesID[i]);\n\n      if (isNullOrUndefined(liEle)) {\n        continue;\n      }\n\n      var removedData = this.getNodeObject(nodesID[i]);\n      matchedArr.push(removedData);\n    }\n\n    switch (operation) {\n      case 'delete':\n        if (nodes.length == 1) {\n          crud = data.remove(key, matchedArr[0], query.fromTable, query);\n        } else {\n          changes.deletedRecords = matchedArr;\n          crud = data.saveChanges(changes, key, query.fromTable, query);\n        }\n\n        crud.then(function (e) {\n          return _this.deleteSuccess(nodesID);\n        }).catch(function (e) {\n          return _this.dmFailure(e);\n        });\n        break;\n\n      case 'update':\n        matchedArr[0][this.fields.text] = newText;\n        crud = data.update(key, matchedArr[0], query.fromTable, query);\n        crud.then(function (e) {\n          return _this.editSucess(target, newText, prevent);\n        }).catch(function (e) {\n          return _this.dmFailure(e, target, prevent);\n        });\n        break;\n\n      case 'insert':\n        if (newNode.length == 1) {\n          crud = data.insert(newNode[0], query.fromTable, query);\n        } else {\n          var arr = [];\n\n          for (var i = 0, len = newNode.length; i < len; i++) {\n            arr.push(newNode[i]);\n          }\n\n          changes.addedRecords = arr;\n          crud = data.saveChanges(changes, key, query.fromTable, query);\n        }\n\n        crud.then(function (e) {\n          var dropLi = _this.getElement(target);\n\n          _this.addSuccess(newNode, dropLi, index);\n\n          _this.preventExpand = false;\n        }).catch(function (e) {\n          return _this.dmFailure(e);\n        });\n        break;\n    }\n  };\n\n  TreeView.prototype.deleteSuccess = function (nodes) {\n    for (var i = 0, len = nodes.length; i < len; i++) {\n      var liEle = this.getElement(nodes[i]);\n\n      if (isNOU(liEle)) {\n        continue;\n      }\n\n      this.removeNode(liEle);\n    }\n\n    if (this.dataType === 1) {\n      this.groupedData = this.getGroupedData(this.treeData, this.fields.parentID);\n    }\n\n    this.triggerEvent();\n  };\n\n  TreeView.prototype.editSucess = function (target, newText, prevent) {\n    var liEle = this.getElement(target);\n    var txtEle = select('.' + LISTTEXT, liEle);\n    this.appendNewText(liEle, txtEle, newText, prevent);\n  };\n\n  TreeView.prototype.addSuccess = function (nodes, dropLi, index) {\n    var dropUl;\n    var icon = dropLi ? dropLi.querySelector('.' + ICON) : null;\n    var proxy = this;\n\n    if (dropLi && icon && icon.classList.contains(EXPANDABLE) && dropLi.querySelector('.' + PARENTITEM) === null) {\n      proxy.renderChildNodes(dropLi, null, function () {\n        dropUl = dropLi.querySelector('.' + PARENTITEM);\n        proxy.addGivenNodes(nodes, dropLi, index, true, dropUl);\n        proxy.triggerEvent();\n      });\n    } else {\n      this.addGivenNodes(nodes, dropLi, index, true);\n      this.triggerEvent();\n    }\n  };\n\n  TreeView.prototype.dmFailure = function (e, target, prevent) {\n    if (target) {\n      this.updatePreviousText(target, prevent);\n    }\n\n    this.trigger('actionFailure', {\n      error: e\n    });\n  };\n\n  TreeView.prototype.updatePreviousText = function (target, prevent) {\n    var liEle = this.getElement(target);\n    var txtEle = select('.' + LISTTEXT, liEle);\n    this.updateText(liEle, txtEle, this.oldText, prevent);\n  };\n  /**\n   * Called internally if any of the property value changed.\n   * @param  {TreeView} newProp\n   * @param  {TreeView} oldProp\n   * @returns void\n   * @private\n   */\n\n\n  TreeView.prototype.onPropertyChanged = function (newProp, oldProp) {\n    for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n      var prop = _a[_i];\n\n      switch (prop) {\n        case 'allowDragAndDrop':\n          this.setDragAndDrop(this.allowDragAndDrop);\n          break;\n\n        case 'dragArea':\n          if (this.allowDragAndDrop) {\n            this.dragObj.dragArea = this.dragArea;\n          }\n\n          break;\n\n        case 'allowEditing':\n          this.wireEditingEvents(this.allowEditing);\n          break;\n\n        case 'allowMultiSelection':\n          if (this.selectedNodes.length > 1) {\n            var sNode = this.getElement(this.selectedNodes[0]);\n            this.isLoaded = false;\n            this.removeSelectAll();\n            this.selectNode(sNode, null);\n            this.isLoaded = true;\n          }\n\n          this.setMultiSelect(this.allowMultiSelection);\n          this.addMultiSelect(this.allowMultiSelection);\n          break;\n\n        case 'checkedNodes':\n          if (this.showCheckBox) {\n            this.checkedNodes = oldProp.checkedNodes;\n            this.setCheckedNodes(newProp.checkedNodes);\n          }\n\n          break;\n\n        case 'autoCheck':\n          if (this.showCheckBox) {\n            this.autoCheck = newProp.autoCheck;\n            this.ensureIndeterminate();\n          }\n\n          break;\n\n        case 'cssClass':\n          this.setCssClass(oldProp.cssClass, newProp.cssClass);\n          break;\n\n        case 'enableRtl':\n          this.setEnableRtl();\n          break;\n\n        case 'expandedNodes':\n          this.isAnimate = false;\n\n          if (!this.isBlazorPlatform) {\n            this.setProperties({\n              expandedNodes: []\n            }, true);\n          }\n\n          this.collapseAll();\n          this.isInitalExpand = true;\n\n          if (!this.isBlazorPlatform) {\n            this.setProperties({\n              expandedNodes: isNOU(newProp.expandedNodes) ? [] : newProp.expandedNodes\n            }, true);\n          }\n\n          this.doExpandAction();\n          this.isInitalExpand = false;\n          this.isAnimate = true;\n          break;\n\n        case 'expandOn':\n          this.wireExpandOnEvent(false);\n          this.setExpandOnType();\n\n          if (this.expandOnType !== 'None' && !this.disabled) {\n            this.wireExpandOnEvent(true);\n          }\n\n          break;\n\n        case 'disabled':\n          this.setDisabledMode();\n          this.dynamicState();\n          break;\n\n        case 'fields':\n          this.isAnimate = false;\n          this.isFieldChange = true;\n          this.initialRender = true;\n\n          if (!this.blazorInitialRender) {\n            this.reRenderNodes();\n          }\n\n          this.blazorInitialRender = false;\n          this.initialRender = false;\n          this.isAnimate = true;\n          this.isFieldChange = false;\n          break;\n\n        case 'fullRowSelect':\n          this.setFullRow(this.fullRowSelect);\n          this.addFullRow(this.fullRowSelect);\n          break;\n\n        case 'loadOnDemand':\n          if (this.loadOnDemand === false && !this.onLoaded) {\n            var nodes = this.element.querySelectorAll('li');\n            var i = 0;\n\n            while (i < nodes.length) {\n              if (nodes[i].getAttribute('aria-expanded') !== 'true') {\n                this.renderChildNodes(nodes[i], true, null, true);\n              }\n\n              i++;\n            }\n\n            this.onLoaded = true;\n          }\n\n          break;\n\n        case 'nodeTemplate':\n          this.nodeTemplateFn = this.templateComplier(this.nodeTemplate);\n          this.reRenderNodes();\n          break;\n\n        case 'selectedNodes':\n          this.removeSelectAll();\n          this.setProperties({\n            selectedNodes: newProp.selectedNodes\n          }, true);\n          this.doSelectionAction();\n          break;\n\n        case 'showCheckBox':\n          this.reRenderNodes();\n          break;\n\n        case 'sortOrder':\n          this.reRenderNodes();\n          break;\n\n        case 'fullRowNavigable':\n          this.setProperties({\n            fullRowNavigable: newProp.fullRowNavigable\n          }, true);\n          this.listBaseOption.itemNavigable = newProp.fullRowNavigable;\n          this.reRenderNodes();\n          break;\n      }\n    }\n  };\n  /**\n   * Removes the component from the DOM and detaches all its related event handlers. It also removes the attributes and classes.\n   */\n\n\n  TreeView.prototype.destroy = function () {\n    resetBlazorTemplate(this.element.id + 'nodeTemplate', 'NodeTemplate');\n    this.clearTemplate();\n    this.element.removeAttribute('aria-activedescendant');\n    this.element.removeAttribute('tabindex');\n    this.unWireEvents();\n    this.wireEditingEvents(false);\n\n    if (!this.disabled) {\n      this.rippleFn();\n      this.rippleIconFn();\n    }\n\n    this.setCssClass(this.cssClass, null);\n    this.setDragAndDrop(false);\n    this.setFullRow(false);\n\n    if (this.isBlazorPlatform) {\n      this.ulElement = this.element.querySelector('.e-list-parent.e-ul');\n    }\n\n    if (this.ulElement && this.ulElement.parentElement) {\n      this.ulElement.parentElement.removeChild(this.ulElement);\n    }\n\n    if (!this.isBlazorPlatform) {\n      _super.prototype.destroy.call(this);\n    }\n  };\n  /**\n   * Adds the collection of TreeView nodes based on target and index position. If target node is not specified,\n   * then the nodes are added as children of the given parentID or in the root level of TreeView.\n   * @param  { { [key: string]: Object }[] } nodes - Specifies the array of JSON data that has to be added.\n   * @param  { string | Element } target - Specifies ID of TreeView node/TreeView node as target element.\n   * @param  { number } index - Specifies the index to place the newly added nodes in the target element.\n   * @param { boolean } preventTargetExpand - If set to true, the target parent node will be prevented from auto expanding.\n   */\n\n\n  TreeView.prototype.addNodes = function (nodes, target, index, preventTargetExpand) {\n    if (isNOU(nodes)) {\n      return;\n    }\n\n    nodes = JSON.parse(JSON.stringify(nodes));\n    var dropLi = this.getElement(target);\n    this.preventExpand = preventTargetExpand;\n\n    if (this.fields.dataSource instanceof DataManager && this.fields.dataSource.adaptorName !== 'BlazorAdaptor') {\n      if (!this.isOffline) {\n        this.crudOperation('insert', null, target, null, nodes, index, this.preventExpand);\n      } else {\n        this.addSuccess(nodes, dropLi, index);\n      }\n    } else if (this.dataType === 2) {\n      this.addGivenNodes(nodes, dropLi, index);\n    } else {\n      if (dropLi) {\n        this.addGivenNodes(nodes, dropLi, index);\n      } else {\n        nodes = this.getSortedData(nodes);\n\n        for (var i = 0; i < nodes.length; i++) {\n          var pid = getValue(this.fields.parentID, nodes[i]);\n          dropLi = pid ? this.getElement(pid.toString()) : pid;\n          this.addGivenNodes([nodes[i]], dropLi, index);\n        }\n      }\n\n      this.groupedData = this.getGroupedData(this.treeData, this.fields.parentID);\n    }\n\n    this.updateCheckedStateFromDS();\n\n    if (this.showCheckBox && dropLi) {\n      this.ensureParentCheckState(dropLi);\n    }\n\n    if (this.fields.dataSource instanceof DataManager === false || this.fields.dataSource instanceof DataManager && this.fields.dataSource.adaptorName === 'BlazorAdaptor') {\n      this.preventExpand = false;\n      this.triggerEvent();\n    }\n  };\n  /**\n   * Instead of clicking on the TreeView node for editing, we can enable it by using\n   * `beginEdit` property. On passing the node ID or element through this property, the edit textBox\n   * will be created for the particular node thus allowing us to edit it.\n   * @param  {string | Element} node - Specifies ID of TreeView node/TreeView node.\n   */\n\n\n  TreeView.prototype.beginEdit = function (node) {\n    var ele = this.getElement(node);\n\n    if (isNOU(ele) || this.disabled) {\n      return;\n    }\n\n    this.createTextbox(ele, null);\n  };\n  /**\n   * Checks all the unchecked nodes. You can also check specific nodes by passing array of unchecked nodes\n   * as argument to this method.\n   * @param  {string[] | Element[]} nodes - Specifies the array of TreeView nodes ID/array of TreeView node.\n   */\n\n\n  TreeView.prototype.checkAll = function (nodes) {\n    if (this.showCheckBox) {\n      this.doCheckBoxAction(nodes, true);\n    }\n  };\n  /**\n   * Collapses all the expanded TreeView nodes. You can collapse specific nodes by passing array of nodes as argument to this method.\n   * You can also collapse all the nodes excluding the hidden nodes by setting **excludeHiddenNodes** to true. If you want to collapse\n   * a specific level of nodes, set **level** as argument to collapseAll method.\n   * @param  {string[] | Element[]} nodes - Specifies the array of TreeView nodes ID/ array of TreeView node.\n   * @param  {number} level - TreeView nodes will collapse up to the given level.\n   * @param  {boolean} excludeHiddenNodes - Whether or not to exclude hidden nodes of TreeView when collapsing all nodes.\n   */\n\n\n  TreeView.prototype.collapseAll = function (nodes, level, excludeHiddenNodes) {\n    if (!isNOU(nodes)) {\n      this.doGivenAction(nodes, COLLAPSIBLE, false);\n    } else {\n      if (level > 0) {\n        this.collapseByLevel(select('.' + PARENTITEM, this.element), level, excludeHiddenNodes);\n      } else {\n        this.collapseAllNodes(excludeHiddenNodes);\n      }\n    }\n  };\n  /**\n   * Disables the collection of nodes by passing the ID of nodes or node elements in the array.\n   * @param  {string[] | Element[]} nodes - Specifies the array of TreeView nodes ID/array of TreeView nodes.\n   */\n\n\n  TreeView.prototype.disableNodes = function (nodes) {\n    if (!isNOU(nodes)) {\n      this.doDisableAction(nodes);\n    }\n  };\n  /**\n   * Enables the collection of disabled nodes by passing the ID of nodes or node elements in the array.\n   * @param  {string[] | Element[]} nodes - Specifies the array of TreeView nodes ID/array of TreeView nodes.\n   */\n\n\n  TreeView.prototype.enableNodes = function (nodes) {\n    if (!isNOU(nodes)) {\n      this.doEnableAction(nodes);\n    }\n  };\n  /**\n   * Ensures visibility of the TreeView node by using node ID or node element.\n   * When many TreeView nodes are present and we need to find a particular node, `ensureVisible` property\n   * helps bring the node to visibility by expanding the TreeView and scrolling to the specific node.\n   * @param  {string | Element} node - Specifies ID of TreeView node/TreeView nodes.\n   */\n\n\n  TreeView.prototype.ensureVisible = function (node) {\n    var liEle = this.getElement(node);\n\n    if (isNOU(liEle)) {\n      return;\n    }\n\n    var parents = this.parents(liEle, '.' + LISTITEM);\n    this.expandAll(parents);\n    setTimeout(function () {\n      liEle.scrollIntoView(true);\n    }, 450);\n  };\n  /**\n   * Expands all the collapsed TreeView nodes. You can expand the specific nodes by passing the array of collapsed nodes\n   * as argument to this method. You can also expand all the collapsed nodes by excluding the hidden nodes by setting\n   * **excludeHiddenNodes** to true to this method. To expand a specific level of nodes, set **level** as argument to expandAll method.\n   * @param  {string[] | Element[]} nodes - Specifies the array of TreeView nodes ID/array of TreeView nodes.\n   * @param  {number} level - TreeView nodes will expand up to the given level.\n   * @param  {boolean} excludeHiddenNodes - Whether or not to exclude hidden nodes when expanding all nodes.\n   */\n\n\n  TreeView.prototype.expandAll = function (nodes, level, excludeHiddenNodes) {\n    if (!isNOU(nodes)) {\n      this.doGivenAction(nodes, EXPANDABLE, true);\n    } else {\n      if (level > 0) {\n        this.expandByLevel(select('.' + PARENTITEM, this.element), level, excludeHiddenNodes);\n      } else {\n        this.expandAllNodes(excludeHiddenNodes);\n      }\n    }\n  };\n  /**\n   * Gets all the checked nodes including child, whether it is loaded or not.\n   */\n\n\n  TreeView.prototype.getAllCheckedNodes = function () {\n    var checkNodes = this.checkedNodes;\n    return checkNodes;\n  };\n  /**\n  * Gets all the disabled nodes including child, whether it is loaded or not.\n  */\n\n\n  TreeView.prototype.getDisabledNodes = function () {\n    var disabledNodes = this.disableNode;\n    return disabledNodes;\n  };\n  /**\n   * Get the node's data such as id, text, parentID, selected, isChecked, and expanded by passing the node element or it's ID.\n   * @param  {string | Element} node - Specifies ID of TreeView node/TreeView node.\n   * @BlazorType NodeData\n   */\n\n\n  TreeView.prototype.getNode = function (node) {\n    var ele = this.getElement(node);\n    return this.getNodeData(ele, true);\n  };\n  /**\n   * To get the updated data source of TreeView after performing some operation like drag and drop, node editing,\n   * node selecting/unSelecting, node expanding/collapsing, node checking/unChecking, adding and removing node.\n   * * If you pass the ID of TreeView node as arguments for this method then it will return the updated data source\n   * of the corresponding node otherwise it will return the entire updated data source of TreeView.\n   * * The updated data source also contains custom attributes if you specified in data source.\n   * @param  {string | Element} node - Specifies ID of TreeView node/TreeView node.\n   * @isGenericType true\n   */\n\n\n  TreeView.prototype.getTreeData = function (node) {\n    var id = this.getId(node);\n    this.updatePersistProp();\n\n    if (isNOU(id)) {\n      return this.treeData;\n    } else {\n      var data = this.getNodeObject(id);\n      return isNOU(data) ? [] : [data];\n    }\n  };\n  /**\n   * Moves the collection of nodes within the same TreeView based on target or its index position.\n   * @param  {string[] | Element[]} sourceNodes - Specifies the array of TreeView nodes ID/array of TreeView node.\n   * @param  {string | Element} target - Specifies ID of TreeView node/TreeView node as target element.\n   * @param  {number} index - Specifies the index to place the moved nodes in the target element.\n   * @param { boolean } preventTargetExpand - If set to true, the target parent node will be prevented from auto expanding.\n   */\n\n\n  TreeView.prototype.moveNodes = function (sourceNodes, target, index, preventTargetExpand) {\n    var dropLi = this.getElement(target);\n\n    if (isNOU(dropLi)) {\n      return;\n    }\n\n    for (var i = 0; i < sourceNodes.length; i++) {\n      var dragLi = this.getElement(sourceNodes[i]);\n\n      if (isNOU(dragLi) || dropLi.isSameNode(dragLi) || this.isDescendant(dragLi, dropLi)) {\n        continue;\n      }\n\n      this.preventExpand = preventTargetExpand;\n      this.dropAsChildNode(dragLi, dropLi, this, index);\n    }\n\n    if (this.fields.dataSource instanceof DataManager === false) {\n      this.preventExpand = false;\n    }\n\n    this.triggerEvent();\n  };\n  /**\n   * Refreshes a particular node of the TreeView.\n   * @param  {string | Element} target - Specifies the ID of TreeView node or TreeView node as target element.\n   * @param  {{ [key: string]: Object }[]} newData - Specifies the new data of TreeView node.\n   */\n\n\n  TreeView.prototype.refreshNode = function (target, newData) {\n    if (isNOU(target) || isNOU(newData)) {\n      return;\n    }\n\n    var id;\n    var isRefreshChild = false;\n\n    if (this.dataType == 1 && newData.length > 1) {\n      isRefreshChild = true;\n    } else if (this.dataType == 2 && newData.length === 1) {\n      var updatedChildValue = getValue(this.fields.child.toString(), newData[0]);\n\n      if (!isNOU(updatedChildValue)) {\n        isRefreshChild = true;\n      }\n    }\n\n    var liEle = this.getElement(target);\n    id = liEle ? liEle.getAttribute('data-uid') : target ? target.toString() : null;\n    this.refreshData = this.getNodeObject(id);\n    newData = JSON.parse(JSON.stringify(newData));\n    /* eslint-disable */\n\n    var newNodeData;\n    var parentData;\n\n    if (this.dataType == 1 && isRefreshChild) {\n      for (var k = 0; k < newData.length; k++) {\n        if (isNOU(newData[k][this.fields.parentID])) {\n          parentData = newData[k];\n          newData.splice(k, 1);\n          break;\n        }\n      }\n\n      newNodeData = extend({}, this.refreshData, parentData);\n    } else {\n      newNodeData = extend({}, this.refreshData, newData[0]);\n    }\n\n    if (isNOU(liEle)) {\n      this.updatePosition(id, newNodeData, isRefreshChild, newData);\n      return;\n    }\n\n    this.isRefreshed = true;\n    var level = parseFloat(liEle.getAttribute('aria-level'));\n    var newliEle = ListBase.createListItemFromJson(this.createElement, [newNodeData], this.listBaseOption, level);\n    var ul = select('.' + PARENTITEM, liEle);\n    var childItems = getValue(this.fields.child.toString(), newNodeData);\n\n    if (isRefreshChild && ul || isRefreshChild && !isNOU(childItems)) {\n      var parentEle = liEle.parentElement;\n      var index = Array.prototype.indexOf.call(parentEle.childNodes, liEle);\n      remove(liEle);\n      parentEle.insertBefore(newliEle[0], parentEle.childNodes[index]);\n      this.updatePosition(id, newNodeData, isRefreshChild, newData);\n\n      if (isRefreshChild && ul) {\n        this.expandAll([id]);\n      }\n    } else {\n      var txtEle = select('.' + TEXTWRAP, liEle);\n      var newTextEle = select('.' + TEXTWRAP, newliEle[0]);\n      var icon = select('div.' + ICON, txtEle);\n      var newIcon = select('div.' + ICON, newTextEle);\n\n      if (icon && newIcon) {\n        if (newIcon.classList.contains(EXPANDABLE) && icon.classList.contains(COLLAPSIBLE)) {\n          removeClass([newIcon], EXPANDABLE);\n          addClass([newIcon], COLLAPSIBLE);\n        } else if (newIcon.classList.contains(COLLAPSIBLE) && icon.classList.contains(EXPANDABLE)) {\n          removeClass([newIcon], COLLAPSIBLE);\n          addClass([newIcon], EXPANDABLE);\n        } else if (icon.classList.contains('interaction')) {\n          addClass([newIcon], 'interaction');\n        }\n      }\n\n      remove(txtEle);\n      var fullEle = select('.' + FULLROW, liEle);\n      fullEle.parentNode.insertBefore(newTextEle, fullEle.nextSibling);\n      this.updatePosition(id, newNodeData, isRefreshChild, newData);\n    }\n\n    liEle = this.getElement(target);\n\n    if (newNodeData[this.fields.tooltip]) {\n      liEle.setAttribute(\"title\", newNodeData[this.fields.tooltip]);\n    }\n\n    if (newNodeData.hasOwnProperty(this.fields.htmlAttributes) && newNodeData[this.fields.htmlAttributes]) {\n      var attr = {};\n      merge(attr, newNodeData[this.fields.htmlAttributes]);\n\n      if (attr.class) {\n        addClass([liEle], attr.class.split(' '));\n        delete attr.class;\n      } else {\n        attributes(liEle, attr);\n      }\n    }\n\n    if (this.selectedNodes.indexOf(id) !== -1) {\n      liEle.setAttribute('aria-selected', 'true');\n      addClass([liEle], ACTIVE);\n    }\n\n    this.isRefreshed = false;\n    this.triggerEvent();\n  };\n  /**\n   * Removes the collection of TreeView nodes by passing the array of node details as argument to this method.\n   * @param  {string[] | Element[]} nodes - Specifies the array of TreeView nodes ID/array of TreeView node.\n   */\n\n\n  TreeView.prototype.removeNodes = function (nodes) {\n    if (!isNOU(nodes)) {\n      if (this.fields.dataSource instanceof DataManager && !this.isOffline && this.fields.dataSource.adaptorName !== 'BlazorAdaptor') {\n        this.crudOperation('delete', nodes);\n      } else {\n        this.deleteSuccess(nodes);\n      }\n    }\n  };\n  /**\n   * Replaces the text of the TreeView node with the given text.\n   * @param  {string | Element} target - Specifies ID of TreeView node/TreeView node as target element.\n   * @param  {string} newText - Specifies the new text of TreeView node.\n   */\n\n\n  TreeView.prototype.updateNode = function (target, newText) {\n    var _this = this;\n\n    if (isNOU(target) || isNOU(newText) || !this.allowEditing) {\n      return;\n    }\n\n    var liEle = this.getElement(target);\n\n    if (isNOU(liEle)) {\n      return;\n    }\n\n    var txtEle = select('.' + LISTTEXT, liEle);\n    this.updateOldText(liEle);\n    var eventArgs = this.getEditEvent(liEle, null, null);\n    this.trigger('nodeEditing', eventArgs, function (observedArgs) {\n      if (!observedArgs.cancel) {\n        if (_this.fields.dataSource instanceof DataManager && !_this.isOffline && _this.fields.dataSource.adaptorName !== 'BlazorAdaptor') {\n          _this.crudOperation('update', null, target, newText, null, null, false);\n        } else {\n          _this.appendNewText(liEle, txtEle, newText, false);\n        }\n      }\n    });\n  };\n  /**\n   * Unchecks all the checked nodes. You can also uncheck the specific nodes by passing array of checked nodes\n   * as argument to this method.\n   * @param  {string[] | Element[]} nodes - Specifies the array of TreeView nodes ID/array of TreeView node.\n   */\n\n\n  TreeView.prototype.uncheckAll = function (nodes) {\n    if (this.showCheckBox) {\n      this.doCheckBoxAction(nodes, false);\n    }\n  };\n\n  var TreeView_1;\n\n  __decorate([Property(false)], TreeView.prototype, \"allowDragAndDrop\", void 0);\n\n  __decorate([Property(false)], TreeView.prototype, \"allowEditing\", void 0);\n\n  __decorate([Property(false)], TreeView.prototype, \"allowMultiSelection\", void 0);\n\n  __decorate([Complex({}, NodeAnimationSettings)], TreeView.prototype, \"animation\", void 0);\n\n  __decorate([Property()], TreeView.prototype, \"checkedNodes\", void 0);\n\n  __decorate([Property('')], TreeView.prototype, \"cssClass\", void 0);\n\n  __decorate([Property(false)], TreeView.prototype, \"disabled\", void 0);\n\n  __decorate([Property(null)], TreeView.prototype, \"dragArea\", void 0);\n\n  __decorate([Property(false)], TreeView.prototype, \"enableHtmlSanitizer\", void 0);\n\n  __decorate([Property(false)], TreeView.prototype, \"enablePersistence\", void 0);\n\n  __decorate([Property()], TreeView.prototype, \"expandedNodes\", void 0);\n\n  __decorate([Property('Auto')], TreeView.prototype, \"expandOn\", void 0);\n\n  __decorate([Complex({}, FieldsSettings)], TreeView.prototype, \"fields\", void 0);\n\n  __decorate([Property(true)], TreeView.prototype, \"fullRowSelect\", void 0);\n\n  __decorate([Property(true)], TreeView.prototype, \"loadOnDemand\", void 0);\n\n  __decorate([Property()], TreeView.prototype, \"locale\", void 0);\n\n  __decorate([Property()], TreeView.prototype, \"nodeTemplate\", void 0);\n\n  __decorate([Property()], TreeView.prototype, \"selectedNodes\", void 0);\n\n  __decorate([Property('None')], TreeView.prototype, \"sortOrder\", void 0);\n\n  __decorate([Property(false)], TreeView.prototype, \"showCheckBox\", void 0);\n\n  __decorate([Property(true)], TreeView.prototype, \"autoCheck\", void 0);\n\n  __decorate([Property(false)], TreeView.prototype, \"fullRowNavigable\", void 0);\n\n  __decorate([Event()], TreeView.prototype, \"actionFailure\", void 0);\n\n  __decorate([Event()], TreeView.prototype, \"created\", void 0);\n\n  __decorate([Event()], TreeView.prototype, \"dataBound\", void 0);\n\n  __decorate([Event()], TreeView.prototype, \"dataSourceChanged\", void 0);\n\n  __decorate([Event()], TreeView.prototype, \"drawNode\", void 0);\n\n  __decorate([Event()], TreeView.prototype, \"destroyed\", void 0);\n\n  __decorate([Event()], TreeView.prototype, \"keyPress\", void 0);\n\n  __decorate([Event()], TreeView.prototype, \"nodeChecked\", void 0);\n\n  __decorate([Event()], TreeView.prototype, \"nodeChecking\", void 0);\n\n  __decorate([Event()], TreeView.prototype, \"nodeClicked\", void 0);\n\n  __decorate([Event()], TreeView.prototype, \"nodeCollapsed\", void 0);\n\n  __decorate([Event()], TreeView.prototype, \"nodeCollapsing\", void 0);\n\n  __decorate([Event()], TreeView.prototype, \"nodeDragging\", void 0);\n\n  __decorate([Event()], TreeView.prototype, \"nodeDragStart\", void 0);\n\n  __decorate([Event()], TreeView.prototype, \"nodeDragStop\", void 0);\n\n  __decorate([Event()], TreeView.prototype, \"nodeDropped\", void 0);\n\n  __decorate([Event()], TreeView.prototype, \"nodeEdited\", void 0);\n\n  __decorate([Event()], TreeView.prototype, \"nodeEditing\", void 0);\n\n  __decorate([Event()], TreeView.prototype, \"nodeExpanded\", void 0);\n\n  __decorate([Event()], TreeView.prototype, \"nodeExpanding\", void 0);\n\n  __decorate([Event()], TreeView.prototype, \"nodeSelected\", void 0);\n\n  __decorate([Event()], TreeView.prototype, \"nodeSelecting\", void 0);\n\n  TreeView = TreeView_1 = __decorate([NotifyPropertyChanges], TreeView);\n  return TreeView;\n}(Component);\n\nexport { TreeView };"],"sourceRoot":""}