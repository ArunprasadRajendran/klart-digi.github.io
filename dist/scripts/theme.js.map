{"version":3,"sources":["utils.js","detector.js","animation.js","bootstrap-navbar.js","theme.js"],"names":["docReady","fn","document","readyState","addEventListener","setTimeout","resize","window","isIterableArray","array","Array","isArray","length","camelize","str","text","replace","_","c","toUpperCase","substr","toLowerCase","getData","el","data","JSON","parse","dataset","e","hexToRgb","hexValue","hex","indexOf","substring","shorthandRegex","result","exec","m","r","g","b","parseInt","rgbaColor","color","alpha","colors","primary","secondary","success","info","warning","danger","light","dark","grays","white","black","hasClass","className","classList","value","includes","addClass","add","getOffset","rect","getBoundingClientRect","scrollLeft","pageXOffset","documentElement","scrollTop","pageYOffset","top","left","isScrolledIntoView","offsetTop","offsetLeft","width","offsetWidth","height","offsetHeight","offsetParent","all","innerHeight","innerWidth","partial","breakpoints","xs","sm","md","lg","xl","xxl","getBreakpoint","classes","breakpoint","split","filter","cls","pop","setCookie","name","expire","expires","Date","setTime","getTime","cookie","toUTCString","getCookie","keyValue","match","settings","tinymce","theme","chart","borderColor","newChart","config","ctx","getContext","Chart","getItemFromStore","key","defaultValue","store","localStorage","getItem","setItemToStore","payload","setItem","getStoreSpace","parseFloat","escape","encodeURIComponent","stringify","toFixed","utils","detectorInit","is","html","querySelector","opera","mobile","firefox","safari","ios","iphone","ipad","ie","edge","chrome","mac","windows","navigator","userAgent","$","click","removeClass","href","currentTarget","getAttribute","newPosition","offset","stop","animate","preventDefault","animateScroll","line","speed","children","setInterval","scrollWidth","Math","round","currentScrollLeft","each","index","element","append","innerHTML","scroll","$window","windowHeight","windowTopPosition","windowBottomPosition","$element","elementHeight","outerHeight","elementTopPosition","elementBottomPosition","centerElement","ticketElement","inventoryElement","salesElement","employeeElement","supportElement","secureElement","parkingElement","quickSetupElement","ticketPosition","inventoryPosition","salesPosition","employeePosition","supportPosition","securePosition","parkingPosition","quickSetupPosition","animateTile","css","animateTileReset","position","diffX","getBBox","diffY","animateElements","logo","animateElementsReset","toggleSVG","navbarInit","Selector","NAVBAR","NAVBAR_COLLAPSE","NAVBAR_TOGGLER","ClassNames","COLLAPSED","Events","SCROLL","SHOW_BS_COLLAPSE","HIDE_BS_COLLAPSE","HIDDEN_BS_COLLAPSE","DataKey","NAVBAR_ON_SCROLL","navbar","navbarCollapse","allColors","colorName","Object","keys","bgClassName","shadowName","colorRgb","getComputedStyle","backgroundImage","transition","style","backgroundColor","remove","breakPoint"],"mappings":"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","file":"theme.js","sourcesContent":["/* -------------------------------------------------------------------------- */\r\n/*                                    Utils                                   */\r\n/* -------------------------------------------------------------------------- */\r\nconst docReady = (fn) => {\r\n  // see if DOM is already available\r\n  if (document.readyState === 'loading') {\r\n    document.addEventListener('DOMContentLoaded', fn);\r\n  } else {\r\n    setTimeout(fn, 1);\r\n  }\r\n};\r\n\r\nconst resize = (fn) => window.addEventListener('resize', fn);\r\n\r\nconst isIterableArray = (array) => Array.isArray(array) && !!array.length;\r\n\r\nconst camelize = (str) => {\r\n  const text = str.replace(/[-_\\s.]+(.)?/g, (_, c) => (c ? c.toUpperCase() : ''));\r\n  return `${text.substr(0, 1).toLowerCase()}${text.substr(1)}`;\r\n};\r\n\r\nconst getData = (el, data) => {\r\n  try {\r\n    return JSON.parse(el.dataset[camelize(data)]);\r\n  } catch (e) {\r\n    return el.dataset[camelize(data)];\r\n  }\r\n};\r\n\r\n/* ----------------------------- Colors function ---------------------------- */\r\n\r\nconst hexToRgb = (hexValue) => {\r\n  let hex;\r\n  hexValue.indexOf('#') === 0 ? (hex = hexValue.substring(1)) : (hex = hexValue);\r\n  // Expand shorthand form (e.g. \"03F\") to full form (e.g. \"0033FF\")\r\n  const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\r\n  const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex.replace(shorthandRegex, (m, r, g, b) => r + r + g + g + b + b));\r\n  return result ? [parseInt(result[1], 16), parseInt(result[2], 16), parseInt(result[3], 16)] : null;\r\n};\r\n\r\nconst rgbaColor = (color = '#fff', alpha = 0.5) => `rgba(${hexToRgb(color)}, ${alpha})`;\r\n\r\n/* --------------------------------- Colors --------------------------------- */\r\n\r\nconst colors = {\r\n  primary: '#2c7be5',\r\n  secondary: '#748194',\r\n  success: '#00d27a',\r\n  info: '#27bcfd',\r\n  warning: '#f5803e',\r\n  danger: '#e63757',\r\n  light: '#f9fafd',\r\n  dark: '#000',\r\n};\r\n\r\nconst grays = {\r\n  white: '#fff',\r\n  100: '#f9fafd',\r\n  200: '#edf2f9',\r\n  300: '#d8e2ef',\r\n  400: '#b6c1d2',\r\n  500: '#9da9bb',\r\n  600: '#748194',\r\n  700: '#5e6e82',\r\n  800: '#4d5969',\r\n  900: '#344050',\r\n  1000: '#232e3c',\r\n  1100: '#0b1727',\r\n  black: '#000',\r\n};\r\n\r\nconst hasClass = (el, className) => {\r\n  !el && false;\r\n  return el.classList.value.includes(className);\r\n};\r\n\r\nconst addClass = (el, className) => {\r\n  el.classList.add(className);\r\n};\r\n\r\nconst getOffset = (el) => {\r\n  const rect = el.getBoundingClientRect();\r\n  const scrollLeft = window.pageXOffset || document.documentElement.scrollLeft;\r\n  const scrollTop = window.pageYOffset || document.documentElement.scrollTop;\r\n  return { top: rect.top + scrollTop, left: rect.left + scrollLeft };\r\n};\r\n\r\nconst isScrolledIntoView = (el) => {\r\n  let top = el.offsetTop;\r\n  let left = el.offsetLeft;\r\n  const width = el.offsetWidth;\r\n  const height = el.offsetHeight;\r\n\r\n  while (el.offsetParent) {\r\n    // eslint-disable-next-line no-param-reassign\r\n    el = el.offsetParent;\r\n    top += el.offsetTop;\r\n    left += el.offsetLeft;\r\n  }\r\n\r\n  return {\r\n    all:\r\n      top >= window.pageYOffset\r\n      && left >= window.pageXOffset\r\n      && top + height <= window.pageYOffset + window.innerHeight\r\n      && left + width <= window.pageXOffset + window.innerWidth,\r\n    partial:\r\n      top < window.pageYOffset + window.innerHeight\r\n      && left < window.pageXOffset + window.innerWidth\r\n      && top + height > window.pageYOffset\r\n      && left + width > window.pageXOffset,\r\n  };\r\n};\r\n\r\nconst breakpoints = {\r\n  xs: 0,\r\n  sm: 576,\r\n  md: 768,\r\n  lg: 992,\r\n  xl: 1200,\r\n  xxl: 1540,\r\n};\r\n\r\nconst getBreakpoint = (el) => {\r\n  const classes = el && el.classList.value;\r\n  let breakpoint;\r\n  if (classes) {\r\n    breakpoint = breakpoints[\r\n      classes\r\n        .split(' ')\r\n        .filter((cls) => cls.includes('navbar-expand-'))\r\n        .pop()\r\n        .split('-')\r\n        .pop()\r\n    ];\r\n  }\r\n  return breakpoint;\r\n};\r\n\r\n/* --------------------------------- Cookie --------------------------------- */\r\n\r\nconst setCookie = (name, value, expire) => {\r\n  const expires = new Date();\r\n  expires.setTime(expires.getTime() + expire);\r\n  document.cookie = `${name}=${value};expires=${expires.toUTCString()}`;\r\n};\r\n\r\nconst getCookie = (name) => {\r\n  const keyValue = document.cookie.match(`(^|;) ?${name}=([^;]*)(;|$)`);\r\n  return keyValue ? keyValue[2] : keyValue;\r\n};\r\n\r\nconst settings = {\r\n  tinymce: { theme: 'oxide' },\r\n  chart: { borderColor: 'rgba(255, 255, 255, 0.8)' }\r\n};\r\n\r\n/* -------------------------- Chart Initialization -------------------------- */\r\n\r\nconst newChart = (chart, config) => {\r\n  const ctx = chart.getContext('2d');\r\n  return new window.Chart(ctx, config);\r\n};\r\n\r\n/* ---------------------------------- Store --------------------------------- */\r\n\r\nconst getItemFromStore = (key, defaultValue, store = localStorage) => {\r\n  try {\r\n    return JSON.parse(store.getItem(key)) || defaultValue;\r\n  } catch {\r\n    return store.getItem(key) || defaultValue;\r\n  }\r\n};\r\n\r\nconst setItemToStore = (key, payload, store = localStorage) =>\r\n  store.setItem(key, payload);\r\nconst getStoreSpace = (store = localStorage) =>\r\n  parseFloat((escape(encodeURIComponent(JSON.stringify(store))).length / (1024 * 1024)).toFixed(2));\r\n\r\nconst utils = {\r\n  docReady,\r\n  resize,\r\n  isIterableArray,\r\n  camelize,\r\n  getData,\r\n  hasClass,\r\n  addClass,\r\n  hexToRgb,\r\n  rgbaColor,\r\n  colors,\r\n  grays,\r\n  getOffset,\r\n  isScrolledIntoView,\r\n  getBreakpoint,\r\n  setCookie,\r\n  getCookie,\r\n  newChart,\r\n  settings,\r\n  getItemFromStore,\r\n  setItemToStore,\r\n  getStoreSpace\r\n};\r\n\r\nexport default utils;\r\n","import { addClass } from './utils';\r\n/* -------------------------------------------------------------------------- */\r\n/*                                  Detector                                  */\r\n/* -------------------------------------------------------------------------- */\r\n\r\nconst detectorInit = () => {\r\n  const { is } = window;\r\n  const html = document.querySelector('html');\r\n  is.opera() && addClass(html, 'opera');\r\n  is.mobile() && addClass(html, 'mobile');\r\n  is.firefox() && addClass(html, 'firefox');\r\n  is.safari() && addClass(html, 'safari');\r\n  is.ios() && addClass(html, 'ios');\r\n  is.iphone() && addClass(html, 'iphone');\r\n  is.ipad() && addClass(html, 'ipad');\r\n  is.ie() && addClass(html, 'ie');\r\n  is.edge() && addClass(html, 'edge');\r\n  is.chrome() && addClass(html, 'chrome');\r\n  is.mac() && addClass(html, 'osx');\r\n  is.windows() && addClass(html, 'windows');\r\n  navigator.userAgent.match('CriOS') && addClass(html, 'chrome');\r\n\r\n};\r\n\r\nexport default detectorInit;\r\n","/** Animation scripts */\r\n$(() => {\r\n  /** Scroll to sections */\r\n  $('#header .navbar-nav li a, #home a').click((e) => {\r\n    $('#header .navbar-nav li a.active').removeClass('active');\r\n    const href = e.currentTarget.getAttribute('href');\r\n    $(`#header .navbar-nav li a[href=\"${href}\"]`).addClass('active');\r\n    const newPosition = $(href).offset();\r\n    $('html, body').stop().animate({ scrollTop: newPosition.top - 50 }, 500);\r\n    e.preventDefault();\r\n  });\r\n\r\n  /** Client auto scroll */\r\n  const animateScroll = (line, speed) => {\r\n    const children = line.children();\r\n    setInterval(() => {\r\n      const scrollWidth = Math.round(line[0].scrollWidth);\r\n      const scrollLeft = line.scrollLeft();\r\n      const currentScrollLeft = Math.round(scrollLeft + Math.round(line.width()));\r\n      if (currentScrollLeft > scrollWidth - 1) {\r\n        children.each((index, element) => { line.append(`<p>${element.innerHTML}</p>`); });\r\n      }\r\n      line.scrollLeft(scrollLeft + 1);\r\n    }, speed);\r\n  };\r\n  animateScroll($('#clients .client-scroll:nth-child(1)'), 30);\r\n  animateScroll($('#clients .client-scroll:nth-child(2)'), 15);\r\n\r\n  /** Product SVG Animation */\r\n  $(window).scroll(() => {\r\n    const $window = $(window);\r\n    const windowHeight = $window.height();\r\n    const windowTopPosition = $window.scrollTop();\r\n    const windowBottomPosition = windowTopPosition + windowHeight;\r\n    const $element = $('#product');\r\n    const elementHeight = $element.outerHeight();\r\n    const elementTopPosition = $element.offset().top;\r\n    const elementBottomPosition = elementTopPosition + elementHeight;\r\n    if (elementBottomPosition >= windowTopPosition && elementTopPosition <= windowBottomPosition) {\r\n      setTimeout(() => { $('#product svg').addClass('active'); }, 500);\r\n    } else {\r\n      $('#product svg').removeClass('active');\r\n    }\r\n  });\r\n\r\n  /** SVG Animation */\r\n\r\n  // Get element instances\r\n  let centerElement;\r\n  let ticketElement;\r\n  let inventoryElement;\r\n  let salesElement;\r\n  let employeeElement;\r\n  let supportElement;\r\n  let secureElement;\r\n  let parkingElement;\r\n  let quickSetupElement;\r\n\r\n  //  Get X and Y of elements\r\n  let ticketPosition;\r\n  let inventoryPosition;\r\n  let salesPosition;\r\n  let employeePosition;\r\n  let supportPosition;\r\n  let securePosition;\r\n  let parkingPosition;\r\n  let quickSetupPosition;\r\n\r\n  const animateTile = (element) => {\r\n    element.css('transition', '0.5s all ease-out');\r\n    element.css('transform', 'translate(0px, 0px)');\r\n    element.css('transform-origin', 'center');\r\n  };\r\n\r\n  const animateTileReset = (element, position) => {\r\n    const diffX = centerElement.width() / 2 + centerElement.offset().left - position.left - element[0].getBBox().width / 2;\r\n    const diffY = centerElement.height() / 2 + centerElement.offset().top - position.top - element[0].getBBox().height / 2;\r\n    element.css('transition', '0.5s all ease-out');\r\n    element.css('transform', `translate(${diffX}px, ${diffY}px)`);\r\n    element.css('transform-origin', 'center');\r\n    element.css('z-index', '-10');\r\n  };\r\n\r\n  const animateElements = () => {\r\n    const offset = 100;\r\n    const logo = $('#reason .svg-wrapper svg #logo');\r\n    setTimeout(() => { logo.css('animation', '0.4s ease-in spin forwards'); }, offset + 0);\r\n    setTimeout(() => { animateTile(ticketElement, ticketPosition); }, offset + 0);\r\n    setTimeout(() => { animateTile(inventoryElement, inventoryPosition); }, offset + 50);\r\n    setTimeout(() => { animateTile(salesElement, salesPosition); }, offset + 100);\r\n    setTimeout(() => { animateTile(employeeElement, employeePosition); }, offset + 150);\r\n    setTimeout(() => { animateTile(supportElement, supportPosition); }, offset + 200);\r\n    setTimeout(() => { animateTile(secureElement, securePosition); }, offset + 250);\r\n    setTimeout(() => { animateTile(parkingElement, parkingPosition); }, offset + 300);\r\n    setTimeout(() => { animateTile(quickSetupElement, quickSetupPosition); }, offset + 350);\r\n  };\r\n\r\n  const animateElementsReset = () => {\r\n    const logo = $('#features .svg-wrapper svg #logo');\r\n    setTimeout(() => { logo.css('animation', 'none'); }, 0);\r\n    setTimeout(() => { animateTileReset(ticketElement, ticketPosition); }, 0);\r\n    setTimeout(() => { animateTileReset(inventoryElement, inventoryPosition); }, 50);\r\n    setTimeout(() => { animateTileReset(salesElement, salesPosition); }, 100);\r\n    setTimeout(() => { animateTileReset(employeeElement, employeePosition); }, 150);\r\n    setTimeout(() => { animateTileReset(supportElement, supportPosition); }, 200);\r\n    setTimeout(() => { animateTileReset(secureElement, securePosition); }, 250);\r\n    setTimeout(() => { animateTileReset(parkingElement, parkingPosition); }, 300);\r\n    setTimeout(() => { animateTileReset(quickSetupElement, quickSetupPosition); }, 350);\r\n  };\r\n\r\n  const toggleSVG = () => {\r\n    centerElement = $('#features .svg-wrapper');\r\n    ticketElement = $('#features .svg-wrapper svg #ticket');\r\n    inventoryElement = $('#features .svg-wrapper svg #inventory');\r\n    salesElement = $('#features .svg-wrapper svg #sales');\r\n    employeeElement = $('#features .svg-wrapper svg #employee');\r\n    supportElement = $('#features .svg-wrapper svg #support');\r\n    secureElement = $('#features .svg-wrapper svg #secure');\r\n    parkingElement = $('#features .svg-wrapper svg #parking');\r\n    quickSetupElement = $('#features .svg-wrapper svg #quick-setup');\r\n\r\n    ticketPosition = ticketElement.offset();\r\n    inventoryPosition = inventoryElement.offset();\r\n    salesPosition = salesElement.offset();\r\n    employeePosition = employeeElement.offset();\r\n    supportPosition = supportElement.offset();\r\n    securePosition = secureElement.offset();\r\n    parkingPosition = parkingElement.offset();\r\n    quickSetupPosition = quickSetupElement.offset();\r\n  };\r\n\r\n  toggleSVG();\r\n\r\n  $(window).resize(() => {\r\n    toggleSVG();\r\n    animateElementsReset();\r\n  });\r\n\r\n  $(window).scroll(() => {\r\n    const $window = $(window);\r\n    const windowHeight = $window.height();\r\n    const windowTopPosition = $window.scrollTop();\r\n    const windowBottomPosition = windowTopPosition + windowHeight;\r\n    const $element = $('#features');\r\n    const elementHeight = $element.outerHeight();\r\n    const elementTopPosition = $element.offset().top;\r\n    const elementBottomPosition = elementTopPosition + elementHeight;\r\n    if (elementBottomPosition >= windowTopPosition && elementTopPosition <= windowBottomPosition) {\r\n      setTimeout(() => { animateElements(); }, 500);\r\n    } else {\r\n      setTimeout(() => { animateElementsReset(); }, 0);\r\n    }\r\n  });\r\n\r\n});\r\n","import utils from './utils';\r\n/*-----------------------------------------------\r\n|   Top navigation opacity on scroll\r\n-----------------------------------------------*/\r\nconst navbarInit = () => {\r\n  const Selector = {\r\n    NAVBAR: '[data-navbar-on-scroll]',\r\n    NAVBAR_COLLAPSE: '.navbar-collapse',\r\n    NAVBAR_TOGGLER: '.navbar-toggler'\r\n  };\r\n  const ClassNames = { COLLAPSED: 'collapsed' };\r\n  const Events = {\r\n    SCROLL: 'scroll',\r\n    SHOW_BS_COLLAPSE: 'show.bs.collapse',\r\n    HIDE_BS_COLLAPSE: 'hide.bs.collapse',\r\n    HIDDEN_BS_COLLAPSE: 'hidden.bs.collapse'\r\n  };\r\n  const DataKey = { NAVBAR_ON_SCROLL: 'navbar-light-on-scroll' };\r\n  const navbar = document.querySelector(Selector.NAVBAR);\r\n\r\n  if (navbar) {\r\n    const windowHeight = window.innerHeight;\r\n    const html = document.documentElement;\r\n    const navbarCollapse = navbar.querySelector(Selector.NAVBAR_COLLAPSE);\r\n    const allColors = { ...utils.colors, ...utils.grays };\r\n\r\n    const name = utils.getData(navbar, DataKey.NAVBAR_ON_SCROLL);\r\n    const colorName = Object.keys(allColors).includes(name) ? name : 'white';\r\n    const color = allColors[colorName];\r\n    const bgClassName = `bg-${colorName}`;\r\n    const shadowName = 'shadow-transition';\r\n    const colorRgb = utils.hexToRgb(color);\r\n    const { backgroundImage } = window.getComputedStyle(navbar);\r\n    const transition = 'background-color 0.35s ease';\r\n    navbar.style.backgroundImage = 'none';\r\n\r\n    // Change navbar background color on scroll\r\n    window.addEventListener(Events.SCROLL, () => {\r\n      const { scrollTop } = html;\r\n      let alpha = (scrollTop / windowHeight) * 5;\r\n      alpha >= 1 && (alpha = 1);\r\n      navbar.style.backgroundColor = `rgba(${colorRgb[0]}, ${colorRgb[1]}, ${colorRgb[2]}, ${alpha})`;\r\n      navbar.style.backgroundImage = (alpha > 0 || utils.hasClass(navbarCollapse, 'show')) ? backgroundImage : 'none';\r\n      (alpha > 0 || utils.hasClass(navbarCollapse, 'show')) ? navbar.classList.add(shadowName) : navbar.classList.remove(shadowName);\r\n    });\r\n\r\n    // Toggle bg class on window resize\r\n    utils.resize(() => {\r\n      const breakPoint = utils.getBreakpoint(navbar);\r\n      if (window.innerWidth > breakPoint) {\r\n        navbar.style.backgroundImage = html.scrollTop ? backgroundImage : 'none';\r\n        navbar.style.transition = 'none';\r\n      } else if (!utils.hasClass(navbar.querySelector(Selector.NAVBAR_TOGGLER), ClassNames.COLLAPSED)) {\r\n        navbar.classList.add(bgClassName);\r\n        navbar.classList.add(shadowName);\r\n        navbar.style.backgroundImage = backgroundImage;\r\n      }\r\n      if (window.innerWidth <= breakPoint) {\r\n        navbar.style.transition = utils.hasClass(navbarCollapse, 'show') ? transition : 'none';\r\n      }\r\n    });\r\n\r\n    navbarCollapse.addEventListener(Events.SHOW_BS_COLLAPSE, () => {\r\n      navbar.classList.add(bgClassName);\r\n      navbar.classList.add(shadowName);\r\n      navbar.style.backgroundImage = backgroundImage;\r\n      navbar.style.transition = transition;\r\n    });\r\n\r\n    navbarCollapse.addEventListener(Events.HIDE_BS_COLLAPSE, () => {\r\n      navbar.classList.remove(bgClassName);\r\n      navbar.classList.remove(shadowName);\r\n      !html.scrollTop && (navbar.style.backgroundImage = 'none');\r\n    });\r\n\r\n    navbarCollapse.addEventListener(Events.HIDDEN_BS_COLLAPSE, () => {\r\n      navbar.style.transition = 'none';\r\n    });\r\n  }\r\n};\r\n\r\nexport default navbarInit;\r\n","import { docReady } from './utils';\r\nimport navbarInit from './bootstrap-navbar';\r\nimport detectorInit from './detector';\r\n\r\n// /* -------------------------------------------------------------------------- */\r\n// /*                            Theme Initialization                            */\r\n// /* -------------------------------------------------------------------------- */\r\n\r\ndocReady(navbarInit);\r\ndocReady(detectorInit);\r\n"]}