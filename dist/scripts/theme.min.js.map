{"version":3,"sources":["utils.js","detector.js","animation.js","bootstrap-navbar.js","theme.js"],"names":["docReady","fn","document","readyState","addEventListener","setTimeout","resize","window","isIterableArray","array","Array","isArray","length","camelize","str","text","replace","_","c","toUpperCase","concat","substr","toLowerCase","getData","el","data","JSON","parse","dataset","e","hexToRgb","hexValue","hex","indexOf","substring","result","exec","m","r","g","b","parseInt","rgbaColor","color","arguments","undefined","alpha","colors","primary","secondary","success","info","warning","danger","light","dark","grays","white","100","200","300","400","500","600","700","800","900","1000","1100","black","hasClass","className","classList","value","includes","addClass","add","getOffset","rect","getBoundingClientRect","scrollLeft","pageXOffset","documentElement","scrollTop","pageYOffset","top","left","isScrolledIntoView","offsetTop","offsetLeft","width","offsetWidth","height","offsetHeight","offsetParent","all","innerHeight","innerWidth","partial","breakpoints","xs","sm","md","lg","xl","xxl","getBreakpoint","breakpoint","classes","split","filter","cls","pop","setCookie","name","expire","expires","Date","setTime","getTime","cookie","toUTCString","getCookie","keyValue","match","settings","tinymce","theme","chart","borderColor","newChart","config","ctx","getContext","Chart","getItemFromStore","key","defaultValue","store","localStorage","getItem","_unused","setItemToStore","payload","setItem","getStoreSpace","parseFloat","escape","encodeURIComponent","stringify","toFixed","utils","detectorInit","is","html","querySelector","opera","mobile","firefox","safari","ios","iphone","ipad","ie","edge","chrome","mac","windows","navigator","userAgent","$","click","removeClass","href","currentTarget","getAttribute","newPosition","offset","stop","animate","preventDefault","animateScroll","line","speed","children","setInterval","scrollWidth","Math","round","each","index","element","append","innerHTML","centerElement","ticketElement","inventoryElement","salesElement","employeeElement","supportElement","secureElement","parkingElement","quickSetupElement","ticketPosition","inventoryPosition","salesPosition","employeePosition","supportPosition","securePosition","parkingPosition","quickSetupPosition","scroll","$window","windowHeight","windowTopPosition","windowBottomPosition","$element","elementHeight","outerHeight","elementTopPosition","animateTile","css","animateTileReset","position","diffX","getBBox","diffY","animateElementsReset","logo","toggleSVG","navbarInit","navbarCollapse","colorName","bgClassName","shadowName","colorRgb","backgroundImage","transition","Selector","ClassNames","Events","navbar","allColors","_objectSpread","Object","keys","getComputedStyle","style","backgroundColor","remove","breakPoint"],"mappings":"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","file":"theme.min.js","sourcesContent":["/* -------------------------------------------------------------------------- */\r\n/*                                    Utils                                   */\r\n/* -------------------------------------------------------------------------- */\r\nconst docReady = (fn) => {\r\n  // see if DOM is already available\r\n  if (document.readyState === 'loading') {\r\n    document.addEventListener('DOMContentLoaded', fn);\r\n  } else {\r\n    setTimeout(fn, 1);\r\n  }\r\n};\r\n\r\nconst resize = (fn) => window.addEventListener('resize', fn);\r\n\r\nconst isIterableArray = (array) => Array.isArray(array) && !!array.length;\r\n\r\nconst camelize = (str) => {\r\n  const text = str.replace(/[-_\\s.]+(.)?/g, (_, c) => (c ? c.toUpperCase() : ''));\r\n  return `${text.substr(0, 1).toLowerCase()}${text.substr(1)}`;\r\n};\r\n\r\nconst getData = (el, data) => {\r\n  try {\r\n    return JSON.parse(el.dataset[camelize(data)]);\r\n  } catch (e) {\r\n    return el.dataset[camelize(data)];\r\n  }\r\n};\r\n\r\n/* ----------------------------- Colors function ---------------------------- */\r\n\r\nconst hexToRgb = (hexValue) => {\r\n  let hex;\r\n  hexValue.indexOf('#') === 0 ? (hex = hexValue.substring(1)) : (hex = hexValue);\r\n  // Expand shorthand form (e.g. \"03F\") to full form (e.g. \"0033FF\")\r\n  const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\r\n  const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex.replace(shorthandRegex, (m, r, g, b) => r + r + g + g + b + b));\r\n  return result ? [parseInt(result[1], 16), parseInt(result[2], 16), parseInt(result[3], 16)] : null;\r\n};\r\n\r\nconst rgbaColor = (color = '#fff', alpha = 0.5) => `rgba(${hexToRgb(color)}, ${alpha})`;\r\n\r\n/* --------------------------------- Colors --------------------------------- */\r\n\r\nconst colors = {\r\n  primary: '#2c7be5',\r\n  secondary: '#748194',\r\n  success: '#00d27a',\r\n  info: '#27bcfd',\r\n  warning: '#f5803e',\r\n  danger: '#e63757',\r\n  light: '#f9fafd',\r\n  dark: '#000',\r\n};\r\n\r\nconst grays = {\r\n  white: '#fff',\r\n  100: '#f9fafd',\r\n  200: '#edf2f9',\r\n  300: '#d8e2ef',\r\n  400: '#b6c1d2',\r\n  500: '#9da9bb',\r\n  600: '#748194',\r\n  700: '#5e6e82',\r\n  800: '#4d5969',\r\n  900: '#344050',\r\n  1000: '#232e3c',\r\n  1100: '#0b1727',\r\n  black: '#000',\r\n};\r\n\r\nconst hasClass = (el, className) => {\r\n  !el && false;\r\n  return el.classList.value.includes(className);\r\n};\r\n\r\nconst addClass = (el, className) => {\r\n  el.classList.add(className);\r\n};\r\n\r\nconst getOffset = (el) => {\r\n  const rect = el.getBoundingClientRect();\r\n  const scrollLeft = window.pageXOffset || document.documentElement.scrollLeft;\r\n  const scrollTop = window.pageYOffset || document.documentElement.scrollTop;\r\n  return { top: rect.top + scrollTop, left: rect.left + scrollLeft };\r\n};\r\n\r\nconst isScrolledIntoView = (el) => {\r\n  let top = el.offsetTop;\r\n  let left = el.offsetLeft;\r\n  const width = el.offsetWidth;\r\n  const height = el.offsetHeight;\r\n\r\n  while (el.offsetParent) {\r\n    // eslint-disable-next-line no-param-reassign\r\n    el = el.offsetParent;\r\n    top += el.offsetTop;\r\n    left += el.offsetLeft;\r\n  }\r\n\r\n  return {\r\n    all:\r\n      top >= window.pageYOffset\r\n      && left >= window.pageXOffset\r\n      && top + height <= window.pageYOffset + window.innerHeight\r\n      && left + width <= window.pageXOffset + window.innerWidth,\r\n    partial:\r\n      top < window.pageYOffset + window.innerHeight\r\n      && left < window.pageXOffset + window.innerWidth\r\n      && top + height > window.pageYOffset\r\n      && left + width > window.pageXOffset,\r\n  };\r\n};\r\n\r\nconst breakpoints = {\r\n  xs: 0,\r\n  sm: 576,\r\n  md: 768,\r\n  lg: 992,\r\n  xl: 1200,\r\n  xxl: 1540,\r\n};\r\n\r\nconst getBreakpoint = (el) => {\r\n  const classes = el && el.classList.value;\r\n  let breakpoint;\r\n  if (classes) {\r\n    breakpoint = breakpoints[\r\n      classes\r\n        .split(' ')\r\n        .filter((cls) => cls.includes('navbar-expand-'))\r\n        .pop()\r\n        .split('-')\r\n        .pop()\r\n    ];\r\n  }\r\n  return breakpoint;\r\n};\r\n\r\n/* --------------------------------- Cookie --------------------------------- */\r\n\r\nconst setCookie = (name, value, expire) => {\r\n  const expires = new Date();\r\n  expires.setTime(expires.getTime() + expire);\r\n  document.cookie = `${name}=${value};expires=${expires.toUTCString()}`;\r\n};\r\n\r\nconst getCookie = (name) => {\r\n  const keyValue = document.cookie.match(`(^|;) ?${name}=([^;]*)(;|$)`);\r\n  return keyValue ? keyValue[2] : keyValue;\r\n};\r\n\r\nconst settings = {\r\n  tinymce: { theme: 'oxide' },\r\n  chart: { borderColor: 'rgba(255, 255, 255, 0.8)' }\r\n};\r\n\r\n/* -------------------------- Chart Initialization -------------------------- */\r\n\r\nconst newChart = (chart, config) => {\r\n  const ctx = chart.getContext('2d');\r\n  return new window.Chart(ctx, config);\r\n};\r\n\r\n/* ---------------------------------- Store --------------------------------- */\r\n\r\nconst getItemFromStore = (key, defaultValue, store = localStorage) => {\r\n  try {\r\n    return JSON.parse(store.getItem(key)) || defaultValue;\r\n  } catch {\r\n    return store.getItem(key) || defaultValue;\r\n  }\r\n};\r\n\r\nconst setItemToStore = (key, payload, store = localStorage) =>\r\n  store.setItem(key, payload);\r\nconst getStoreSpace = (store = localStorage) =>\r\n  parseFloat((escape(encodeURIComponent(JSON.stringify(store))).length / (1024 * 1024)).toFixed(2));\r\n\r\nconst utils = {\r\n  docReady,\r\n  resize,\r\n  isIterableArray,\r\n  camelize,\r\n  getData,\r\n  hasClass,\r\n  addClass,\r\n  hexToRgb,\r\n  rgbaColor,\r\n  colors,\r\n  grays,\r\n  getOffset,\r\n  isScrolledIntoView,\r\n  getBreakpoint,\r\n  setCookie,\r\n  getCookie,\r\n  newChart,\r\n  settings,\r\n  getItemFromStore,\r\n  setItemToStore,\r\n  getStoreSpace\r\n};\r\n\r\nexport default utils;\r\n","import { addClass } from './utils';\r\n/* -------------------------------------------------------------------------- */\r\n/*                                  Detector                                  */\r\n/* -------------------------------------------------------------------------- */\r\n\r\nconst detectorInit = () => {\r\n  const { is } = window;\r\n  const html = document.querySelector('html');\r\n  is.opera() && addClass(html, 'opera');\r\n  is.mobile() && addClass(html, 'mobile');\r\n  is.firefox() && addClass(html, 'firefox');\r\n  is.safari() && addClass(html, 'safari');\r\n  is.ios() && addClass(html, 'ios');\r\n  is.iphone() && addClass(html, 'iphone');\r\n  is.ipad() && addClass(html, 'ipad');\r\n  is.ie() && addClass(html, 'ie');\r\n  is.edge() && addClass(html, 'edge');\r\n  is.chrome() && addClass(html, 'chrome');\r\n  is.mac() && addClass(html, 'osx');\r\n  is.windows() && addClass(html, 'windows');\r\n  navigator.userAgent.match('CriOS') && addClass(html, 'chrome');\r\n\r\n};\r\n\r\nexport default detectorInit;\r\n","/** Animation scripts */\r\n$(() => {\r\n  /** Scroll to sections */\r\n  $('#header .navbar-nav li a, #home a').click((e) => {\r\n    $('#header .navbar-nav li a.active').removeClass('active');\r\n    const href = e.currentTarget.getAttribute('href');\r\n    $(`#header .navbar-nav li a[href=\"${href}\"]`).addClass('active');\r\n    const newPosition = $(href).offset();\r\n    $('html, body').stop().animate({ scrollTop: newPosition.top - 50 }, 500);\r\n    e.preventDefault();\r\n  });\r\n\r\n  /** Client auto scroll */\r\n  const animateScroll = (line, speed) => {\r\n    const children = line.children();\r\n    setInterval(() => {\r\n      const scrollWidth = Math.round(line[0].scrollWidth);\r\n      const scrollLeft = line.scrollLeft();\r\n      const currentScrollLeft = Math.round(scrollLeft + Math.round(line.width()));\r\n      if (currentScrollLeft > scrollWidth - 1) {\r\n        children.each((index, element) => { line.append(`<p>${element.innerHTML}</p>`); });\r\n      }\r\n      line.scrollLeft(scrollLeft + 1);\r\n    }, speed);\r\n  };\r\n  animateScroll($('#clients .client-scroll:nth-child(1)'), 30);\r\n  animateScroll($('#clients .client-scroll:nth-child(2)'), 15);\r\n\r\n  /** Product SVG Animation */\r\n  $(window).scroll(() => {\r\n    const $window = $(window);\r\n    const windowHeight = $window.height();\r\n    const windowTopPosition = $window.scrollTop();\r\n    const windowBottomPosition = windowTopPosition + windowHeight;\r\n    const $element = $('#product');\r\n    const elementHeight = $element.outerHeight();\r\n    const elementTopPosition = $element.offset().top;\r\n    const elementBottomPosition = elementTopPosition + elementHeight;\r\n    if (elementBottomPosition >= windowTopPosition && elementTopPosition <= windowBottomPosition) {\r\n      setTimeout(() => { $('#product svg').addClass('active'); }, 500);\r\n    } else {\r\n      $('#product svg').removeClass('active');\r\n    }\r\n  });\r\n\r\n  /** SVG Animation */\r\n\r\n  // Get element instances\r\n  let centerElement;\r\n  let ticketElement;\r\n  let inventoryElement;\r\n  let salesElement;\r\n  let employeeElement;\r\n  let supportElement;\r\n  let secureElement;\r\n  let parkingElement;\r\n  let quickSetupElement;\r\n\r\n  //  Get X and Y of elements\r\n  let ticketPosition;\r\n  let inventoryPosition;\r\n  let salesPosition;\r\n  let employeePosition;\r\n  let supportPosition;\r\n  let securePosition;\r\n  let parkingPosition;\r\n  let quickSetupPosition;\r\n\r\n  const animateTile = (element) => {\r\n    element.css('transition', '0.5s all ease-out');\r\n    element.css('transform', 'translate(0px, 0px)');\r\n    element.css('transform-origin', 'center');\r\n  };\r\n\r\n  const animateTileReset = (element, position) => {\r\n    const diffX = centerElement.width() / 2 + centerElement.offset().left - position.left - element[0].getBBox().width / 2;\r\n    const diffY = centerElement.height() / 2 + centerElement.offset().top - position.top - element[0].getBBox().height / 2;\r\n    element.css('transition', '0.5s all ease-out');\r\n    element.css('transform', `translate(${diffX}px, ${diffY}px)`);\r\n    element.css('transform-origin', 'center');\r\n    element.css('z-index', '-10');\r\n  };\r\n\r\n  const animateElements = () => {\r\n    const offset = 100;\r\n    const logo = $('#reason .svg-wrapper svg #logo');\r\n    setTimeout(() => { logo.css('animation', '0.4s ease-in spin forwards'); }, offset + 0);\r\n    setTimeout(() => { animateTile(ticketElement, ticketPosition); }, offset + 0);\r\n    setTimeout(() => { animateTile(inventoryElement, inventoryPosition); }, offset + 50);\r\n    setTimeout(() => { animateTile(salesElement, salesPosition); }, offset + 100);\r\n    setTimeout(() => { animateTile(employeeElement, employeePosition); }, offset + 150);\r\n    setTimeout(() => { animateTile(supportElement, supportPosition); }, offset + 200);\r\n    setTimeout(() => { animateTile(secureElement, securePosition); }, offset + 250);\r\n    setTimeout(() => { animateTile(parkingElement, parkingPosition); }, offset + 300);\r\n    setTimeout(() => { animateTile(quickSetupElement, quickSetupPosition); }, offset + 350);\r\n  };\r\n\r\n  const animateElementsReset = () => {\r\n    const logo = $('#features .svg-wrapper svg #logo');\r\n    setTimeout(() => { logo.css('animation', 'none'); }, 0);\r\n    setTimeout(() => { animateTileReset(ticketElement, ticketPosition); }, 0);\r\n    setTimeout(() => { animateTileReset(inventoryElement, inventoryPosition); }, 50);\r\n    setTimeout(() => { animateTileReset(salesElement, salesPosition); }, 100);\r\n    setTimeout(() => { animateTileReset(employeeElement, employeePosition); }, 150);\r\n    setTimeout(() => { animateTileReset(supportElement, supportPosition); }, 200);\r\n    setTimeout(() => { animateTileReset(secureElement, securePosition); }, 250);\r\n    setTimeout(() => { animateTileReset(parkingElement, parkingPosition); }, 300);\r\n    setTimeout(() => { animateTileReset(quickSetupElement, quickSetupPosition); }, 350);\r\n  };\r\n\r\n  const toggleSVG = () => {\r\n    centerElement = $('#features .svg-wrapper');\r\n    ticketElement = $('#features .svg-wrapper svg #ticket');\r\n    inventoryElement = $('#features .svg-wrapper svg #inventory');\r\n    salesElement = $('#features .svg-wrapper svg #sales');\r\n    employeeElement = $('#features .svg-wrapper svg #employee');\r\n    supportElement = $('#features .svg-wrapper svg #support');\r\n    secureElement = $('#features .svg-wrapper svg #secure');\r\n    parkingElement = $('#features .svg-wrapper svg #parking');\r\n    quickSetupElement = $('#features .svg-wrapper svg #quick-setup');\r\n\r\n    ticketPosition = ticketElement.offset();\r\n    inventoryPosition = inventoryElement.offset();\r\n    salesPosition = salesElement.offset();\r\n    employeePosition = employeeElement.offset();\r\n    supportPosition = supportElement.offset();\r\n    securePosition = secureElement.offset();\r\n    parkingPosition = parkingElement.offset();\r\n    quickSetupPosition = quickSetupElement.offset();\r\n  };\r\n\r\n  toggleSVG();\r\n\r\n  $(window).resize(() => {\r\n    toggleSVG();\r\n    animateElementsReset();\r\n  });\r\n\r\n  $(window).scroll(() => {\r\n    const $window = $(window);\r\n    const windowHeight = $window.height();\r\n    const windowTopPosition = $window.scrollTop();\r\n    const windowBottomPosition = windowTopPosition + windowHeight;\r\n    const $element = $('#features');\r\n    const elementHeight = $element.outerHeight();\r\n    const elementTopPosition = $element.offset().top;\r\n    const elementBottomPosition = elementTopPosition + elementHeight;\r\n    if (elementBottomPosition >= windowTopPosition && elementTopPosition <= windowBottomPosition) {\r\n      setTimeout(() => { animateElements(); }, 500);\r\n    } else {\r\n      setTimeout(() => { animateElementsReset(); }, 0);\r\n    }\r\n  });\r\n\r\n});\r\n","import utils from './utils';\r\n/*-----------------------------------------------\r\n|   Top navigation opacity on scroll\r\n-----------------------------------------------*/\r\nconst navbarInit = () => {\r\n  const Selector = {\r\n    NAVBAR: '[data-navbar-on-scroll]',\r\n    NAVBAR_COLLAPSE: '.navbar-collapse',\r\n    NAVBAR_TOGGLER: '.navbar-toggler'\r\n  };\r\n  const ClassNames = { COLLAPSED: 'collapsed' };\r\n  const Events = {\r\n    SCROLL: 'scroll',\r\n    SHOW_BS_COLLAPSE: 'show.bs.collapse',\r\n    HIDE_BS_COLLAPSE: 'hide.bs.collapse',\r\n    HIDDEN_BS_COLLAPSE: 'hidden.bs.collapse'\r\n  };\r\n  const DataKey = { NAVBAR_ON_SCROLL: 'navbar-light-on-scroll' };\r\n  const navbar = document.querySelector(Selector.NAVBAR);\r\n\r\n  if (navbar) {\r\n    const windowHeight = window.innerHeight;\r\n    const html = document.documentElement;\r\n    const navbarCollapse = navbar.querySelector(Selector.NAVBAR_COLLAPSE);\r\n    const allColors = { ...utils.colors, ...utils.grays };\r\n\r\n    const name = utils.getData(navbar, DataKey.NAVBAR_ON_SCROLL);\r\n    const colorName = Object.keys(allColors).includes(name) ? name : 'white';\r\n    const color = allColors[colorName];\r\n    const bgClassName = `bg-${colorName}`;\r\n    const shadowName = 'shadow-transition';\r\n    const colorRgb = utils.hexToRgb(color);\r\n    const { backgroundImage } = window.getComputedStyle(navbar);\r\n    const transition = 'background-color 0.35s ease';\r\n    navbar.style.backgroundImage = 'none';\r\n\r\n    // Change navbar background color on scroll\r\n    window.addEventListener(Events.SCROLL, () => {\r\n      const { scrollTop } = html;\r\n      let alpha = (scrollTop / windowHeight) * 5;\r\n      alpha >= 1 && (alpha = 1);\r\n      navbar.style.backgroundColor = `rgba(${colorRgb[0]}, ${colorRgb[1]}, ${colorRgb[2]}, ${alpha})`;\r\n      navbar.style.backgroundImage = (alpha > 0 || utils.hasClass(navbarCollapse, 'show')) ? backgroundImage : 'none';\r\n      (alpha > 0 || utils.hasClass(navbarCollapse, 'show')) ? navbar.classList.add(shadowName) : navbar.classList.remove(shadowName);\r\n    });\r\n\r\n    // Toggle bg class on window resize\r\n    utils.resize(() => {\r\n      const breakPoint = utils.getBreakpoint(navbar);\r\n      if (window.innerWidth > breakPoint) {\r\n        navbar.style.backgroundImage = html.scrollTop ? backgroundImage : 'none';\r\n        navbar.style.transition = 'none';\r\n      } else if (!utils.hasClass(navbar.querySelector(Selector.NAVBAR_TOGGLER), ClassNames.COLLAPSED)) {\r\n        navbar.classList.add(bgClassName);\r\n        navbar.classList.add(shadowName);\r\n        navbar.style.backgroundImage = backgroundImage;\r\n      }\r\n      if (window.innerWidth <= breakPoint) {\r\n        navbar.style.transition = utils.hasClass(navbarCollapse, 'show') ? transition : 'none';\r\n      }\r\n    });\r\n\r\n    navbarCollapse.addEventListener(Events.SHOW_BS_COLLAPSE, () => {\r\n      navbar.classList.add(bgClassName);\r\n      navbar.classList.add(shadowName);\r\n      navbar.style.backgroundImage = backgroundImage;\r\n      navbar.style.transition = transition;\r\n    });\r\n\r\n    navbarCollapse.addEventListener(Events.HIDE_BS_COLLAPSE, () => {\r\n      navbar.classList.remove(bgClassName);\r\n      navbar.classList.remove(shadowName);\r\n      !html.scrollTop && (navbar.style.backgroundImage = 'none');\r\n    });\r\n\r\n    navbarCollapse.addEventListener(Events.HIDDEN_BS_COLLAPSE, () => {\r\n      navbar.style.transition = 'none';\r\n    });\r\n  }\r\n};\r\n\r\nexport default navbarInit;\r\n","import { docReady } from './utils';\r\nimport navbarInit from './bootstrap-navbar';\r\nimport detectorInit from './detector';\r\n\r\n// /* -------------------------------------------------------------------------- */\r\n// /*                            Theme Initialization                            */\r\n// /* -------------------------------------------------------------------------- */\r\n\r\ndocReady(navbarInit);\r\ndocReady(detectorInit);\r\n"]}